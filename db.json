{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"themes/next/source/CNAME","path":"CNAME","modified":0,"renderable":1},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/js/affix.js","path":"js/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/algolia-search.js","path":"js/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/exturl.js","path":"js/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/js.cookie.js","path":"js/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/motion.js","path":"js/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/next-boot.js","path":"js/next-boot.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/post-details.js","path":"js/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/scrollspy.js","path":"js/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/scroll-cookie.js","path":"js/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.png","path":"images/avatar.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/schemes/pisces.js","path":"js/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1}],"Cache":[{"_id":"source/404.md","hash":"0ea1e2643c5808b517e26a178bcbf5f0fc2f1fef","modified":1554933543687},{"_id":"source/CNAME","hash":"c4450a94d9d6235fced7959242aa649e085b58dd","modified":1555950597435},{"_id":"themes/next/.all-contributorsrc","hash":"d139a3b623b2e40bbff5c96ad44adf7dbdbc5be1","modified":1554931951703},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1554931951703},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1554931951703},{"_id":"themes/next/.eslintrc.json","hash":"cc5f297f0322672fe3f684f823bc4659e4a54c41","modified":1554931951703},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1554931951703},{"_id":"themes/next/.gitignore","hash":"3558a8b174618c7a643aceb13233edd729813f9a","modified":1554931951703},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1554931951703},{"_id":"themes/next/LICENSE.md","hash":"18144d8ed58c75af66cb419d54f3f63374cd5c5b","modified":1554931951707},{"_id":"themes/next/.travis.yml","hash":"3d1dc928c4a97933e64379cfde749dedf62f252c","modified":1554931951703},{"_id":"themes/next/README.md","hash":"7958c3f70b2133b479ddaf525cc4b6d87a37e04a","modified":1554931951707},{"_id":"themes/next/bower.json","hash":"8fa4f26f5205cbc64d33318d1be5d35b2667398c","modified":1554931951707},{"_id":"themes/next/_config.yml","hash":"be7274720c47809e5ac45b4827f118b0fa1ca60a","modified":1564685384075},{"_id":"themes/next/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1554931951707},{"_id":"themes/next/gulpfile.coffee","hash":"23bd9587807edc4dbecb5c5a29ab96ade24458b5","modified":1554931951711},{"_id":"themes/next/package.json","hash":"888bcacea284ec536a1428ad957a78dfb3ec255d","modified":1554931951715},{"_id":"source/_posts/RoverPi小车_第三篇_系统安装和网络设置.md","hash":"be31e61c0cd200a646e04383183a7375deba2a1e","modified":1561053313864},{"_id":"source/_posts/Particle-Filter-on-Pose-Tracking.md","hash":"36b45060bd2176f4bae32ce2583e7d2ee6eb32f8","modified":1561053468189},{"_id":"source/_posts/RoverPi小车_第一篇_前世今生.md","hash":"fc769271a1ec930da05870cebd158c28caf5d31b","modified":1561053361874},{"_id":"source/_posts/venv_—_Create_Virtual_Environments.md","hash":"ac6716f30b3a6572a3ed6cedf601432a5fce3702","modified":1561053288615},{"_id":"source/_posts/代码赏析_Random_Forest_Tree_Planning.md","hash":"cd758a1d7a67557131ec3e196996d7fc9033f29b","modified":1564618581918},{"_id":"source/_posts/Summary-After-RoboND.md","hash":"20b139eb5642aae7add5fee5f0fafb45a8f6b47a","modified":1563839709873},{"_id":"source/_posts/代码赏析_Stanley_Path_Tracking_Controller.md","hash":"4ccb9bb6641a33cfe9f6f58b113d61cbca5d2b6d","modified":1564679248921},{"_id":"source/about/index.md","hash":"15d3e6500fcf7260bafb530d558ddbf8ea9eca19","modified":1554933980016},{"_id":"source/projects/index.md","hash":"a686150d1487ff75b5502010b53a6482984386db","modified":1564680381409},{"_id":"source/categories/index.md","hash":"1264dc90ef1aa2fa525dcb18c26989bf3f3207f8","modified":1554933974128},{"_id":"source/tags/index.md","hash":"597f8d6c8358e7412ead9e0ef886c09c8f848118","modified":1554933972060},{"_id":"themes/next/.git/COMMIT_EDITMSG","hash":"813fc7a5cf9e3579e51707038107d386739a03fd","modified":1555011212991},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1554931951699},{"_id":"source/_posts/RoverPi小车_第二篇_硬件选型.md","hash":"1ae69d4adcb05b7b52006e9b6253b04d0aa6dc38","modified":1561053350041},{"_id":"themes/next/.git/config","hash":"82f7b399373f85ef2a6107c914e957e9f18fa3e3","modified":1554931951699},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1554931947591},{"_id":"themes/next/.git/index","hash":"0732e45bdb157e9c695354061680f7fcd0eb2afa","modified":1558042503440},{"_id":"themes/next/.git/packed-refs","hash":"602ffd7ba3b96db56474ede9ad29d84e936500e5","modified":1554931951699},{"_id":"themes/next/.github/CODE_OF_CONDUCT.md","hash":"c149f003d03501565e7688915cd8f2e99fbf8f42","modified":1554931951703},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"492b2c159d871e5b5d4c70d259f36e603afe192d","modified":1554931951703},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"00c25366764e6b9ccb40b877c60dc13b2916bbf7","modified":1554931951703},{"_id":"themes/next/.github/config.yml","hash":"8a5cbf5aa9529390fe0a782758aca9c3a02f9dcf","modified":1554931951703},{"_id":"themes/next/.github/auto_assign.yml","hash":"cb68a1dca1c4623448c2ca899614a9f21df1b036","modified":1554931951703},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"285a95aca36e0ac770bcde2b35e3b572d45d1518","modified":1554931951703},{"_id":"themes/next/.github/eslint-disable-bot.yml","hash":"16541fb7b80f5ab90135db96285badb63c4d7d3e","modified":1554931951703},{"_id":"themes/next/.github/lock.yml","hash":"585d2c471047be320aa62f2b74dad797bf09c530","modified":1554931951703},{"_id":"themes/next/.github/topissuebot.yml","hash":"10665bf2b5aba351725715c71e94ad183a0e8f18","modified":1554931951703},{"_id":"themes/next/.github/mergeable.yml","hash":"8e3a6abc74b5cba57f9586fe6d98762fd4fc9b04","modified":1554931951703},{"_id":"themes/next/.github/weekly-digest.yml","hash":"404e4ccb7fcd6587bc9b0247a7a7ff256d21f2cb","modified":1554931951703},{"_id":"themes/next/.github/support.yml","hash":"d75db6ffa7b4ca3b865a925f9de9aef3fc51925c","modified":1554931951703},{"_id":"themes/next/.github/stale.yml","hash":"41bf97ee86b8940a0b2e754499ec77fd2b44b717","modified":1554931951703},{"_id":"themes/next/.github/release-drafter.yml","hash":"b4476ada5c62ee7d63ba2e59ead2ec4897086e3c","modified":1554931951703},{"_id":"themes/next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1554931951707},{"_id":"themes/next/docs/AUTHORS.md","hash":"7b24be2891167bdedb9284a682c2344ec63e50b5","modified":1554931951707},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"0d2f22ea09dd1ef63c66164e048d8239d2ccb2b8","modified":1554931951707},{"_id":"themes/next/docs/INSTALLATION.md","hash":"2bbdd6c1751b2b42ce9b9335da420c6026a483e9","modified":1554931951707},{"_id":"themes/next/docs/DATA-FILES.md","hash":"8e1962dd3e1b700169b3ae5bba43992f100651ce","modified":1554931951707},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"212a36d57495990b5f56e46ca8dce1d76c199660","modified":1554931951707},{"_id":"themes/next/docs/LICENSE.txt","hash":"368bf2c29d70f27d8726dd914f1b3211cae4bbab","modified":1554931951707},{"_id":"themes/next/docs/MATH.md","hash":"e6023505dcccaef0b856102543585a13fc6af0b1","modified":1554931951707},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"ad57c168d12ba01cf144a1ea0627b2ffd1847d3e","modified":1554931951707},{"_id":"themes/next/languages/de.yml","hash":"9e524b2bdfb848504b93a51c5650e76bba5fa9e0","modified":1554931951711},{"_id":"themes/next/languages/default.yml","hash":"c540c3a0d7db2d4239293c8783881962640b6c34","modified":1554931951711},{"_id":"themes/next/languages/en.yml","hash":"c540c3a0d7db2d4239293c8783881962640b6c34","modified":1554931951711},{"_id":"themes/next/languages/es.yml","hash":"1752429687861b5cedd063c6ebe5dacefbe7e5a7","modified":1554931951711},{"_id":"themes/next/languages/fr.yml","hash":"7005c2b42c2c6e82bd7a1be5cc2f443b5fc79105","modified":1554931951711},{"_id":"themes/next/languages/id.yml","hash":"1c4868837f5109f1df863b04fe627352c31d404b","modified":1554931951711},{"_id":"themes/next/languages/it.yml","hash":"b30ff77ad8044e3b021a3b09187cd377dc789fd2","modified":1554931951711},{"_id":"themes/next/languages/ja.yml","hash":"1dc35e436da6214cdb3c2ff44bc4a06d0be5b9a0","modified":1554931951711},{"_id":"themes/next/languages/ko.yml","hash":"20bfaa7600d35235996c18e5c13dcef89c119626","modified":1554931951711},{"_id":"themes/next/languages/nl.yml","hash":"1c44b3cb2f817808607f3bf6ef47f58ce7599995","modified":1554931951711},{"_id":"themes/next/languages/pt-BR.yml","hash":"08b913a5cf4cc160083069cb4dfb2d66eecd1218","modified":1554931951711},{"_id":"themes/next/languages/pt.yml","hash":"8ddac820e2c17b484b56c0da8881e142b10e221b","modified":1554931951711},{"_id":"themes/next/languages/ru.yml","hash":"db0644e738d2306ac38567aa183ca3e859a3980f","modified":1554931951711},{"_id":"themes/next/languages/tr.yml","hash":"c5f0c20743b1dd52ccb256050b1397d023e6bcd9","modified":1554931951711},{"_id":"themes/next/languages/vi.yml","hash":"ba7aff8f88e03f69a0acf7f1b90ee03e077ee88e","modified":1554931951711},{"_id":"themes/next/languages/uk.yml","hash":"1eb59e581568da9a81d6e20541b4ada5fc1c55c0","modified":1554931951711},{"_id":"themes/next/languages/zh-CN.yml","hash":"7babc49473860a040ab41f3081192960c5e1450d","modified":1564680687606},{"_id":"themes/next/languages/zh-HK.yml","hash":"7903b96912c605e630fb695534012501b2fad805","modified":1554931951711},{"_id":"themes/next/languages/zh-TW.yml","hash":"6e6d2cd8f4244cb1b349b94904cb4770935acefd","modified":1554931951711},{"_id":"themes/next/layout/_layout.swig","hash":"74701fcf2303d59400587436ab4c244e04df7ad9","modified":1554931951711},{"_id":"themes/next/layout/archive.swig","hash":"7e8f3a41a68e912f2b2aaba905d314306ccaf794","modified":1554931951715},{"_id":"themes/next/layout/category.swig","hash":"dda0e6b2139decaf5e865d22ec9d45fdb615a703","modified":1554931951715},{"_id":"themes/next/layout/index.swig","hash":"c2a3896c64e96790edc10426ef586b6186a87f46","modified":1554931951715},{"_id":"themes/next/layout/page.swig","hash":"d8a6cbf6f611c5d68d5da430cb6dc7010ff2c7e0","modified":1554931951715},{"_id":"themes/next/layout/post.swig","hash":"f74929fd792541916eb25c2addfb35431be071ba","modified":1554931951715},{"_id":"themes/next/layout/schedule.swig","hash":"3268dd3d90d8b0e142cfa1a2ebb23355baeda148","modified":1554931951715},{"_id":"themes/next/layout/tag.swig","hash":"a6be69a90924c9d2f4d90fb4867234859bd2c2e9","modified":1554931951715},{"_id":"themes/next/scripts/merge-configs.js","hash":"33afe97284d34542015d358a720823feeebef120","modified":1554931951715},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1554931951719},{"_id":"themes/next/source/CNAME","hash":"285c42faee8a2f0c26d9568d3396b09e7f449255","modified":1555441860555},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1554931951731},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1554931951731},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1554931951731},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1554931951723},{"_id":"source/_posts/代码赏析_Stanley_Path_Tracking_Controller/stanley-equation.png","hash":"919d704f1808f842039d2522b9443375458d74c6","modified":1564619553404},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1554931947595},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1554931947595},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1554931947595},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1554931947595},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1554931947595},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1554931947595},{"_id":"themes/next/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1554931947591},{"_id":"themes/next/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1554931947595},{"_id":"themes/next/.git/logs/HEAD","hash":"dea732e43cf51de339e94cd7aab5f0d4227bd653","modified":1555011212991},{"_id":"source/_posts/代码赏析_Stanley_Path_Tracking_Controller/stanley-geometry.png","hash":"899045012857a344cda5cb18d78d65d96173c2b6","modified":1564619293350},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"18be3eb275c1decd3614e139f5a311b75f1b0ab8","modified":1554931947595},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1554931947595},{"_id":"themes/next/.github/ISSUE_TEMPLATE/bug-report.md","hash":"c37a60580c901c79ccb22564b228a46e06207445","modified":1554931951703},{"_id":"themes/next/.github/ISSUE_TEMPLATE/feature-request.md","hash":"07c423cce4157b8e2dbf60907ccbf3f18c4cf98a","modified":1554931951703},{"_id":"themes/next/.github/ISSUE_TEMPLATE/non-english.md","hash":"0b0727ff4d5180ae67f930fb4f8e9488e33eda9f","modified":1554931951703},{"_id":"themes/next/.github/ISSUE_TEMPLATE/custom-issue-template.md","hash":"57e1e06e845193e80c7df4a4454af28352526f7a","modified":1554931951703},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"f3eec572a7d83542e2710a7404082014aaa1a5e7","modified":1554931951711},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"b218e30df4126b6adc87684775ac4c86ea7f7958","modified":1554931951707},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"caa624092175d44e3d3a8c6ca23922718da2354c","modified":1554931951707},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"115ffbde2b3ce01ef1f8c2b3833e6f6794650132","modified":1554931951711},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"b19a6e0ae96eb7c756fb5b1ba03934c7f9cbb3c3","modified":1554931951711},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"bc43beb3af74d64fbd3920539d08861e4cadb9a0","modified":1554931951711},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"5da70d7fa0c988a66a469b9795d33d471a4a4433","modified":1554931951711},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"b76ccbc658024e86639cfa5f8a3817647fc8d651","modified":1554931951711},{"_id":"themes/next/docs/zh-CN/README.md","hash":"1b5bd6ae5781137d81dc8667e912d3df6eeab260","modified":1554931951711},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"d6d20f60f77a76c77f8e65d0c9adbd79d0274557","modified":1554931951707},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"6c5d69e94961c793da156217ecf1179e868d7ba1","modified":1554931951707},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"b1dd18d9b890b21718883ea1832e7e02a773104a","modified":1554931951707},{"_id":"themes/next/docs/ru/README.md","hash":"4d7ef717d0b57288e606996ee56c20ffd59d5a99","modified":1554931951707},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"89b0a0e64637bf5b0cfea0a23642df3d95eedfa4","modified":1554931951711},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"480d93619479dcfcbec6906803bb38b2dfbeae53","modified":1554931951711},{"_id":"themes/next/layout/_macro/post.swig","hash":"10187fafe566b3e5bfa4e7e10c77ea9026d9081d","modified":1554931951711},{"_id":"themes/next/layout/_custom/head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1554931951711},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1554931951711},{"_id":"themes/next/layout/_third-party/baidu-push.swig","hash":"4ccf2abbfd070874265b0436a3eff21f7c998dfb","modified":1554931951715},{"_id":"themes/next/layout/_third-party/bookmark.swig","hash":"10b61a8bac671e375916a4d234c120117098a78f","modified":1554931951715},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1554931951711},{"_id":"themes/next/layout/_third-party/chatra.swig","hash":"eefb68b69b4b0ed558ee0324ccd711990059b20d","modified":1554931951715},{"_id":"themes/next/layout/_third-party/copy-code.swig","hash":"01ded5e1bad89a6f8d64cd063e3e4e42c20d33bc","modified":1554931951715},{"_id":"themes/next/layout/_third-party/mermaid.swig","hash":"d6e6ddda836bd9e2e8d9767a910c7d3280080e81","modified":1554931951715},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"2c4a66be4677d3e4dec3f169ac8a769098dad1fe","modified":1554931951715},{"_id":"themes/next/layout/_third-party/pangu.swig","hash":"c28f9dc96ab735daeb7f599f86470aa5a83c03cf","modified":1554931951715},{"_id":"themes/next/layout/_third-party/pdf.swig","hash":"810a9b2a6059f46c4a2ddb178f1eaa4c5e23750b","modified":1554931951715},{"_id":"themes/next/layout/_third-party/quicklink.swig","hash":"5db80e8d7ea3f29e998320f79508f7e14342a33c","modified":1554931951715},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"cbe40cb67dad15ade967b0f396c1a95b6871f76a","modified":1554931951715},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"2398e5cd0cb466953b6e7a42c2b2caddebf3c348","modified":1554931951715},{"_id":"themes/next/layout/_third-party/tidio.swig","hash":"912368c41de675f458b267a49a99ae3e7e420ebb","modified":1554931951715},{"_id":"themes/next/layout/_scripts/exturl.swig","hash":"61ae10d41f67ece004a025077fdb28724af05090","modified":1554931951715},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"50be1762f60222379a8bef5e42ab1a0f3872b7ff","modified":1554931951715},{"_id":"themes/next/layout/_scripts/next-boot.swig","hash":"012e3ece672cc3b13d5e032139f328d3426d7d65","modified":1554931951715},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"edaff4766e0c05fd5c889d9dd32884d376bef9d9","modified":1554931951715},{"_id":"themes/next/layout/_scripts/scroll-cookie.swig","hash":"ccd13d73429ef91ef5e8b7d9fa43c8188facdf41","modified":1554931951715},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"83470eb401f78f4683907c48ad6760b90730daa3","modified":1554931951715},{"_id":"themes/next/layout/_partials/comments.swig","hash":"5352f96f4544c1520babf1cec7b44ddf2f8057b3","modified":1554931951715},{"_id":"themes/next/layout/_partials/footer.swig","hash":"07f88421bda86d9d5ff32d130b1cb1196b99a326","modified":1554931951715},{"_id":"themes/next/layout/_partials/github-banner.swig","hash":"6357537ac0bb114aed4d61bafb39e6690a413697","modified":1554931951715},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"dbe321bcf3cf45917cc11a3e3f50d8572bac2c70","modified":1554931951715},{"_id":"themes/next/layout/_partials/post-edit.swig","hash":"06dac109504812b63766a80ede9ddacbd42d227d","modified":1554931951715},{"_id":"themes/next/scripts/helpers/engine.js","hash":"60eb1554456d9d0e5afc4a2d16f1580a0aa02da8","modified":1554931951715},{"_id":"themes/next/scripts/helpers/next-url.js","hash":"799a042bbf497a4c7a2981aa2014ff28fa1bb382","modified":1554931951715},{"_id":"themes/next/scripts/filters/exturl.js","hash":"79ad823ca803cb00e0bfc648aa6c9d59711e0519","modified":1554931951715},{"_id":"themes/next/scripts/tags/button.js","hash":"f3b4f7ae7e58072bbf410d950a99a0b53cbc866d","modified":1554931951719},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"f13430d9d1c9773b390787c2f046bb1f12a79878","modified":1554931951719},{"_id":"themes/next/scripts/tags/exturl.js","hash":"d605918cf819887e9555212dbe12da97fd887a0b","modified":1554931951719},{"_id":"themes/next/scripts/tags/full-image.js","hash":"fcb41c1c81560ed49dc4024654388a28ee7d32b0","modified":1554931951719},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"598220fa92ff3540dcab74f633ba41523daa8364","modified":1554931951719},{"_id":"themes/next/scripts/tags/label.js","hash":"fc5b267d903facb7a35001792db28b801cccb1f8","modified":1554931951719},{"_id":"themes/next/scripts/tags/include-raw.js","hash":"5db59d56f4f4082382bf1c16722e6c383892b0c5","modified":1554931951719},{"_id":"themes/next/scripts/tags/mermaid.js","hash":"983c6c4adea86160ecc0ba2204bc312aa338121d","modified":1554931951719},{"_id":"themes/next/scripts/tags/note.js","hash":"0a02bb4c15aec41f6d5f1271cdb5c65889e265d9","modified":1554931951719},{"_id":"themes/next/scripts/tags/pdf.js","hash":"f780cc72bff91d2720626e7af69eed25e9c12a29","modified":1554931951719},{"_id":"themes/next/scripts/tags/tabs.js","hash":"00ca6340d4fe0ccdae7525373e4729117775bbfa","modified":1554931951719},{"_id":"themes/next/scripts/tags/video.js","hash":"e5ff4c44faee604dd3ea9db6b222828c4750c227","modified":1554931951719},{"_id":"themes/next/source/css/main.styl","hash":"e010ec8ac73268a0f137204c89e0080ab8d59b3d","modified":1554931951723},{"_id":"themes/next/source/js/affix.js","hash":"a2aab233d99297435a5274bf512c3c753fe08e80","modified":1554931951723},{"_id":"themes/next/source/js/algolia-search.js","hash":"1f7f10c579e7703d0f6acb8b73f3d78a07d0c623","modified":1554931951723},{"_id":"themes/next/source/js/exturl.js","hash":"54825acc8de4793feac415be227b965428f4e97d","modified":1554931951723},{"_id":"themes/next/source/js/js.cookie.js","hash":"e0afce539f1fb81d59e3c6f0a68d736e2fb45d93","modified":1554931951723},{"_id":"themes/next/source/js/motion.js","hash":"a16bc0b701646bf6653484675f4d5dc0f892d184","modified":1554931951723},{"_id":"themes/next/source/js/next-boot.js","hash":"e0615efab5f81ba0fd39c0527eac31144deac7ce","modified":1554931951723},{"_id":"themes/next/source/js/post-details.js","hash":"0dde5e6d4547587662a3256317a9d5d1db507692","modified":1554931951723},{"_id":"themes/next/source/js/scrollspy.js","hash":"fa3c92968bcdbcb8d95a1729f7659d9753cbd077","modified":1554931951723},{"_id":"themes/next/source/js/scroll-cookie.js","hash":"d07b3776708d4ae79ed2037c4c7391d5c9b06b19","modified":1554931951723},{"_id":"themes/next/source/js/utils.js","hash":"3c987de7cfb944c33e9e527f1214724c7aafc796","modified":1554931951723},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1554931951723},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1554931951723},{"_id":"themes/next/source/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1554931951723},{"_id":"themes/next/source/images/avatar.png","hash":"5dda96f3273e716ede6b09ad32d791d080fb1b82","modified":1540595681266},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1554931951723},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1554931951723},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1554931951723},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1554931951723},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1554931951723},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1554931951723},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1554931951723},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1554931951723},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1554931951723},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1554931951723},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1554931951723},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1554931951723},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1554931951723},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1554931951723},{"_id":"themes/next/source/images/searchicon.png","hash":"025d64ba0160a3a2257dd2b3032b5f7c9dd9b82b","modified":1554931951723},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1554931951719},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1554931951719},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1554931951719},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1554931951723},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1554931951723},{"_id":"themes/next/.git/objects/14/ea649145f094da0ed5faef4ef1f13b363d5af5","hash":"e860107f925f60c4502a4a2a343805c435d5a011","modified":1555011194015},{"_id":"themes/next/.git/objects/13/3d505fd555541baf6eae3af96fcf7848bb89fd","hash":"8d2081f6fbbac69f68be3a5fba7200de0f17aa8a","modified":1555011212991},{"_id":"themes/next/.git/objects/54/5c3d3f2aec71d8c3d88630581e76dd50d3bd5d","hash":"6dc34c8ee7773524c51bd689c9ffe97a024e9094","modified":1554932692760},{"_id":"themes/next/.git/objects/2e/76613f544f301e8731f88c00948d5f6c95d567","hash":"47eb84476d811109cf9e420430d27815a7711c71","modified":1554932692756},{"_id":"themes/next/.git/objects/b2/b0548d52e4a7d3011aa8a8bf714d894db39451","hash":"46ddc958094fbedbc66224acee41dbe9c79e8a25","modified":1554932683564},{"_id":"themes/next/.git/objects/80/9284428dd08b6d4fbc92566d44ba8e399c1941","hash":"75e3a6d89fa437bf736e9194eb248bc090d7d197","modified":1554932692756},{"_id":"themes/next/.git/objects/de/05ef38ab5c59681fa4feefd31e93d4620b78f9","hash":"eaaefbf1bcd42a19f0c786eaf555c004391c1cea","modified":1554932683560},{"_id":"themes/next/.git/objects/e8/b3f5ab3f2cd4166fd59397bae562b47f3b443d","hash":"3ef3339149678fa85414b1a8585608e9cc0f5ea8","modified":1554932692760},{"_id":"themes/next/.git/refs/heads/master","hash":"20ecabc8f1f42fd6d9f6a95e1ef838519670da2d","modified":1555011212991},{"_id":"themes/next/.git/objects/b5/65301fa34c65facee83aca7d6d9c385e4f01cb","hash":"70ee5ee6b0743a764e3f8529f476382eb827a3d2","modified":1555011212991},{"_id":"themes/next/layout/_macro/menu/menu-badge.swig","hash":"65c5e585982dae7ae1542cada71858b4ea1f73d6","modified":1554931951711},{"_id":"themes/next/layout/_macro/menu/menu-item.swig","hash":"fb33f499022cd02722f834fcef1a0e193362cfde","modified":1554931951711},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"3533167c4295637b91d90f3bae7c651cd128bb6e","modified":1554931951715},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"3cfeafefc672d9a7704650ebfb2f9d8668b38d9a","modified":1554931951715},{"_id":"themes/next/layout/_third-party/comments/disqusjs.swig","hash":"c77a2e7ef5f449a445fb4d36b055721fba4a81af","modified":1554931951715},{"_id":"themes/next/layout/_third-party/comments/gitalk.swig","hash":"e8f91c571ceb4b80aafebc4d36b89fb41b1ae040","modified":1554931951715},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"388efc86af7f19c05ad0e26720cd24ee012d20b9","modified":1554931951715},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"2cbaae65a020bbb0e9265364488aff8bf84fa48d","modified":1554931951715},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"5856d5f701e51dfae1fd6fb486cefde67effd555","modified":1554931951715},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"4a908b613518878b9b69576c5dba4a5185f552ab","modified":1554931951715},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"a5723950c343d220270bfd27bd30050eda6c3fb3","modified":1554931951715},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"798d67e4a736613ab899eabe6529091bbcda7850","modified":1554931951715},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"591b2ccd9713ccb922b9fcf5e278b6de9c5ec30b","modified":1554931951715},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"8eadb929c9e50e58502ccad2dc2657746f8c592a","modified":1554931951715},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"08cd47ef8572121b7811342d3c9a84a338a18191","modified":1554931951715},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"050ea01f25cfe492be9bb77b409644d623fdf2dc","modified":1554931951715},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"fae69a0e1a1d42f7bb44e594a29857d94594698b","modified":1554931951715},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"d422beaf35a5d2646feaa098bc3e5adf691c7565","modified":1554931951715},{"_id":"themes/next/layout/_third-party/analytics/growingio.swig","hash":"4a966b7ffe2d80ff1b3dd0fd14b355766dc5c70f","modified":1554931951715},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"438c6f5e6665d72f4ea7ee206011d669246f6102","modified":1554931951715},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"c754f699c90f6278b9159eff1855c17bc713ee96","modified":1554931951715},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"f240a50cd9b627620d9a374a29cf95f0c5e99d7c","modified":1554931951715},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"92e04a2b9e0c3df594bc22235d1894e5ad458dfc","modified":1554931951715},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"0dd5b315d1da55dbfc10f51a1f8952f72eba2720","modified":1554931951715},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"a7e304b05a44279d3e4f611908d7faef9dc14d7c","modified":1554931951715},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"c2cb2f384bc30d31cdccf9794a729c03e687b45c","modified":1554931951715},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"601774d8672577aefbcefac82c94b01f0338da31","modified":1554931951715},{"_id":"themes/next/layout/_third-party/search/algolia-search.swig","hash":"0a13dfd2de52a96901039098c6fc7b515edfc50b","modified":1554931951715},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"ea94aa85034c6d1b6bb865aecea55c73f8a14501","modified":1554931951715},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"b3eaab6a269aa3fcbafe24fd06f0c9206dc12716","modified":1554931951715},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"5b05f165547391bf231e52f56f3d925efc09bc44","modified":1554931951715},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"ffc8e8836714ea79abeb77b75859634615652877","modified":1554931951715},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"108b157fbd1ac3baaf19ae87234fa8728ab79556","modified":1554931951715},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"0097e45e7b671f8006b8b2d3c4f95cacc76a983c","modified":1554931951715},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"e42604fbb17648484e5f12afe230d826de089388","modified":1554931951715},{"_id":"themes/next/layout/_partials/page/breadcrumb.swig","hash":"0fa4fadb39467b01cede49f21b22e86b1a2da805","modified":1554931951715},{"_id":"themes/next/layout/_partials/page/page-header.swig","hash":"2940df694fff28e8bf71b6546b4162f1e38227db","modified":1554931951715},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"648bf7eda66629592cb915c4004534b3913cbc22","modified":1554931951715},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"2082f5077551123e695e8afec471c9c44b436acb","modified":1554931951715},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"71af31fea5913fd30c233e555ef13cf2c9768f72","modified":1554931951715},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"5adc60100e129c1d0307bdcaa0c7b8e8375a6ea4","modified":1554931951715},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"fc6bafc8c633afadc538c5afa5620ea2a1cdcb84","modified":1554931951715},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"02bb5748e8540b024e7f4008a9e640890b45280f","modified":1554931951715},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"36eae78a4d7160a1c5e59ca3f7333f00b43d359b","modified":1554931951715},{"_id":"themes/next/layout/_partials/post/post-copyright.swig","hash":"3615db591dd910fb9fa96542734c7ec0ef05019c","modified":1554931951715},{"_id":"themes/next/layout/_partials/post/post-related.swig","hash":"eea95b785c9c36d28e1839619793f66e89773bee","modified":1554931951715},{"_id":"themes/next/layout/_partials/post/reward.swig","hash":"d44f025eb93c99ddf90202d8293ccf80689a00c7","modified":1554931951715},{"_id":"themes/next/layout/_partials/post/wechat-subscriber.swig","hash":"ef11b5be5bfb2f0affe82cf521c002b37fef9819","modified":1554931951715},{"_id":"themes/next/layout/_partials/search/algolia-search.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1554931951715},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"7d1693416a5dc098f4723a53da2e2d1fc2d6e075","modified":1554931951715},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1554931951715},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"a5587bd1f60d35e58618576cec45e662aa44ea1f","modified":1554931951715},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"15b542f5b06b7532234af367340b9ed9fcebb0ac","modified":1554931951715},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"6f181cc188ecbe5e607fd989756e470d4cb9765d","modified":1554931951715},{"_id":"themes/next/layout/_partials/share/likely.swig","hash":"b45e934d24d76ec6b6a790e92bdb3d56186b0e2a","modified":1554931951715},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1554931951719},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1554931951719},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"2e8fb29aa92325df39054b5450757858c6cebc41","modified":1554931951719},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"2036bbb73afd43251982ce824f06c6e88d35a2ef","modified":1554931951719},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"a8aa41625b94cf17a7f473ed10dcbe683b1db705","modified":1554931951723},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1554931951723},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"fc15e277d1504532a09b7b1bd31f900ad95ec4b8","modified":1554931951723},{"_id":"themes/next/source/css/_variables/base.styl","hash":"640f25a63770af5566ccc9cec79c40a4f1c0b29e","modified":1554931951723},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1554931951723},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1554931951723},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1554931951723},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1554931951723},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1554931951723},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1554931951727},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1554931951731},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1554931951731},{"_id":"themes/next/source/js/schemes/muse.js","hash":"e9bfa6b343b67625f58757efce46ccdaac8f308c","modified":1554931951723},{"_id":"themes/next/source/js/schemes/pisces.js","hash":"9eb63cba0327d3d11b6cbfcbe40b88e97a8378a3","modified":1554931951723},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"dea732e43cf51de339e94cd7aab5f0d4227bd653","modified":1555011212991},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1554931951699},{"_id":"themes/next/.git/refs/remotes/origin/master","hash":"20ecabc8f1f42fd6d9f6a95e1ef838519670da2d","modified":1555011219607},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"fe5ff961b86004a306778c7d33a85b32e5e00e48","modified":1554931951719},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"c8b3225396cb444d8baeb94bac78e5216b992a81","modified":1554931951719},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"b98c65006e2546fbf3870c16fbbcbc009dbaab15","modified":1554931951719},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1554931951719},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"9d71f34fa13a41b8c8cd2fbdf3fdea608385277c","modified":1554931951719},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"ce826aedf42b9eca424a044452f5d193866726a6","modified":1554931951719},{"_id":"themes/next/source/css/_common/components/rainbow.styl","hash":"ce2aae8f3ed8ceac3a2417e0481044cf69c788aa","modified":1554931951719},{"_id":"themes/next/source/css/_common/components/scrollbar.styl","hash":"d7b8bcf2a6031296c84bb4f4ecfb037af01d2d82","modified":1554931951719},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"7e51ea64611ab5d678c112b4688d4db4fd2737e2","modified":1554931951719},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"6d900b4159eeb869196a619602578bf4d83a117b","modified":1554931951719},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"8e0740a9ad349ce5555122325da872923135a698","modified":1554931951719},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"7e62e73d8529f7962ea8d318b4d7df75680ef6ec","modified":1554931951719},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"7ffde343bdf10add1f052f3c4308a15180eb4404","modified":1554931951719},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1554931951719},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"33456264a74d1bba38264d14713544d67d003733","modified":1554931951719},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1554931951727},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1554931951723},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1554931951723},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1554931951723},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"9a2d298dbdcbfd758518fd74b63897bc80ce15a5","modified":1554931951719},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"0bef9f0dc134215bc4d0984ba3a16a1a0b6f87ec","modified":1554931951719},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"24230e46fc9fb7b8551f97bb36e9bc1f7423098e","modified":1554931951719},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1554931951719},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"75d2d92af070eb10273558b2436972d3f12b361c","modified":1554931951719},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"fa33213aceed7bf4bf25437ca9c1a00f7734ae65","modified":1554931951719},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"7359880e8d85312861fe0871f58b662e627dae0c","modified":1554931951719},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"a96e46a6ae86c423f932bc2bc78b9f7453e4e4e5","modified":1554931951719},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"6565b4a309325596768d0d32e022c80ef23066cb","modified":1554931951719},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"fc160583f742c94316a0fee05c18468033173534","modified":1554931951723},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"1edf4e69d0ec0dc9cefed6c35d3e803e0da4093d","modified":1554931951723},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"7359880e8d85312861fe0871f58b662e627dae0c","modified":1554931951723},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1554931951723},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"57044a6d19eb418c1c3d28787e82c69efa9e0ca6","modified":1554931951723},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"75737591682a2bafa71db4c03fb79e970ac0e7aa","modified":1554931951723},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"b6dac5bbf20f090cf4b67d156f030d7170dfb39c","modified":1554931951723},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"6400c98a9fd2b9a8502269f33355bd7ab3ff793b","modified":1554931951723},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"b5b936dddb7b4de4720cd1e8428b30a2f06d63fb","modified":1554931951723},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"232aedbd44243b3b80c4503c947060d3269c1afc","modified":1554931951723},{"_id":"themes/next/.git/objects/pack/pack-1f1eaa0face5c3ca0c36c4a4432268fdce9ea4dd.idx","hash":"6fd20920536ad54a2778af3b12202242ad36ff61","modified":1554931951487},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1554931951727},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1554931951727},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1554931951727},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"e1f0d9f5c4f8ca0909e996793213f81938e0bd02","modified":1554931951699},{"_id":"themes/next/.git/logs/refs/remotes/origin/master","hash":"73d08671f624b71de2d7dd7082f1fa365511740e","modified":1555011219607},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"4cfeec9434a72d5efc6ca225d3445d084d4590f7","modified":1554931951719},{"_id":"themes/next/source/css/_common/components/header/github-banner.styl","hash":"ca97f0b6990eef947039faede80c56d9c4381ee1","modified":1554931951719},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"6c4990d375b640ee4551e62c48c1cbe4c3d62212","modified":1554931951719},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1554931951719},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"a410ed529afd46ddf4a96ecf0de6599488716887","modified":1554931951719},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"c0d9e18a9210fdcaf33e488518b3b288eb58c0a1","modified":1554931951719},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"cc6ee18f47f2e1e06df6fa0eadb37079e580fd11","modified":1554931951719},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"71d8d1cc22a2a7627a6db7240f0c4902a14f9bea","modified":1554931951719},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"e9dd8de7d98f1478ac7d351624fffd3d8738c905","modified":1554931951719},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1554931951719},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"6904fd7ea6455e008d9884558b68254608af9a3c","modified":1554931951719},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"2d142c6f39853916256ad8fc79eb6b85f4001ae8","modified":1554931951719},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1554931951719},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"f1d52954b9a5d1ca8e224382349f525e598dd923","modified":1554931951719},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1554931951719},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"80addb9b725e329915c05c27b9fadaf56457a9b3","modified":1554931951719},{"_id":"themes/next/source/css/_common/components/pages/tag-cloud.styl","hash":"61ca40856e5cacd48e0fa9728fde4605c7dd4c94","modified":1554931951719},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1554931951719},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"6a75bb1f2435f4e895cbbb5abbddf6e8f7257804","modified":1554931951719},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"2356226157e8068b0e9bbe2f7d0f74e1ab49199b","modified":1554931951719},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"c961d37190d9bec58a36306c7e716c4e72c4582f","modified":1554931951719},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"1385862a5c0bd845015d165aadbd1a6add7b72d7","modified":1554931951719},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"0bf899fab331add63f0c8ead31ca3a3db2ad74d9","modified":1554931951719},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"b082d07b13a3d55b4c032fd351dfa9a4fd74edec","modified":1554931951719},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"496f931e3a7e313ba8088fb91bb20789cace72c9","modified":1554931951719},{"_id":"themes/next/source/css/_common/components/post/post-reading_progress.styl","hash":"3f33bb862c2aa993f54987fbb345da067b79b112","modified":1554931951719},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"5440013a081201ca791582db98159dce93ea9e75","modified":1554931951719},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1554931951719},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1554931951719},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"8e058c99dd7d41f0bd34c7c28b6ac9fbb17dcb5e","modified":1554931951719},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"d5c8ffed7f2c701052b7a53abaf5ef437374ea72","modified":1554931951719},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"a6c24393dffbdd94dd5c01cdbec5e180b0bfbbbd","modified":1554931951719},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"a3170630d8e085889a4bdc20eb7f09c5a0479c47","modified":1554931951719},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"9224b566cd2632f64c1a964e2c786cee93b93286","modified":1554931951719},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"707527c9950a7459355c8abcf4751c0964de0bc1","modified":1554931951719},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"cc83816614f21c7e1d8d3f867d547ff7c658cec4","modified":1554931951719},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-button.styl","hash":"517d541a80d59ad99a3f648be74891e0c7bc72a8","modified":1554931951719},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"c2d9c3b6fbfa65544e6b5a55d3cb2149df04a8a9","modified":1554931951719},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"9a3bfc878ca797946815bed23cd6f92b24a16358","modified":1554931951719},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"8a24b56524a388fbabd408ffc8ba9b56eb9e01ce","modified":1554931951719},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"c01609176929590f8f347075a9a12b661acd661e","modified":1554931951719},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"8e5c884fb950937afa350c608545455c87aa6129","modified":1554931951719},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"967fb3a3c6c851b34ec5df2d945dc266ed63d146","modified":1554931951719},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"58ec00eebe68d0eebd2eea435c710063877447df","modified":1554931951719},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"6ec8ea7b11a146777b6b8da0f71f0cc1dbd129df","modified":1554931951719},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1554931951719},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"d7501ae01fc45fa15b00d1bc5233b9fffa20a3c9","modified":1554931951719},{"_id":"themes/next/source/css/_common/components/tags/pdf.styl","hash":"da8d34729fb6eb0fcb8ee81e67d2be3c02bc1bc4","modified":1554931951719},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"21b32840d8b3a14b10770153114778304ba6d1b0","modified":1554931951719},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"fcda60fecff1479adaf6521cf629cda2506337a8","modified":1554931951719},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"cbc0be5a3285b469858ec9ead48e2ea90bd47ae1","modified":1554931951719},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fc58498d4f5081fcf6218e9e18c5bf2328275bef","modified":1554931951719},{"_id":"themes/next/source/css/_common/components/third-party/copy-code.styl","hash":"688ca3eccc26727d050ad098b32b40934719588a","modified":1554931951719},{"_id":"themes/next/source/css/_common/components/third-party/gitalk.styl","hash":"ac7753d536341aa824d7bce0332735e838916995","modified":1554931951719},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"f1d9ee1f86a179741f2478f8c70ca11ab578810e","modified":1554931951719},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"7059e24235b7c57a07f3f8abaa06b0bd6a7eda2f","modified":1554931951719},{"_id":"themes/next/source/css/_common/components/third-party/math.styl","hash":"ef66c0a08e4243a25e41408d70ca66682b8dcea1","modified":1554931951719},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"9fac89c8146eb2675721a26f528d7d0f8be7debe","modified":1554931951719},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"61466e3e5459960b5802a267751a0c8018918b0b","modified":1554931951719},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"3ae3f3c276d444862033fd3434c632ad0d2f84e6","modified":1554931951719},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"03c4fa9573fddd930552784cf484fd2ee7825323","modified":1554931951719},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1554931951719},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1554931951719},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1554931951723},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1554931951727},{"_id":"themes/next/.git/objects/pack/pack-1f1eaa0face5c3ca0c36c4a4432268fdce9ea4dd.pack","hash":"2b885db2fbdafdf588b551867e5e1f97d51b60e3","modified":1554931951483},{"_id":"public/404.html","hash":"2e8b0421c8ad4cef50e51616fcd7b6cd5397ba17","modified":1564681822223},{"_id":"public/about/index.html","hash":"76f964cb4629dc24a7e35d6d8d82d8620f5a374c","modified":1564681822223},{"_id":"public/categories/index.html","hash":"3192068f751400bc9dd9f0b7a23907898ab9495e","modified":1564681822224},{"_id":"public/projects/index.html","hash":"b9a1419530c92474f236b283683a8a76e6e88fe6","modified":1564681822224},{"_id":"public/tags/index.html","hash":"8634724506ca2715a35983b0bb89987eb0f07340","modified":1564681822224},{"_id":"public/archives/2019/04/index.html","hash":"18a2c92b890fcbc14cb19652f7d13fa99cc9e2c3","modified":1564681822224},{"_id":"public/archives/2019/05/index.html","hash":"31a61d219b36b9ccfb2b3359041ede3471ac8858","modified":1564681822224},{"_id":"public/archives/2019/06/index.html","hash":"4eb375d4cf133435142f3788146873668116e1e1","modified":1564681822224},{"_id":"public/archives/2019/07/index.html","hash":"6bd46cd40822fd3c125262b03baa30f50e851f5a","modified":1564681822224},{"_id":"public/2019/07/31/代码赏析_Stanley_Path_Tracking_Controller/index.html","hash":"1698ca37a72e274e5a7269db7bc42b66e2c5e596","modified":1564681822224},{"_id":"public/2019/07/26/代码赏析_Random_Forest_Tree_Planning/index.html","hash":"95921300f91be44db42479ee636721bd0d617d67","modified":1564681822224},{"_id":"public/2019/07/22/Summary-After-RoboND/index.html","hash":"afc39fc003f1b4d32ed556f6c59414b3b7766441","modified":1564681822224},{"_id":"public/2019/06/20/venv_—_Create_Virtual_Environments/index.html","hash":"eecf38af1eacc2f11948c06056a887f5839fd325","modified":1564681822224},{"_id":"public/2019/05/16/RoverPi小车_第三篇_系统安装和网络设置/index.html","hash":"9da20cdb60ba6d416ddd11d81f634e901c037ac6","modified":1564681822224},{"_id":"public/2019/05/14/RoverPi小车_第二篇_硬件选型/index.html","hash":"17e8e859c15d87804267af1aec6d2aebdce1c1c0","modified":1564681822224},{"_id":"public/2019/05/12/RoverPi小车_第一篇_前世今生/index.html","hash":"9d2e2dc5d93bdfc225de2240c042d3c235a21411","modified":1564681822224},{"_id":"public/2019/04/11/Particle-Filter-on-Pose-Tracking/index.html","hash":"2f662cc6f1fbb86eb4628d64892c7fdc61189012","modified":1564681822224},{"_id":"public/archives/index.html","hash":"169470621ea69fc46b2ec87ed563fb103703429f","modified":1564681822224},{"_id":"public/archives/2019/index.html","hash":"d60312cad7379f41f6d736765d8eb247866f681b","modified":1564681822225},{"_id":"public/index.html","hash":"ad59257e44d422a086d150f6d48e3ab5d3bcd5f6","modified":1564681822225},{"_id":"public/CNAME","hash":"285c42faee8a2f0c26d9568d3396b09e7f449255","modified":1564681822228},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1564681822228},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1564681822228},{"_id":"public/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1564681822228},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1564681822228},{"_id":"public/images/avatar.png","hash":"5dda96f3273e716ede6b09ad32d791d080fb1b82","modified":1564681822228},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1564681822228},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1564681822229},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1564681822229},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1564681822229},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1564681822229},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1564681822229},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1564681822229},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1564681822229},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1564681822229},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1564681822229},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1564681822229},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1564681822229},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1564681822229},{"_id":"public/images/searchicon.png","hash":"025d64ba0160a3a2257dd2b3032b5f7c9dd9b82b","modified":1564681822229},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1564681822229},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1564681822229},{"_id":"public/2019/07/31/代码赏析_Stanley_Path_Tracking_Controller/stanley-equation.png","hash":"919d704f1808f842039d2522b9443375458d74c6","modified":1564681822229},{"_id":"public/2019/07/31/代码赏析_Stanley_Path_Tracking_Controller/stanley-geometry.png","hash":"899045012857a344cda5cb18d78d65d96173c2b6","modified":1564681822229},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1564681822714},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1564681822716},{"_id":"public/js/affix.js","hash":"a2aab233d99297435a5274bf512c3c753fe08e80","modified":1564681822718},{"_id":"public/js/algolia-search.js","hash":"1f7f10c579e7703d0f6acb8b73f3d78a07d0c623","modified":1564681822718},{"_id":"public/js/exturl.js","hash":"54825acc8de4793feac415be227b965428f4e97d","modified":1564681822718},{"_id":"public/js/post-details.js","hash":"0dde5e6d4547587662a3256317a9d5d1db507692","modified":1564681822718},{"_id":"public/js/scrollspy.js","hash":"fa3c92968bcdbcb8d95a1729f7659d9753cbd077","modified":1564681822718},{"_id":"public/js/next-boot.js","hash":"e0615efab5f81ba0fd39c0527eac31144deac7ce","modified":1564681822718},{"_id":"public/js/js.cookie.js","hash":"e0afce539f1fb81d59e3c6f0a68d736e2fb45d93","modified":1564681822718},{"_id":"public/js/scroll-cookie.js","hash":"d07b3776708d4ae79ed2037c4c7391d5c9b06b19","modified":1564681822718},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1564681822718},{"_id":"public/js/schemes/muse.js","hash":"e9bfa6b343b67625f58757efce46ccdaac8f308c","modified":1564681822719},{"_id":"public/js/schemes/pisces.js","hash":"9eb63cba0327d3d11b6cbfcbe40b88e97a8378a3","modified":1564681822719},{"_id":"public/css/main.css","hash":"cb11ca8fe2c03b87822d03a3a5ab40546c2926b6","modified":1564681822719},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1564681822719},{"_id":"public/js/motion.js","hash":"a16bc0b701646bf6653484675f4d5dc0f892d184","modified":1564681822721},{"_id":"public/js/utils.js","hash":"3c987de7cfb944c33e9e527f1214724c7aafc796","modified":1564681822722},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1564681822722},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1564681822726},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1564681822729},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1564681822729},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1564681822729},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1564681822733},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1564681822735},{"_id":"themes/next/source/_data/styles.styl","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1564685042941}],"Category":[],"Data":[],"Page":[{"layout":"404","description":"你来到了没有知识的荒原 :(","_content":"","source":"404.md","raw":"---\nlayout: 404\ndescription: \"你来到了没有知识的荒原 :(\"\n---\n","date":"2019-04-22T16:37:56.778Z","updated":"2019-04-10T21:59:03.687Z","path":"404.html","title":"","comments":1,"_id":"cjysz5ndb0000t3mytez30qzh","content":"","site":{"data":{}},"excerpt":"","more":""},{"layout":"about","title":"关于","date":"2016-04-21T11:48:33.000Z","comments":1,"_content":"\n古语云：“至道无难，唯嫌拣择。”就是说至上的大道不难，只怕有人挑这挑那。佛陀信手拈来一朵花是道，品茶也是道，一言一行皆是道，是因为佛陀从不挑拣。星云大师曾为人题字“不比较，不计较”，因为大师认为，人生各种烦恼的主要来源就是比较和计较。\n","source":"about/index.md","raw":"---\nlayout: \"about\"\ntitle: \"关于\"\ndate: 2016-04-21 04:48:33\ncomments: true\n---\n\n古语云：“至道无难，唯嫌拣择。”就是说至上的大道不难，只怕有人挑这挑那。佛陀信手拈来一朵花是道，品茶也是道，一言一行皆是道，是因为佛陀从不挑拣。星云大师曾为人题字“不比较，不计较”，因为大师认为，人生各种烦恼的主要来源就是比较和计较。\n","updated":"2019-04-10T22:06:20.016Z","path":"about/index.html","_id":"cjysz5nft0002t3mytfk8pwxo","content":"<p>古语云：“至道无难，唯嫌拣择。”就是说至上的大道不难，只怕有人挑这挑那。佛陀信手拈来一朵花是道，品茶也是道，一言一行皆是道，是因为佛陀从不挑拣。星云大师曾为人题字“不比较，不计较”，因为大师认为，人生各种烦恼的主要来源就是比较和计较。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>古语云：“至道无难，唯嫌拣择。”就是说至上的大道不难，只怕有人挑这挑那。佛陀信手拈来一朵花是道，品茶也是道，一言一行皆是道，是因为佛陀从不挑拣。星云大师曾为人题字“不比较，不计较”，因为大师认为，人生各种烦恼的主要来源就是比较和计较。</p>\n"},{"layout":"categories","title":"分类","_content":"","source":"categories/index.md","raw":"---\nlayout: \"categories\"\ntitle: \"分类\"\n---\n","date":"2019-04-22T16:37:56.782Z","updated":"2019-04-10T22:06:14.128Z","path":"categories/index.html","comments":1,"_id":"cjysz5nfw0004t3myguvqidwc","content":"","site":{"data":{}},"excerpt":"","more":""},{"layout":"projects","title":"项目","date":"2019-08-01T17:23:47.000Z","comments":1,"_content":"","source":"projects/index.md","raw":"---\nlayout: \"projects\"\ntitle: \"项目\"\ndate: 2019-08-01 10:23:47\ncomments: true\n---\n","updated":"2019-08-01T17:26:21.409Z","path":"projects/index.html","_id":"cjysz5ng00006t3myck15wnu5","content":"","site":{"data":{}},"excerpt":"","more":""},{"layout":"tags","title":"标签","_content":"","source":"tags/index.md","raw":"---\nlayout: \"tags\"\ntitle: \"标签\"\n---\n","date":"2019-04-22T16:37:56.782Z","updated":"2019-04-10T22:06:12.060Z","path":"tags/index.html","comments":1,"_id":"cjysz5ng20008t3my1r1d7dtx","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"RoverPi小车 第三篇：系统安装和网络设置","date":"2019-05-16T21:30:27.000Z","_content":"\n<img src=\"https://cdn.instructables.com/FPN/U31F/HBNXVG6G/FPNU31FHBNXVG6G.LARGE.jpg\" alt=\"venv\" style=\"height:300px;\" align=\"middle\">\n\n<!--more-->\n\n## 在Raspberry Pi上安装ROS\n\n参考了下面这篇博文．\n\n[INSTALL ROS AND OPENCV IN RASPBERRY PI(RASPBIAN STRETCH)](https://neverbenever.wordpress.com/2017/12/20/install-ros-and-opencv-in-raspberry-piraspbian-stretch/)\n\n系统安装这方面不需要耗费太多精力，尤其有了一次经验以后，重复这样无聊和漫长的过程是实在是浪费生命．可以直接利用网上现成的安装好ROS的镜像，一次烧录到位．\n\n这个链接有长期更新的镜像，值得拥有．\n\nhttps://downloads.ubiquityrobotics.com/pi.html\n\n## 网络设置\n\n**设置首次启动自动连接WIFI**\n\n我们可以创建一个特别的文件，用来在首次启动时连接wifi．更详细的介绍可以看[这个链接](https://raspberrypi.stackexchange.com/questions/10251/prepare-sd-card-for-wifi-on-headless-pi)，这里我们可以看一下步骤．\n\n\n- 打开文本编辑器：在Linux上是 `gedit`．在Linux上是Notepad． 在Mac上是TextEdit．\n- 粘贴并编辑下面的内容，以匹配你的WIFI:\n\n```\ncountry=US\nctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev\nupdate_config=1\n\nnetwork={\n    ssid=\"<your network name>\"\n    psk=\"<your password>\"\n}\n```\n\n替换 `<your network name>` 为你的WIFI名称，并保留引号． 替换 `<your password>` 为你的WIFI登录密码，包含在引号里．如果你希望在这里的密码是被加密的状态，可以在你启动树莓派并登录以后[修改这个文件](https://unix.stackexchange.com/questions/278946/hiding-passwords-in-wpa-supplicant-conf-with-wpa-eap-and-mschap-v2)．\n\n\n- 保存这个文件到boot分区的根目录下，文件名为`wpa_supplicant.conf`．第一次启动之后，这个文件会被转移到`/etc/wpa_supplicant/wpa_supplicant.conf`，之后可以在这里继续编辑．\n\n激活[**SSH**](https://www.raspberrypi.org/documentation/remote-access/ssh/)\n\n从2016年11月的版本开始，Raspbian默认把SSH关闭．可以通过如下步骤手动激活SSH：\n\n\n1. 从`Preferences`菜单启动 `Raspberry Pi Configuration`\n2. 导航到 `Interfaces` 条目\n3. 选择 `SSH`旁边的`Enabled`\n4. 点击 `OK`\n\n## ROS Master 设置\n\n**设置 ROS IP: 机器人小车端**\n\n把下列变量输出到你的机器人小车的工作空间脚本文件．\n\n```\n> echo export ROS_MASTER_URI=http://localhost:11311 >> ~/.bashrc\n> echo export ROS_HOSTNAME=IP_OF_RoverPi >> ~/.bashrc\n```\n\n**设置ROS IP：远程上位机**\n\n把下列变量输出到你的上位机的工作空间脚本文件．注意master是机器人小车RoverPi.\n\n```\n> echo export ROS_MASTER_URI=http://IP_OF_RoverPi:11311 >> ~/.bashrc\n> echo export ROS_HOSTNAME=IP_OF_PC >> ~/.bashrc\n```\n\n这个过程可以参考如下图所示的TurtleBot设置过程，只需要把TurtleBot换成RoverPi Car即可。\n\n![](http://emanual.robotis.com/assets/images/platform/turtlebot3/software/network_configuration.png)\n\n可以做一个简单的测试，看网络是否设置成功．\n\n在机器人小车的一端先开启roscore再开启一个新窗口运行\n\n```\nrostopic pub -r10 /hello std_msgs/String \"hello\"\n```\n\n在上位机运行\n\n```\nrostopic echo /hello\n```\n\n这个信息＂hello＂将会在１秒内被打印10次．如果没有，检查你的ROS_HOSTNAME设置．\n\n## 参考\n\n- https://neverbenever.wordpress.com/2017/12/20/install-ros-and-opencv-in-raspberry-piraspbian-stretch/\n- https://raspberrypi.stackexchange.com/questions/10251/prepare-sd-card-for-wifi-on-headless-pi\n- https://downloads.ubiquityrobotics.com/pi.html\n- http://wiki.ros.org/Robots/TurtleBot/Network%20Setup\n","source":"_posts/RoverPi小车_第三篇_系统安装和网络设置.md","raw":"---\ntitle: RoverPi小车 第三篇：系统安装和网络设置\ndate: 2019-05-16 14:30:27\ntags:\n---\n\n<img src=\"https://cdn.instructables.com/FPN/U31F/HBNXVG6G/FPNU31FHBNXVG6G.LARGE.jpg\" alt=\"venv\" style=\"height:300px;\" align=\"middle\">\n\n<!--more-->\n\n## 在Raspberry Pi上安装ROS\n\n参考了下面这篇博文．\n\n[INSTALL ROS AND OPENCV IN RASPBERRY PI(RASPBIAN STRETCH)](https://neverbenever.wordpress.com/2017/12/20/install-ros-and-opencv-in-raspberry-piraspbian-stretch/)\n\n系统安装这方面不需要耗费太多精力，尤其有了一次经验以后，重复这样无聊和漫长的过程是实在是浪费生命．可以直接利用网上现成的安装好ROS的镜像，一次烧录到位．\n\n这个链接有长期更新的镜像，值得拥有．\n\nhttps://downloads.ubiquityrobotics.com/pi.html\n\n## 网络设置\n\n**设置首次启动自动连接WIFI**\n\n我们可以创建一个特别的文件，用来在首次启动时连接wifi．更详细的介绍可以看[这个链接](https://raspberrypi.stackexchange.com/questions/10251/prepare-sd-card-for-wifi-on-headless-pi)，这里我们可以看一下步骤．\n\n\n- 打开文本编辑器：在Linux上是 `gedit`．在Linux上是Notepad． 在Mac上是TextEdit．\n- 粘贴并编辑下面的内容，以匹配你的WIFI:\n\n```\ncountry=US\nctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev\nupdate_config=1\n\nnetwork={\n    ssid=\"<your network name>\"\n    psk=\"<your password>\"\n}\n```\n\n替换 `<your network name>` 为你的WIFI名称，并保留引号． 替换 `<your password>` 为你的WIFI登录密码，包含在引号里．如果你希望在这里的密码是被加密的状态，可以在你启动树莓派并登录以后[修改这个文件](https://unix.stackexchange.com/questions/278946/hiding-passwords-in-wpa-supplicant-conf-with-wpa-eap-and-mschap-v2)．\n\n\n- 保存这个文件到boot分区的根目录下，文件名为`wpa_supplicant.conf`．第一次启动之后，这个文件会被转移到`/etc/wpa_supplicant/wpa_supplicant.conf`，之后可以在这里继续编辑．\n\n激活[**SSH**](https://www.raspberrypi.org/documentation/remote-access/ssh/)\n\n从2016年11月的版本开始，Raspbian默认把SSH关闭．可以通过如下步骤手动激活SSH：\n\n\n1. 从`Preferences`菜单启动 `Raspberry Pi Configuration`\n2. 导航到 `Interfaces` 条目\n3. 选择 `SSH`旁边的`Enabled`\n4. 点击 `OK`\n\n## ROS Master 设置\n\n**设置 ROS IP: 机器人小车端**\n\n把下列变量输出到你的机器人小车的工作空间脚本文件．\n\n```\n> echo export ROS_MASTER_URI=http://localhost:11311 >> ~/.bashrc\n> echo export ROS_HOSTNAME=IP_OF_RoverPi >> ~/.bashrc\n```\n\n**设置ROS IP：远程上位机**\n\n把下列变量输出到你的上位机的工作空间脚本文件．注意master是机器人小车RoverPi.\n\n```\n> echo export ROS_MASTER_URI=http://IP_OF_RoverPi:11311 >> ~/.bashrc\n> echo export ROS_HOSTNAME=IP_OF_PC >> ~/.bashrc\n```\n\n这个过程可以参考如下图所示的TurtleBot设置过程，只需要把TurtleBot换成RoverPi Car即可。\n\n![](http://emanual.robotis.com/assets/images/platform/turtlebot3/software/network_configuration.png)\n\n可以做一个简单的测试，看网络是否设置成功．\n\n在机器人小车的一端先开启roscore再开启一个新窗口运行\n\n```\nrostopic pub -r10 /hello std_msgs/String \"hello\"\n```\n\n在上位机运行\n\n```\nrostopic echo /hello\n```\n\n这个信息＂hello＂将会在１秒内被打印10次．如果没有，检查你的ROS_HOSTNAME设置．\n\n## 参考\n\n- https://neverbenever.wordpress.com/2017/12/20/install-ros-and-opencv-in-raspberry-piraspbian-stretch/\n- https://raspberrypi.stackexchange.com/questions/10251/prepare-sd-card-for-wifi-on-headless-pi\n- https://downloads.ubiquityrobotics.com/pi.html\n- http://wiki.ros.org/Robots/TurtleBot/Network%20Setup\n","slug":"RoverPi小车_第三篇_系统安装和网络设置","published":1,"updated":"2019-06-20T17:55:13.864Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjysz5nfo0001t3my0fgvn6m9","content":"<p><img src=\"https://cdn.instructables.com/FPN/U31F/HBNXVG6G/FPNU31FHBNXVG6G.LARGE.jpg\" alt=\"venv\" style=\"height:300px;\" align=\"middle\"></p>\n<a id=\"more\"></a>\n<h2 id=\"在Raspberry-Pi上安装ROS\"><a href=\"#在Raspberry-Pi上安装ROS\" class=\"headerlink\" title=\"在Raspberry Pi上安装ROS\"></a>在Raspberry Pi上安装ROS</h2><p>参考了下面这篇博文．</p>\n<p><a href=\"https://neverbenever.wordpress.com/2017/12/20/install-ros-and-opencv-in-raspberry-piraspbian-stretch/\" target=\"_blank\" rel=\"noopener\">INSTALL ROS AND OPENCV IN RASPBERRY PI(RASPBIAN STRETCH)</a></p>\n<p>系统安装这方面不需要耗费太多精力，尤其有了一次经验以后，重复这样无聊和漫长的过程是实在是浪费生命．可以直接利用网上现成的安装好ROS的镜像，一次烧录到位．</p>\n<p>这个链接有长期更新的镜像，值得拥有．</p>\n<p><a href=\"https://downloads.ubiquityrobotics.com/pi.html\" target=\"_blank\" rel=\"noopener\">https://downloads.ubiquityrobotics.com/pi.html</a></p>\n<h2 id=\"网络设置\"><a href=\"#网络设置\" class=\"headerlink\" title=\"网络设置\"></a>网络设置</h2><p><strong>设置首次启动自动连接WIFI</strong></p>\n<p>我们可以创建一个特别的文件，用来在首次启动时连接wifi．更详细的介绍可以看<a href=\"https://raspberrypi.stackexchange.com/questions/10251/prepare-sd-card-for-wifi-on-headless-pi\" target=\"_blank\" rel=\"noopener\">这个链接</a>，这里我们可以看一下步骤．</p>\n<ul>\n<li>打开文本编辑器：在Linux上是 <code>gedit</code>．在Linux上是Notepad． 在Mac上是TextEdit．</li>\n<li>粘贴并编辑下面的内容，以匹配你的WIFI:</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">country=US</span><br><span class=\"line\">ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev</span><br><span class=\"line\">update_config=1</span><br><span class=\"line\"></span><br><span class=\"line\">network=&#123;</span><br><span class=\"line\">    ssid=&quot;&lt;your network name&gt;&quot;</span><br><span class=\"line\">    psk=&quot;&lt;your password&gt;&quot;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>替换 <code>&lt;your network name&gt;</code> 为你的WIFI名称，并保留引号． 替换 <code>&lt;your password&gt;</code> 为你的WIFI登录密码，包含在引号里．如果你希望在这里的密码是被加密的状态，可以在你启动树莓派并登录以后<a href=\"https://unix.stackexchange.com/questions/278946/hiding-passwords-in-wpa-supplicant-conf-with-wpa-eap-and-mschap-v2\" target=\"_blank\" rel=\"noopener\">修改这个文件</a>．</p>\n<ul>\n<li>保存这个文件到boot分区的根目录下，文件名为<code>wpa_supplicant.conf</code>．第一次启动之后，这个文件会被转移到<code>/etc/wpa_supplicant/wpa_supplicant.conf</code>，之后可以在这里继续编辑．</li>\n</ul>\n<p>激活<a href=\"https://www.raspberrypi.org/documentation/remote-access/ssh/\" target=\"_blank\" rel=\"noopener\"><strong>SSH</strong></a></p>\n<p>从2016年11月的版本开始，Raspbian默认把SSH关闭．可以通过如下步骤手动激活SSH：</p>\n<ol>\n<li>从<code>Preferences</code>菜单启动 <code>Raspberry Pi Configuration</code></li>\n<li>导航到 <code>Interfaces</code> 条目</li>\n<li>选择 <code>SSH</code>旁边的<code>Enabled</code></li>\n<li>点击 <code>OK</code></li>\n</ol>\n<h2 id=\"ROS-Master-设置\"><a href=\"#ROS-Master-设置\" class=\"headerlink\" title=\"ROS Master 设置\"></a>ROS Master 设置</h2><p><strong>设置 ROS IP: 机器人小车端</strong></p>\n<p>把下列变量输出到你的机器人小车的工作空间脚本文件．</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; echo export ROS_MASTER_URI=http://localhost:11311 &gt;&gt; ~/.bashrc</span><br><span class=\"line\">&gt; echo export ROS_HOSTNAME=IP_OF_RoverPi &gt;&gt; ~/.bashrc</span><br></pre></td></tr></table></figure>\n<p><strong>设置ROS IP：远程上位机</strong></p>\n<p>把下列变量输出到你的上位机的工作空间脚本文件．注意master是机器人小车RoverPi.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; echo export ROS_MASTER_URI=http://IP_OF_RoverPi:11311 &gt;&gt; ~/.bashrc</span><br><span class=\"line\">&gt; echo export ROS_HOSTNAME=IP_OF_PC &gt;&gt; ~/.bashrc</span><br></pre></td></tr></table></figure>\n<p>这个过程可以参考如下图所示的TurtleBot设置过程，只需要把TurtleBot换成RoverPi Car即可。</p>\n<p><img src=\"http://emanual.robotis.com/assets/images/platform/turtlebot3/software/network_configuration.png\" alt></p>\n<p>可以做一个简单的测试，看网络是否设置成功．</p>\n<p>在机器人小车的一端先开启roscore再开启一个新窗口运行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rostopic pub -r10 /hello std_msgs/String &quot;hello&quot;</span><br></pre></td></tr></table></figure>\n<p>在上位机运行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rostopic echo /hello</span><br></pre></td></tr></table></figure>\n<p>这个信息＂hello＂将会在１秒内被打印10次．如果没有，检查你的ROS_HOSTNAME设置．</p>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ul>\n<li><a href=\"https://neverbenever.wordpress.com/2017/12/20/install-ros-and-opencv-in-raspberry-piraspbian-stretch/\" target=\"_blank\" rel=\"noopener\">https://neverbenever.wordpress.com/2017/12/20/install-ros-and-opencv-in-raspberry-piraspbian-stretch/</a></li>\n<li><a href=\"https://raspberrypi.stackexchange.com/questions/10251/prepare-sd-card-for-wifi-on-headless-pi\" target=\"_blank\" rel=\"noopener\">https://raspberrypi.stackexchange.com/questions/10251/prepare-sd-card-for-wifi-on-headless-pi</a></li>\n<li><a href=\"https://downloads.ubiquityrobotics.com/pi.html\" target=\"_blank\" rel=\"noopener\">https://downloads.ubiquityrobotics.com/pi.html</a></li>\n<li><a href=\"http://wiki.ros.org/Robots/TurtleBot/Network%20Setup\" target=\"_blank\" rel=\"noopener\">http://wiki.ros.org/Robots/TurtleBot/Network%20Setup</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"<p><img src=\"https://cdn.instructables.com/FPN/U31F/HBNXVG6G/FPNU31FHBNXVG6G.LARGE.jpg\" alt=\"venv\" style=\"height:300px;\" align=\"middle\"></p>","more":"<h2 id=\"在Raspberry-Pi上安装ROS\"><a href=\"#在Raspberry-Pi上安装ROS\" class=\"headerlink\" title=\"在Raspberry Pi上安装ROS\"></a>在Raspberry Pi上安装ROS</h2><p>参考了下面这篇博文．</p>\n<p><a href=\"https://neverbenever.wordpress.com/2017/12/20/install-ros-and-opencv-in-raspberry-piraspbian-stretch/\" target=\"_blank\" rel=\"noopener\">INSTALL ROS AND OPENCV IN RASPBERRY PI(RASPBIAN STRETCH)</a></p>\n<p>系统安装这方面不需要耗费太多精力，尤其有了一次经验以后，重复这样无聊和漫长的过程是实在是浪费生命．可以直接利用网上现成的安装好ROS的镜像，一次烧录到位．</p>\n<p>这个链接有长期更新的镜像，值得拥有．</p>\n<p><a href=\"https://downloads.ubiquityrobotics.com/pi.html\" target=\"_blank\" rel=\"noopener\">https://downloads.ubiquityrobotics.com/pi.html</a></p>\n<h2 id=\"网络设置\"><a href=\"#网络设置\" class=\"headerlink\" title=\"网络设置\"></a>网络设置</h2><p><strong>设置首次启动自动连接WIFI</strong></p>\n<p>我们可以创建一个特别的文件，用来在首次启动时连接wifi．更详细的介绍可以看<a href=\"https://raspberrypi.stackexchange.com/questions/10251/prepare-sd-card-for-wifi-on-headless-pi\" target=\"_blank\" rel=\"noopener\">这个链接</a>，这里我们可以看一下步骤．</p>\n<ul>\n<li>打开文本编辑器：在Linux上是 <code>gedit</code>．在Linux上是Notepad． 在Mac上是TextEdit．</li>\n<li>粘贴并编辑下面的内容，以匹配你的WIFI:</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">country=US</span><br><span class=\"line\">ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev</span><br><span class=\"line\">update_config=1</span><br><span class=\"line\"></span><br><span class=\"line\">network=&#123;</span><br><span class=\"line\">    ssid=&quot;&lt;your network name&gt;&quot;</span><br><span class=\"line\">    psk=&quot;&lt;your password&gt;&quot;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>替换 <code>&lt;your network name&gt;</code> 为你的WIFI名称，并保留引号． 替换 <code>&lt;your password&gt;</code> 为你的WIFI登录密码，包含在引号里．如果你希望在这里的密码是被加密的状态，可以在你启动树莓派并登录以后<a href=\"https://unix.stackexchange.com/questions/278946/hiding-passwords-in-wpa-supplicant-conf-with-wpa-eap-and-mschap-v2\" target=\"_blank\" rel=\"noopener\">修改这个文件</a>．</p>\n<ul>\n<li>保存这个文件到boot分区的根目录下，文件名为<code>wpa_supplicant.conf</code>．第一次启动之后，这个文件会被转移到<code>/etc/wpa_supplicant/wpa_supplicant.conf</code>，之后可以在这里继续编辑．</li>\n</ul>\n<p>激活<a href=\"https://www.raspberrypi.org/documentation/remote-access/ssh/\" target=\"_blank\" rel=\"noopener\"><strong>SSH</strong></a></p>\n<p>从2016年11月的版本开始，Raspbian默认把SSH关闭．可以通过如下步骤手动激活SSH：</p>\n<ol>\n<li>从<code>Preferences</code>菜单启动 <code>Raspberry Pi Configuration</code></li>\n<li>导航到 <code>Interfaces</code> 条目</li>\n<li>选择 <code>SSH</code>旁边的<code>Enabled</code></li>\n<li>点击 <code>OK</code></li>\n</ol>\n<h2 id=\"ROS-Master-设置\"><a href=\"#ROS-Master-设置\" class=\"headerlink\" title=\"ROS Master 设置\"></a>ROS Master 设置</h2><p><strong>设置 ROS IP: 机器人小车端</strong></p>\n<p>把下列变量输出到你的机器人小车的工作空间脚本文件．</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; echo export ROS_MASTER_URI=http://localhost:11311 &gt;&gt; ~/.bashrc</span><br><span class=\"line\">&gt; echo export ROS_HOSTNAME=IP_OF_RoverPi &gt;&gt; ~/.bashrc</span><br></pre></td></tr></table></figure>\n<p><strong>设置ROS IP：远程上位机</strong></p>\n<p>把下列变量输出到你的上位机的工作空间脚本文件．注意master是机器人小车RoverPi.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; echo export ROS_MASTER_URI=http://IP_OF_RoverPi:11311 &gt;&gt; ~/.bashrc</span><br><span class=\"line\">&gt; echo export ROS_HOSTNAME=IP_OF_PC &gt;&gt; ~/.bashrc</span><br></pre></td></tr></table></figure>\n<p>这个过程可以参考如下图所示的TurtleBot设置过程，只需要把TurtleBot换成RoverPi Car即可。</p>\n<p><img src=\"http://emanual.robotis.com/assets/images/platform/turtlebot3/software/network_configuration.png\" alt></p>\n<p>可以做一个简单的测试，看网络是否设置成功．</p>\n<p>在机器人小车的一端先开启roscore再开启一个新窗口运行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rostopic pub -r10 /hello std_msgs/String &quot;hello&quot;</span><br></pre></td></tr></table></figure>\n<p>在上位机运行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rostopic echo /hello</span><br></pre></td></tr></table></figure>\n<p>这个信息＂hello＂将会在１秒内被打印10次．如果没有，检查你的ROS_HOSTNAME设置．</p>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ul>\n<li><a href=\"https://neverbenever.wordpress.com/2017/12/20/install-ros-and-opencv-in-raspberry-piraspbian-stretch/\" target=\"_blank\" rel=\"noopener\">https://neverbenever.wordpress.com/2017/12/20/install-ros-and-opencv-in-raspberry-piraspbian-stretch/</a></li>\n<li><a href=\"https://raspberrypi.stackexchange.com/questions/10251/prepare-sd-card-for-wifi-on-headless-pi\" target=\"_blank\" rel=\"noopener\">https://raspberrypi.stackexchange.com/questions/10251/prepare-sd-card-for-wifi-on-headless-pi</a></li>\n<li><a href=\"https://downloads.ubiquityrobotics.com/pi.html\" target=\"_blank\" rel=\"noopener\">https://downloads.ubiquityrobotics.com/pi.html</a></li>\n<li><a href=\"http://wiki.ros.org/Robots/TurtleBot/Network%20Setup\" target=\"_blank\" rel=\"noopener\">http://wiki.ros.org/Robots/TurtleBot/Network%20Setup</a></li>\n</ul>"},{"title":"RoverPi小车 第一篇：前世今生","date":"2019-05-12T19:00:27.000Z","_content":"\n<img src=\"https://paper-attachments.dropbox.com/s_D06B0A48F9F7B21BB6EB7FC0C5CB18F4351C5400E5B74E225976699118CDB995_1557699404971_roverpi.JPG\" alt=\"venv\" style=\"height:300px;\" align=\"middle\">\n\n从本篇文章开始，我将开始一个系列，介绍我如何搭建一个基于树莓派的自动驾驶小车，我把它叫做RoverPi．这第一篇叫做＂前世今生＂，之所以起这么文邹邹的题目，是因为确有其事．\n\n<!--more-->\n\n## 前世\n\n大约是两年前，我还在美国东部读书的时候，看到Kickstarter上有这么一个众筹项目：CrazyPi小车．概念是一个模块化和低成本的机器人室内监控小车，可以基于一个2D Lidar进行SLAM（即时定位和建图），应用WIFI模块进行云操作，还加入了社交功能．现在还能看到该项目的链接：\n\n\nhttps://www.kickstarter.com/projects/crazypi/crazypi-the-maker-board-designed-for-diy-robot-mak?ref=user_menu\n\n\n宣传片做的很漂亮，只可惜烂尾了．将近两年，我们这些参与其众筹的群众还没有收到其承诺的全部组件．根本连基本的功能都无法完成．项目方好像是一家来自深圳的创业公司．看到网页上各种声讨的评论，作为同胞深感脸上无光．\n\n所以说，我十分同意我一个朋友最近和我聊到的创业观点．创业成功的最关键永远不在技术或者概念，而在于执行．\n\n这便是所谓＂前世＂．\n\n\n## 今生\n\n在自己的Todo List里面一直躺着这一项，设计和搭建自己的机器人．今年以来大概是有了时间和自己折腾的心力，想要重生这个机器人小车．\n\n好在，这个机器人小车的大部分机械组件和传感器组件都已经到位．原本CrazyPi的主板是基于树莓排改的，现在基本上是跳票了，所以决定彻底抛弃原来的＂大脑＂，改用原生的树莓派（Raspberry Pi）和ROS Kinetic平台．\n\n经过改建以后，机器人小车的外观已经大为不同．我将其命名为新的名字：RoverPi．\n\n这是我第一个几乎是从硬件选配到软件平台搭建的项目，看起来不是很难，操作起来却也是一番波折．毕竟之前的机器人经验主要是在算法和仿真平台，不太会遭遇硬件上的挑战．\n\n在后面的文章里，我将分别介绍几个方面：\n\nRoverPi小车 第二篇:　硬件选型\nRoverPi小车 第三篇:　系统安装和网络设置\nRoverPi小车 第四篇:　F710游戏手柄遥控小车运动\nRoverPi小车 第五篇:　Lidar调试和SLAM功能测试\nRoverPi小车 第六篇:　Lidar导航功能测试\n","source":"_posts/RoverPi小车_第一篇_前世今生.md","raw":"---\ntitle: RoverPi小车 第一篇：前世今生\ndate: 2019-05-12 12:00:27\ntags:\n---\n\n<img src=\"https://paper-attachments.dropbox.com/s_D06B0A48F9F7B21BB6EB7FC0C5CB18F4351C5400E5B74E225976699118CDB995_1557699404971_roverpi.JPG\" alt=\"venv\" style=\"height:300px;\" align=\"middle\">\n\n从本篇文章开始，我将开始一个系列，介绍我如何搭建一个基于树莓派的自动驾驶小车，我把它叫做RoverPi．这第一篇叫做＂前世今生＂，之所以起这么文邹邹的题目，是因为确有其事．\n\n<!--more-->\n\n## 前世\n\n大约是两年前，我还在美国东部读书的时候，看到Kickstarter上有这么一个众筹项目：CrazyPi小车．概念是一个模块化和低成本的机器人室内监控小车，可以基于一个2D Lidar进行SLAM（即时定位和建图），应用WIFI模块进行云操作，还加入了社交功能．现在还能看到该项目的链接：\n\n\nhttps://www.kickstarter.com/projects/crazypi/crazypi-the-maker-board-designed-for-diy-robot-mak?ref=user_menu\n\n\n宣传片做的很漂亮，只可惜烂尾了．将近两年，我们这些参与其众筹的群众还没有收到其承诺的全部组件．根本连基本的功能都无法完成．项目方好像是一家来自深圳的创业公司．看到网页上各种声讨的评论，作为同胞深感脸上无光．\n\n所以说，我十分同意我一个朋友最近和我聊到的创业观点．创业成功的最关键永远不在技术或者概念，而在于执行．\n\n这便是所谓＂前世＂．\n\n\n## 今生\n\n在自己的Todo List里面一直躺着这一项，设计和搭建自己的机器人．今年以来大概是有了时间和自己折腾的心力，想要重生这个机器人小车．\n\n好在，这个机器人小车的大部分机械组件和传感器组件都已经到位．原本CrazyPi的主板是基于树莓排改的，现在基本上是跳票了，所以决定彻底抛弃原来的＂大脑＂，改用原生的树莓派（Raspberry Pi）和ROS Kinetic平台．\n\n经过改建以后，机器人小车的外观已经大为不同．我将其命名为新的名字：RoverPi．\n\n这是我第一个几乎是从硬件选配到软件平台搭建的项目，看起来不是很难，操作起来却也是一番波折．毕竟之前的机器人经验主要是在算法和仿真平台，不太会遭遇硬件上的挑战．\n\n在后面的文章里，我将分别介绍几个方面：\n\nRoverPi小车 第二篇:　硬件选型\nRoverPi小车 第三篇:　系统安装和网络设置\nRoverPi小车 第四篇:　F710游戏手柄遥控小车运动\nRoverPi小车 第五篇:　Lidar调试和SLAM功能测试\nRoverPi小车 第六篇:　Lidar导航功能测试\n","slug":"RoverPi小车_第一篇_前世今生","published":1,"updated":"2019-06-20T17:56:01.874Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjysz5nfv0003t3myqoy2eejx","content":"<p><img src=\"https://paper-attachments.dropbox.com/s_D06B0A48F9F7B21BB6EB7FC0C5CB18F4351C5400E5B74E225976699118CDB995_1557699404971_roverpi.JPG\" alt=\"venv\" style=\"height:300px;\" align=\"middle\"></p>\n<p>从本篇文章开始，我将开始一个系列，介绍我如何搭建一个基于树莓派的自动驾驶小车，我把它叫做RoverPi．这第一篇叫做＂前世今生＂，之所以起这么文邹邹的题目，是因为确有其事．</p>\n<a id=\"more\"></a>\n<h2 id=\"前世\"><a href=\"#前世\" class=\"headerlink\" title=\"前世\"></a>前世</h2><p>大约是两年前，我还在美国东部读书的时候，看到Kickstarter上有这么一个众筹项目：CrazyPi小车．概念是一个模块化和低成本的机器人室内监控小车，可以基于一个2D Lidar进行SLAM（即时定位和建图），应用WIFI模块进行云操作，还加入了社交功能．现在还能看到该项目的链接：</p>\n<p><a href=\"https://www.kickstarter.com/projects/crazypi/crazypi-the-maker-board-designed-for-diy-robot-mak?ref=user_menu\" target=\"_blank\" rel=\"noopener\">https://www.kickstarter.com/projects/crazypi/crazypi-the-maker-board-designed-for-diy-robot-mak?ref=user_menu</a></p>\n<p>宣传片做的很漂亮，只可惜烂尾了．将近两年，我们这些参与其众筹的群众还没有收到其承诺的全部组件．根本连基本的功能都无法完成．项目方好像是一家来自深圳的创业公司．看到网页上各种声讨的评论，作为同胞深感脸上无光．</p>\n<p>所以说，我十分同意我一个朋友最近和我聊到的创业观点．创业成功的最关键永远不在技术或者概念，而在于执行．</p>\n<p>这便是所谓＂前世＂．</p>\n<h2 id=\"今生\"><a href=\"#今生\" class=\"headerlink\" title=\"今生\"></a>今生</h2><p>在自己的Todo List里面一直躺着这一项，设计和搭建自己的机器人．今年以来大概是有了时间和自己折腾的心力，想要重生这个机器人小车．</p>\n<p>好在，这个机器人小车的大部分机械组件和传感器组件都已经到位．原本CrazyPi的主板是基于树莓排改的，现在基本上是跳票了，所以决定彻底抛弃原来的＂大脑＂，改用原生的树莓派（Raspberry Pi）和ROS Kinetic平台．</p>\n<p>经过改建以后，机器人小车的外观已经大为不同．我将其命名为新的名字：RoverPi．</p>\n<p>这是我第一个几乎是从硬件选配到软件平台搭建的项目，看起来不是很难，操作起来却也是一番波折．毕竟之前的机器人经验主要是在算法和仿真平台，不太会遭遇硬件上的挑战．</p>\n<p>在后面的文章里，我将分别介绍几个方面：</p>\n<p>RoverPi小车 第二篇:　硬件选型<br>RoverPi小车 第三篇:　系统安装和网络设置<br>RoverPi小车 第四篇:　F710游戏手柄遥控小车运动<br>RoverPi小车 第五篇:　Lidar调试和SLAM功能测试<br>RoverPi小车 第六篇:　Lidar导航功能测试</p>\n","site":{"data":{}},"excerpt":"<p><img src=\"https://paper-attachments.dropbox.com/s_D06B0A48F9F7B21BB6EB7FC0C5CB18F4351C5400E5B74E225976699118CDB995_1557699404971_roverpi.JPG\" alt=\"venv\" style=\"height:300px;\" align=\"middle\"></p>\n<p>从本篇文章开始，我将开始一个系列，介绍我如何搭建一个基于树莓派的自动驾驶小车，我把它叫做RoverPi．这第一篇叫做＂前世今生＂，之所以起这么文邹邹的题目，是因为确有其事．</p>","more":"<h2 id=\"前世\"><a href=\"#前世\" class=\"headerlink\" title=\"前世\"></a>前世</h2><p>大约是两年前，我还在美国东部读书的时候，看到Kickstarter上有这么一个众筹项目：CrazyPi小车．概念是一个模块化和低成本的机器人室内监控小车，可以基于一个2D Lidar进行SLAM（即时定位和建图），应用WIFI模块进行云操作，还加入了社交功能．现在还能看到该项目的链接：</p>\n<p><a href=\"https://www.kickstarter.com/projects/crazypi/crazypi-the-maker-board-designed-for-diy-robot-mak?ref=user_menu\" target=\"_blank\" rel=\"noopener\">https://www.kickstarter.com/projects/crazypi/crazypi-the-maker-board-designed-for-diy-robot-mak?ref=user_menu</a></p>\n<p>宣传片做的很漂亮，只可惜烂尾了．将近两年，我们这些参与其众筹的群众还没有收到其承诺的全部组件．根本连基本的功能都无法完成．项目方好像是一家来自深圳的创业公司．看到网页上各种声讨的评论，作为同胞深感脸上无光．</p>\n<p>所以说，我十分同意我一个朋友最近和我聊到的创业观点．创业成功的最关键永远不在技术或者概念，而在于执行．</p>\n<p>这便是所谓＂前世＂．</p>\n<h2 id=\"今生\"><a href=\"#今生\" class=\"headerlink\" title=\"今生\"></a>今生</h2><p>在自己的Todo List里面一直躺着这一项，设计和搭建自己的机器人．今年以来大概是有了时间和自己折腾的心力，想要重生这个机器人小车．</p>\n<p>好在，这个机器人小车的大部分机械组件和传感器组件都已经到位．原本CrazyPi的主板是基于树莓排改的，现在基本上是跳票了，所以决定彻底抛弃原来的＂大脑＂，改用原生的树莓派（Raspberry Pi）和ROS Kinetic平台．</p>\n<p>经过改建以后，机器人小车的外观已经大为不同．我将其命名为新的名字：RoverPi．</p>\n<p>这是我第一个几乎是从硬件选配到软件平台搭建的项目，看起来不是很难，操作起来却也是一番波折．毕竟之前的机器人经验主要是在算法和仿真平台，不太会遭遇硬件上的挑战．</p>\n<p>在后面的文章里，我将分别介绍几个方面：</p>\n<p>RoverPi小车 第二篇:　硬件选型<br>RoverPi小车 第三篇:　系统安装和网络设置<br>RoverPi小车 第四篇:　F710游戏手柄遥控小车运动<br>RoverPi小车 第五篇:　Lidar调试和SLAM功能测试<br>RoverPi小车 第六篇:　Lidar导航功能测试</p>"},{"title":"venv — Create Virtual Environments","date":"2019-06-20T19:00:27.000Z","_content":"\n<img src=\"https://cdn.activestate.com/wp-content/uploads/2018/10/pipenv-better-than-venv-blog-hero-1200x630.jpg\" alt=\"venv\" style=\"height:300px;\" align=\"middle\">\n\n# venv — Create Virtual Environments\n\n<!--more-->\n\nTo set things up in a virtual environment for isolation is a good way. If you don't already have it install python3's venv module.\n\n\n    sudo apt-get install python3-venv\n\nCreate a venv\n\n\n    mkdir -p ~/my_venv\n    python3 -m venv ~/my_venv\n\nInstall rocker\n\n\n    cd ~/my_venv\n    . ~/my_venv/bin/activate\n    pip install git+https://github.com/osrf/rocker.git #(just an example)\n\nFor any new terminal re activate the venv before trying to use it.\n\n\n    . ~/my_venv/bin/activate\n","source":"_posts/venv_—_Create_Virtual_Environments.md","raw":"---\ntitle: venv — Create Virtual Environments\ndate: 2019-06-20 12:00:27\ntags:\n---\n\n<img src=\"https://cdn.activestate.com/wp-content/uploads/2018/10/pipenv-better-than-venv-blog-hero-1200x630.jpg\" alt=\"venv\" style=\"height:300px;\" align=\"middle\">\n\n# venv — Create Virtual Environments\n\n<!--more-->\n\nTo set things up in a virtual environment for isolation is a good way. If you don't already have it install python3's venv module.\n\n\n    sudo apt-get install python3-venv\n\nCreate a venv\n\n\n    mkdir -p ~/my_venv\n    python3 -m venv ~/my_venv\n\nInstall rocker\n\n\n    cd ~/my_venv\n    . ~/my_venv/bin/activate\n    pip install git+https://github.com/osrf/rocker.git #(just an example)\n\nFor any new terminal re activate the venv before trying to use it.\n\n\n    . ~/my_venv/bin/activate\n","slug":"venv_—_Create_Virtual_Environments","published":1,"updated":"2019-06-20T17:54:48.615Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjysz5nfy0005t3mya502532y","content":"<p><img src=\"https://cdn.activestate.com/wp-content/uploads/2018/10/pipenv-better-than-venv-blog-hero-1200x630.jpg\" alt=\"venv\" style=\"height:300px;\" align=\"middle\"></p>\n<h1 id=\"venv-—-Create-Virtual-Environments\"><a href=\"#venv-—-Create-Virtual-Environments\" class=\"headerlink\" title=\"venv — Create Virtual Environments\"></a>venv — Create Virtual Environments</h1><a id=\"more\"></a>\n<p>To set things up in a virtual environment for isolation is a good way. If you don’t already have it install python3’s venv module.</p>\n<pre><code>sudo apt-get install python3-venv\n</code></pre><p>Create a venv</p>\n<pre><code>mkdir -p ~/my_venv\npython3 -m venv ~/my_venv\n</code></pre><p>Install rocker</p>\n<pre><code>cd ~/my_venv\n. ~/my_venv/bin/activate\npip install git+https://github.com/osrf/rocker.git #(just an example)\n</code></pre><p>For any new terminal re activate the venv before trying to use it.</p>\n<pre><code>. ~/my_venv/bin/activate\n</code></pre>","site":{"data":{}},"excerpt":"<p><img src=\"https://cdn.activestate.com/wp-content/uploads/2018/10/pipenv-better-than-venv-blog-hero-1200x630.jpg\" alt=\"venv\" style=\"height:300px;\" align=\"middle\"></p>\n<h1 id=\"venv-—-Create-Virtual-Environments\"><a href=\"#venv-—-Create-Virtual-Environments\" class=\"headerlink\" title=\"venv — Create Virtual Environments\"></a>venv — Create Virtual Environments</h1>","more":"<p>To set things up in a virtual environment for isolation is a good way. If you don’t already have it install python3’s venv module.</p>\n<pre><code>sudo apt-get install python3-venv\n</code></pre><p>Create a venv</p>\n<pre><code>mkdir -p ~/my_venv\npython3 -m venv ~/my_venv\n</code></pre><p>Install rocker</p>\n<pre><code>cd ~/my_venv\n. ~/my_venv/bin/activate\npip install git+https://github.com/osrf/rocker.git #(just an example)\n</code></pre><p>For any new terminal re activate the venv before trying to use it.</p>\n<pre><code>. ~/my_venv/bin/activate\n</code></pre>"},{"title":"代码赏析 | Rapidly-exploring Random Trees (RRTs)","date":"2019-07-26T19:00:27.000Z","_content":"\nRapidly-exploring Random Trees (RRTs)\n\n源论文：Steven M. LaVlle, Rapicly-Exploring Random Trees: A New Tool for Path Planning, 1998.\n\n<!--more-->\n\nFrom Wikipedia:\n\nA rapidly exploring random tree (RRT) is an algorithm designed to efficiently search nonconvex, high-dimensional spaces by randomly building a space-filling tree. The tree is constructed incrementally from samples drawn randomly from the search space and is inherently biased to grow towards large unsearched areas of the problem. RRTs were developed by Steven M. LaValle and James J. Kuffner Jr. They easily handle problems with obstacles and differential constraints (nonholonomic and kinodynamic) and have been widely used in autonomous robotic motion planning.\n\nRRTs can be viewed as a technique to generate open-loop trajectories for nonlinear systems with state constraints. An RRT can also be considered as a Monte-Carlo method to bias search into the largest Voronoi regions of a graph in a configuration space. Some variations can even be considered stochastic fractals.\n\nWhy RRT ?\n\n- High dimensional planning w/ complex dynamic model\n- Smooth maneuvering\n\nFor a general configuration space C, the algorithm in pseudocode is as follows:\n\n```\nAlgorithm BuildRRT\n  Input: Initial configuration qinit, number of vertices in RRT K, incremental distance Δq)\n  Output: RRT graph G\n\n  G.init(qinit)\n  for k = 1 to K\n    qrand ← RAND_CONF()\n    qnear ← NEAREST_VERTEX(qrand, G)\n    qnew ← NEW_CONF(qnear, qrand, Δq)\n    G.add_vertex(qnew)\n    G.add_edge(qnear, qnew)\n  return G\n```\n\n代码源：https://github.com/AtsushiSakai/PythonRobotics\n\nsimple_rrt.py\n\n```python\ndef Planning(self, animation=True):\n    \"\"\"\n    Pathplanning\n\n    animation: flag for animation on or off\n    \"\"\"\n\n    self.nodeList = [self.start]\n    while True:\n        # Random Sampling\n        if random.randint(0, 100) > self.goalSampleRate:\n            rnd = [random.uniform(self.minrand, self.maxrand), random.uniform(\n                self.minrand, self.maxrand)]\n        else:\n            rnd = [self.end.x, self.end.y]\n\n        # Find nearest node\n        nind = self.GetNearestListIndex(self.nodeList, rnd)\n        # print(nind)\n\n        # expand tree\n        nearestNode = self.nodeList[nind]\n        theta = math.atan2(rnd[1] - nearestNode.y, rnd[0] - nearestNode.x)\n\n        newNode = copy.deepcopy(nearestNode)\n        newNode.x += self.expandDis * math.cos(theta)\n        newNode.y += self.expandDis * math.sin(theta)\n        newNode.parent = nind\n\n        if not self.__CollisionCheck(newNode, self.obstacleList):\n            continue\n\n        self.nodeList.append(newNode)\n        print(\"nNodelist:\", len(self.nodeList))\n\n        # check goal\n        dx = newNode.x - self.end.x\n        dy = newNode.y - self.end.y\n        d = math.sqrt(dx * dx + dy * dy)\n        if d <= self.expandDis:\n            print(\"Goal!!\")\n            break\n\n        if animation:\n            self.DrawGraph(rnd)\n\n    path = [[self.end.x, self.end.y]]\n    lastIndex = len(self.nodeList) - 1\n    while self.nodeList[lastIndex].parent is not None:\n        node = self.nodeList[lastIndex]\n        path.append([node.x, node.y])\n        lastIndex = node.parent\n    path.append([self.start.x, self.start.y])\n\n    return path\n```\n","source":"_posts/代码赏析_Random_Forest_Tree_Planning.md","raw":"---\ntitle: 代码赏析 | Rapidly-exploring Random Trees (RRTs)\ndate: 2019-07-26 12:00:27\ntags:\n---\n\nRapidly-exploring Random Trees (RRTs)\n\n源论文：Steven M. LaVlle, Rapicly-Exploring Random Trees: A New Tool for Path Planning, 1998.\n\n<!--more-->\n\nFrom Wikipedia:\n\nA rapidly exploring random tree (RRT) is an algorithm designed to efficiently search nonconvex, high-dimensional spaces by randomly building a space-filling tree. The tree is constructed incrementally from samples drawn randomly from the search space and is inherently biased to grow towards large unsearched areas of the problem. RRTs were developed by Steven M. LaValle and James J. Kuffner Jr. They easily handle problems with obstacles and differential constraints (nonholonomic and kinodynamic) and have been widely used in autonomous robotic motion planning.\n\nRRTs can be viewed as a technique to generate open-loop trajectories for nonlinear systems with state constraints. An RRT can also be considered as a Monte-Carlo method to bias search into the largest Voronoi regions of a graph in a configuration space. Some variations can even be considered stochastic fractals.\n\nWhy RRT ?\n\n- High dimensional planning w/ complex dynamic model\n- Smooth maneuvering\n\nFor a general configuration space C, the algorithm in pseudocode is as follows:\n\n```\nAlgorithm BuildRRT\n  Input: Initial configuration qinit, number of vertices in RRT K, incremental distance Δq)\n  Output: RRT graph G\n\n  G.init(qinit)\n  for k = 1 to K\n    qrand ← RAND_CONF()\n    qnear ← NEAREST_VERTEX(qrand, G)\n    qnew ← NEW_CONF(qnear, qrand, Δq)\n    G.add_vertex(qnew)\n    G.add_edge(qnear, qnew)\n  return G\n```\n\n代码源：https://github.com/AtsushiSakai/PythonRobotics\n\nsimple_rrt.py\n\n```python\ndef Planning(self, animation=True):\n    \"\"\"\n    Pathplanning\n\n    animation: flag for animation on or off\n    \"\"\"\n\n    self.nodeList = [self.start]\n    while True:\n        # Random Sampling\n        if random.randint(0, 100) > self.goalSampleRate:\n            rnd = [random.uniform(self.minrand, self.maxrand), random.uniform(\n                self.minrand, self.maxrand)]\n        else:\n            rnd = [self.end.x, self.end.y]\n\n        # Find nearest node\n        nind = self.GetNearestListIndex(self.nodeList, rnd)\n        # print(nind)\n\n        # expand tree\n        nearestNode = self.nodeList[nind]\n        theta = math.atan2(rnd[1] - nearestNode.y, rnd[0] - nearestNode.x)\n\n        newNode = copy.deepcopy(nearestNode)\n        newNode.x += self.expandDis * math.cos(theta)\n        newNode.y += self.expandDis * math.sin(theta)\n        newNode.parent = nind\n\n        if not self.__CollisionCheck(newNode, self.obstacleList):\n            continue\n\n        self.nodeList.append(newNode)\n        print(\"nNodelist:\", len(self.nodeList))\n\n        # check goal\n        dx = newNode.x - self.end.x\n        dy = newNode.y - self.end.y\n        d = math.sqrt(dx * dx + dy * dy)\n        if d <= self.expandDis:\n            print(\"Goal!!\")\n            break\n\n        if animation:\n            self.DrawGraph(rnd)\n\n    path = [[self.end.x, self.end.y]]\n    lastIndex = len(self.nodeList) - 1\n    while self.nodeList[lastIndex].parent is not None:\n        node = self.nodeList[lastIndex]\n        path.append([node.x, node.y])\n        lastIndex = node.parent\n    path.append([self.start.x, self.start.y])\n\n    return path\n```\n","slug":"代码赏析_Random_Forest_Tree_Planning","published":1,"updated":"2019-08-01T00:16:21.918Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjysz5ng10007t3myr3qzd74v","content":"<p>Rapidly-exploring Random Trees (RRTs)</p>\n<p>源论文：Steven M. LaVlle, Rapicly-Exploring Random Trees: A New Tool for Path Planning, 1998.</p>\n<a id=\"more\"></a>\n<p>From Wikipedia:</p>\n<p>A rapidly exploring random tree (RRT) is an algorithm designed to efficiently search nonconvex, high-dimensional spaces by randomly building a space-filling tree. The tree is constructed incrementally from samples drawn randomly from the search space and is inherently biased to grow towards large unsearched areas of the problem. RRTs were developed by Steven M. LaValle and James J. Kuffner Jr. They easily handle problems with obstacles and differential constraints (nonholonomic and kinodynamic) and have been widely used in autonomous robotic motion planning.</p>\n<p>RRTs can be viewed as a technique to generate open-loop trajectories for nonlinear systems with state constraints. An RRT can also be considered as a Monte-Carlo method to bias search into the largest Voronoi regions of a graph in a configuration space. Some variations can even be considered stochastic fractals.</p>\n<p>Why RRT ?</p>\n<ul>\n<li>High dimensional planning w/ complex dynamic model</li>\n<li>Smooth maneuvering</li>\n</ul>\n<p>For a general configuration space C, the algorithm in pseudocode is as follows:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Algorithm BuildRRT</span><br><span class=\"line\">  Input: Initial configuration qinit, number of vertices in RRT K, incremental distance Δq)</span><br><span class=\"line\">  Output: RRT graph G</span><br><span class=\"line\"></span><br><span class=\"line\">  G.init(qinit)</span><br><span class=\"line\">  for k = 1 to K</span><br><span class=\"line\">    qrand ← RAND_CONF()</span><br><span class=\"line\">    qnear ← NEAREST_VERTEX(qrand, G)</span><br><span class=\"line\">    qnew ← NEW_CONF(qnear, qrand, Δq)</span><br><span class=\"line\">    G.add_vertex(qnew)</span><br><span class=\"line\">    G.add_edge(qnear, qnew)</span><br><span class=\"line\">  return G</span><br></pre></td></tr></table></figure>\n<p>代码源：<a href=\"https://github.com/AtsushiSakai/PythonRobotics\" target=\"_blank\" rel=\"noopener\">https://github.com/AtsushiSakai/PythonRobotics</a></p>\n<p>simple_rrt.py</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">Planning</span><span class=\"params\">(self, animation=True)</span>:</span></span><br><span class=\"line\">    <span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">    Pathplanning</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    animation: flag for animation on or off</span></span><br><span class=\"line\"><span class=\"string\">    \"\"\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">    self.nodeList = [self.start]</span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">        <span class=\"comment\"># Random Sampling</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> random.randint(<span class=\"number\">0</span>, <span class=\"number\">100</span>) &gt; self.goalSampleRate:</span><br><span class=\"line\">            rnd = [random.uniform(self.minrand, self.maxrand), random.uniform(</span><br><span class=\"line\">                self.minrand, self.maxrand)]</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            rnd = [self.end.x, self.end.y]</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># Find nearest node</span></span><br><span class=\"line\">        nind = self.GetNearestListIndex(self.nodeList, rnd)</span><br><span class=\"line\">        <span class=\"comment\"># print(nind)</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># expand tree</span></span><br><span class=\"line\">        nearestNode = self.nodeList[nind]</span><br><span class=\"line\">        theta = math.atan2(rnd[<span class=\"number\">1</span>] - nearestNode.y, rnd[<span class=\"number\">0</span>] - nearestNode.x)</span><br><span class=\"line\"></span><br><span class=\"line\">        newNode = copy.deepcopy(nearestNode)</span><br><span class=\"line\">        newNode.x += self.expandDis * math.cos(theta)</span><br><span class=\"line\">        newNode.y += self.expandDis * math.sin(theta)</span><br><span class=\"line\">        newNode.parent = nind</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> self.__CollisionCheck(newNode, self.obstacleList):</span><br><span class=\"line\">            <span class=\"keyword\">continue</span></span><br><span class=\"line\"></span><br><span class=\"line\">        self.nodeList.append(newNode)</span><br><span class=\"line\">        print(<span class=\"string\">\"nNodelist:\"</span>, len(self.nodeList))</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># check goal</span></span><br><span class=\"line\">        dx = newNode.x - self.end.x</span><br><span class=\"line\">        dy = newNode.y - self.end.y</span><br><span class=\"line\">        d = math.sqrt(dx * dx + dy * dy)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> d &lt;= self.expandDis:</span><br><span class=\"line\">            print(<span class=\"string\">\"Goal!!\"</span>)</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> animation:</span><br><span class=\"line\">            self.DrawGraph(rnd)</span><br><span class=\"line\"></span><br><span class=\"line\">    path = [[self.end.x, self.end.y]]</span><br><span class=\"line\">    lastIndex = len(self.nodeList) - <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> self.nodeList[lastIndex].parent <span class=\"keyword\">is</span> <span class=\"keyword\">not</span> <span class=\"literal\">None</span>:</span><br><span class=\"line\">        node = self.nodeList[lastIndex]</span><br><span class=\"line\">        path.append([node.x, node.y])</span><br><span class=\"line\">        lastIndex = node.parent</span><br><span class=\"line\">    path.append([self.start.x, self.start.y])</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> path</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p>Rapidly-exploring Random Trees (RRTs)</p>\n<p>源论文：Steven M. LaVlle, Rapicly-Exploring Random Trees: A New Tool for Path Planning, 1998.</p>","more":"<p>From Wikipedia:</p>\n<p>A rapidly exploring random tree (RRT) is an algorithm designed to efficiently search nonconvex, high-dimensional spaces by randomly building a space-filling tree. The tree is constructed incrementally from samples drawn randomly from the search space and is inherently biased to grow towards large unsearched areas of the problem. RRTs were developed by Steven M. LaValle and James J. Kuffner Jr. They easily handle problems with obstacles and differential constraints (nonholonomic and kinodynamic) and have been widely used in autonomous robotic motion planning.</p>\n<p>RRTs can be viewed as a technique to generate open-loop trajectories for nonlinear systems with state constraints. An RRT can also be considered as a Monte-Carlo method to bias search into the largest Voronoi regions of a graph in a configuration space. Some variations can even be considered stochastic fractals.</p>\n<p>Why RRT ?</p>\n<ul>\n<li>High dimensional planning w/ complex dynamic model</li>\n<li>Smooth maneuvering</li>\n</ul>\n<p>For a general configuration space C, the algorithm in pseudocode is as follows:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Algorithm BuildRRT</span><br><span class=\"line\">  Input: Initial configuration qinit, number of vertices in RRT K, incremental distance Δq)</span><br><span class=\"line\">  Output: RRT graph G</span><br><span class=\"line\"></span><br><span class=\"line\">  G.init(qinit)</span><br><span class=\"line\">  for k = 1 to K</span><br><span class=\"line\">    qrand ← RAND_CONF()</span><br><span class=\"line\">    qnear ← NEAREST_VERTEX(qrand, G)</span><br><span class=\"line\">    qnew ← NEW_CONF(qnear, qrand, Δq)</span><br><span class=\"line\">    G.add_vertex(qnew)</span><br><span class=\"line\">    G.add_edge(qnear, qnew)</span><br><span class=\"line\">  return G</span><br></pre></td></tr></table></figure>\n<p>代码源：<a href=\"https://github.com/AtsushiSakai/PythonRobotics\" target=\"_blank\" rel=\"noopener\">https://github.com/AtsushiSakai/PythonRobotics</a></p>\n<p>simple_rrt.py</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">Planning</span><span class=\"params\">(self, animation=True)</span>:</span></span><br><span class=\"line\">    <span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">    Pathplanning</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    animation: flag for animation on or off</span></span><br><span class=\"line\"><span class=\"string\">    \"\"\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">    self.nodeList = [self.start]</span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">        <span class=\"comment\"># Random Sampling</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> random.randint(<span class=\"number\">0</span>, <span class=\"number\">100</span>) &gt; self.goalSampleRate:</span><br><span class=\"line\">            rnd = [random.uniform(self.minrand, self.maxrand), random.uniform(</span><br><span class=\"line\">                self.minrand, self.maxrand)]</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            rnd = [self.end.x, self.end.y]</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># Find nearest node</span></span><br><span class=\"line\">        nind = self.GetNearestListIndex(self.nodeList, rnd)</span><br><span class=\"line\">        <span class=\"comment\"># print(nind)</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># expand tree</span></span><br><span class=\"line\">        nearestNode = self.nodeList[nind]</span><br><span class=\"line\">        theta = math.atan2(rnd[<span class=\"number\">1</span>] - nearestNode.y, rnd[<span class=\"number\">0</span>] - nearestNode.x)</span><br><span class=\"line\"></span><br><span class=\"line\">        newNode = copy.deepcopy(nearestNode)</span><br><span class=\"line\">        newNode.x += self.expandDis * math.cos(theta)</span><br><span class=\"line\">        newNode.y += self.expandDis * math.sin(theta)</span><br><span class=\"line\">        newNode.parent = nind</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> self.__CollisionCheck(newNode, self.obstacleList):</span><br><span class=\"line\">            <span class=\"keyword\">continue</span></span><br><span class=\"line\"></span><br><span class=\"line\">        self.nodeList.append(newNode)</span><br><span class=\"line\">        print(<span class=\"string\">\"nNodelist:\"</span>, len(self.nodeList))</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># check goal</span></span><br><span class=\"line\">        dx = newNode.x - self.end.x</span><br><span class=\"line\">        dy = newNode.y - self.end.y</span><br><span class=\"line\">        d = math.sqrt(dx * dx + dy * dy)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> d &lt;= self.expandDis:</span><br><span class=\"line\">            print(<span class=\"string\">\"Goal!!\"</span>)</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> animation:</span><br><span class=\"line\">            self.DrawGraph(rnd)</span><br><span class=\"line\"></span><br><span class=\"line\">    path = [[self.end.x, self.end.y]]</span><br><span class=\"line\">    lastIndex = len(self.nodeList) - <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> self.nodeList[lastIndex].parent <span class=\"keyword\">is</span> <span class=\"keyword\">not</span> <span class=\"literal\">None</span>:</span><br><span class=\"line\">        node = self.nodeList[lastIndex]</span><br><span class=\"line\">        path.append([node.x, node.y])</span><br><span class=\"line\">        lastIndex = node.parent</span><br><span class=\"line\">    path.append([self.start.x, self.start.y])</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> path</span><br></pre></td></tr></table></figure>"},{"title":"机器人工程师纳米学位完结，迷思和追忆","date":"2019-07-22T19:00:27.000Z","_content":"\n机器人工程师纳米学位（Robotics Engineer Nanodegree）终于完结了，这是一个两个学期总共9个project的系列课程。我在去年同期就完成了第一学期，因为工作的原因，没有立即继续第二学期的学习，而是拖到今年，尽管犹豫了一阵，最后希望有始有终，总算完成了第二学期的内容。趁着有些余温，把一些想法做一个保存，凭一点回顾与总结，看看在这个项目中的得与失。\n\n<!--more-->\n\n首先，非常感恩Udacity 这个平台，从一开始的深度学习纳米学位（Deep Learning Foundation Nanodegree）入门深度学习，无人驾驶工程师纳米学位（Self-Driving Nanodegree）系统学习无人驾驶相关知识，机器学习工程师纳米学位（Machine Learning Nanodegree）扩展了更大范畴人工智能的认识。这些为我这几年在人工智能领域的野蛮生长提供了充足的养料。我也从中获取了十分有益的项目经验，不仅帮助了我的毕业设计，也成功地让我找到自动驾驶领域的软件工程师职位。如今在这个跑道上，我有更多机会深入自动驾驶以及人工智能这一主题。\n\n但到了第四个纳米学位，机器人工程师纳米学位项目（Robotics Engineer Nanodegree），我感到明显的重复感和难以深挖的感觉。这不禁让我思考“到底是我变了还是她变了”的问题。\n\n暂时的结论是，我们都要不可避免地迎接转变，主动迎接会让阵痛小得多。\n\n我刚才提到了我的“野蛮生长”，当然这是褒义的，是我乐见的。但终究它不是持续的，更加不是有条理的。这在初期是一个接近最有效率的学习方式。如同一张白纸上，随意演绎。但时间长了，想要深入就不行了。这就是为什么我在后期越来越没有学习的快感，越来越少感到知识的获得。信息和文字的堆叠，因为不系统和不深入，反而成为信息累赘。我还不想直接定义他们为垃圾，他们只是缺乏整理。就好像偌大的房间，如果乱糟糟堆放家具和杂物，也会觉得拥挤。只要勤于打扫和收拾，反而很小的房间也能区分出很多的功能。\n\n这段时间，通过各种各样的项目的历练，我得到了很多方面知识和能力的训练，但他们分别带来的价值参差不齐。很实际的问题是，我们自己的定位和需要在哪里，如果自己没有方向，在每一块领域平均用力，那就毫无疑问地拉低了自己的天花板，无法打开自己的纵深。\n\n无论是深度学习也好，机器人也好，计算机视觉也好，运动规划也好，最重要的是，如何服务一个目标，去解决一个最终问题。而不是满足于解决一些联系并不紧密的小问题。当我们沾沾自喜于完成了一个一个“小目标”，却还是找不到自己的意义，却还是轻易被取代呢？\n\n我觉的我是时候思考如何编制一只大网，去捕捉一条大鱼。\n\nUdacity也在变，无可厚非，从一个教育平台，回归到商业本质，不可避免，平台的入口在变贵，知识的泡沫在增加。在我报名第二学期的时候，陡然发现，机器人工程师项目被精简成了一个一学期的项目，改成按月订购的学习方式。我不太认同内容的缩水，还是坚持报名了原版的第二学期。\n\n其实，对我也算恰逢其时，我也可以从这里毕业了。如果，每个学习的人都是在写自己的一本书，我要逐渐甩开它这根拐杖，自己去探索了。\n\n- Project: Search and Sample Return\n- Project: Robotic Arm: Pick & Place\n- Project: 3D Perception\n- Project: Follow Me\n- Project: Robotic Inference\n- Project: Where Am I?\n- Project: Map My World Robot\n- Project: Deep RL Arm Manipulation\n- Project: Home Service Robot\n\n这些项目从知识角度，其实和无人驾驶工程师有大量重叠，其中我比较抱有期待的SLAM项目和深度增强学习训练机械臂的项目，又太像填空，自己需要编程的部分很少，所以有一点点失望。\n\n当然“师傅领进门，修行看个人”。通过了解这项目的操作，也是很重要的一扇扇窗。如何开凿一个明亮的通道，在于自己是否有了一个精修且持续投入的方向。\n\n这些项目网罗了包括，\n\n- 运动控制\n- 图像处理\n- 计算机视觉\n- 定位与建图\n- 深度增强学习\n- 嵌入式\n\n我觉得下一步，我想能够利用我手头的Jetson Racecar去重新实践一些项目，尤其是SLAM的项目。我初步有一些想法，希望在视觉导航和运动规划算法上继续深入下去。\n","source":"_posts/Summary-After-RoboND.md","raw":"---\ntitle: 机器人工程师纳米学位完结，迷思和追忆\ndate: 2019-07-22 12:00:27\ntags:\n---\n\n机器人工程师纳米学位（Robotics Engineer Nanodegree）终于完结了，这是一个两个学期总共9个project的系列课程。我在去年同期就完成了第一学期，因为工作的原因，没有立即继续第二学期的学习，而是拖到今年，尽管犹豫了一阵，最后希望有始有终，总算完成了第二学期的内容。趁着有些余温，把一些想法做一个保存，凭一点回顾与总结，看看在这个项目中的得与失。\n\n<!--more-->\n\n首先，非常感恩Udacity 这个平台，从一开始的深度学习纳米学位（Deep Learning Foundation Nanodegree）入门深度学习，无人驾驶工程师纳米学位（Self-Driving Nanodegree）系统学习无人驾驶相关知识，机器学习工程师纳米学位（Machine Learning Nanodegree）扩展了更大范畴人工智能的认识。这些为我这几年在人工智能领域的野蛮生长提供了充足的养料。我也从中获取了十分有益的项目经验，不仅帮助了我的毕业设计，也成功地让我找到自动驾驶领域的软件工程师职位。如今在这个跑道上，我有更多机会深入自动驾驶以及人工智能这一主题。\n\n但到了第四个纳米学位，机器人工程师纳米学位项目（Robotics Engineer Nanodegree），我感到明显的重复感和难以深挖的感觉。这不禁让我思考“到底是我变了还是她变了”的问题。\n\n暂时的结论是，我们都要不可避免地迎接转变，主动迎接会让阵痛小得多。\n\n我刚才提到了我的“野蛮生长”，当然这是褒义的，是我乐见的。但终究它不是持续的，更加不是有条理的。这在初期是一个接近最有效率的学习方式。如同一张白纸上，随意演绎。但时间长了，想要深入就不行了。这就是为什么我在后期越来越没有学习的快感，越来越少感到知识的获得。信息和文字的堆叠，因为不系统和不深入，反而成为信息累赘。我还不想直接定义他们为垃圾，他们只是缺乏整理。就好像偌大的房间，如果乱糟糟堆放家具和杂物，也会觉得拥挤。只要勤于打扫和收拾，反而很小的房间也能区分出很多的功能。\n\n这段时间，通过各种各样的项目的历练，我得到了很多方面知识和能力的训练，但他们分别带来的价值参差不齐。很实际的问题是，我们自己的定位和需要在哪里，如果自己没有方向，在每一块领域平均用力，那就毫无疑问地拉低了自己的天花板，无法打开自己的纵深。\n\n无论是深度学习也好，机器人也好，计算机视觉也好，运动规划也好，最重要的是，如何服务一个目标，去解决一个最终问题。而不是满足于解决一些联系并不紧密的小问题。当我们沾沾自喜于完成了一个一个“小目标”，却还是找不到自己的意义，却还是轻易被取代呢？\n\n我觉的我是时候思考如何编制一只大网，去捕捉一条大鱼。\n\nUdacity也在变，无可厚非，从一个教育平台，回归到商业本质，不可避免，平台的入口在变贵，知识的泡沫在增加。在我报名第二学期的时候，陡然发现，机器人工程师项目被精简成了一个一学期的项目，改成按月订购的学习方式。我不太认同内容的缩水，还是坚持报名了原版的第二学期。\n\n其实，对我也算恰逢其时，我也可以从这里毕业了。如果，每个学习的人都是在写自己的一本书，我要逐渐甩开它这根拐杖，自己去探索了。\n\n- Project: Search and Sample Return\n- Project: Robotic Arm: Pick & Place\n- Project: 3D Perception\n- Project: Follow Me\n- Project: Robotic Inference\n- Project: Where Am I?\n- Project: Map My World Robot\n- Project: Deep RL Arm Manipulation\n- Project: Home Service Robot\n\n这些项目从知识角度，其实和无人驾驶工程师有大量重叠，其中我比较抱有期待的SLAM项目和深度增强学习训练机械臂的项目，又太像填空，自己需要编程的部分很少，所以有一点点失望。\n\n当然“师傅领进门，修行看个人”。通过了解这项目的操作，也是很重要的一扇扇窗。如何开凿一个明亮的通道，在于自己是否有了一个精修且持续投入的方向。\n\n这些项目网罗了包括，\n\n- 运动控制\n- 图像处理\n- 计算机视觉\n- 定位与建图\n- 深度增强学习\n- 嵌入式\n\n我觉得下一步，我想能够利用我手头的Jetson Racecar去重新实践一些项目，尤其是SLAM的项目。我初步有一些想法，希望在视觉导航和运动规划算法上继续深入下去。\n","slug":"Summary-After-RoboND","published":1,"updated":"2019-07-22T23:55:09.873Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjysz5ng30009t3my0qpdwrz4","content":"<p>机器人工程师纳米学位（Robotics Engineer Nanodegree）终于完结了，这是一个两个学期总共9个project的系列课程。我在去年同期就完成了第一学期，因为工作的原因，没有立即继续第二学期的学习，而是拖到今年，尽管犹豫了一阵，最后希望有始有终，总算完成了第二学期的内容。趁着有些余温，把一些想法做一个保存，凭一点回顾与总结，看看在这个项目中的得与失。</p>\n<a id=\"more\"></a>\n<p>首先，非常感恩Udacity 这个平台，从一开始的深度学习纳米学位（Deep Learning Foundation Nanodegree）入门深度学习，无人驾驶工程师纳米学位（Self-Driving Nanodegree）系统学习无人驾驶相关知识，机器学习工程师纳米学位（Machine Learning Nanodegree）扩展了更大范畴人工智能的认识。这些为我这几年在人工智能领域的野蛮生长提供了充足的养料。我也从中获取了十分有益的项目经验，不仅帮助了我的毕业设计，也成功地让我找到自动驾驶领域的软件工程师职位。如今在这个跑道上，我有更多机会深入自动驾驶以及人工智能这一主题。</p>\n<p>但到了第四个纳米学位，机器人工程师纳米学位项目（Robotics Engineer Nanodegree），我感到明显的重复感和难以深挖的感觉。这不禁让我思考“到底是我变了还是她变了”的问题。</p>\n<p>暂时的结论是，我们都要不可避免地迎接转变，主动迎接会让阵痛小得多。</p>\n<p>我刚才提到了我的“野蛮生长”，当然这是褒义的，是我乐见的。但终究它不是持续的，更加不是有条理的。这在初期是一个接近最有效率的学习方式。如同一张白纸上，随意演绎。但时间长了，想要深入就不行了。这就是为什么我在后期越来越没有学习的快感，越来越少感到知识的获得。信息和文字的堆叠，因为不系统和不深入，反而成为信息累赘。我还不想直接定义他们为垃圾，他们只是缺乏整理。就好像偌大的房间，如果乱糟糟堆放家具和杂物，也会觉得拥挤。只要勤于打扫和收拾，反而很小的房间也能区分出很多的功能。</p>\n<p>这段时间，通过各种各样的项目的历练，我得到了很多方面知识和能力的训练，但他们分别带来的价值参差不齐。很实际的问题是，我们自己的定位和需要在哪里，如果自己没有方向，在每一块领域平均用力，那就毫无疑问地拉低了自己的天花板，无法打开自己的纵深。</p>\n<p>无论是深度学习也好，机器人也好，计算机视觉也好，运动规划也好，最重要的是，如何服务一个目标，去解决一个最终问题。而不是满足于解决一些联系并不紧密的小问题。当我们沾沾自喜于完成了一个一个“小目标”，却还是找不到自己的意义，却还是轻易被取代呢？</p>\n<p>我觉的我是时候思考如何编制一只大网，去捕捉一条大鱼。</p>\n<p>Udacity也在变，无可厚非，从一个教育平台，回归到商业本质，不可避免，平台的入口在变贵，知识的泡沫在增加。在我报名第二学期的时候，陡然发现，机器人工程师项目被精简成了一个一学期的项目，改成按月订购的学习方式。我不太认同内容的缩水，还是坚持报名了原版的第二学期。</p>\n<p>其实，对我也算恰逢其时，我也可以从这里毕业了。如果，每个学习的人都是在写自己的一本书，我要逐渐甩开它这根拐杖，自己去探索了。</p>\n<ul>\n<li>Project: Search and Sample Return</li>\n<li>Project: Robotic Arm: Pick &amp; Place</li>\n<li>Project: 3D Perception</li>\n<li>Project: Follow Me</li>\n<li>Project: Robotic Inference</li>\n<li>Project: Where Am I?</li>\n<li>Project: Map My World Robot</li>\n<li>Project: Deep RL Arm Manipulation</li>\n<li>Project: Home Service Robot</li>\n</ul>\n<p>这些项目从知识角度，其实和无人驾驶工程师有大量重叠，其中我比较抱有期待的SLAM项目和深度增强学习训练机械臂的项目，又太像填空，自己需要编程的部分很少，所以有一点点失望。</p>\n<p>当然“师傅领进门，修行看个人”。通过了解这项目的操作，也是很重要的一扇扇窗。如何开凿一个明亮的通道，在于自己是否有了一个精修且持续投入的方向。</p>\n<p>这些项目网罗了包括，</p>\n<ul>\n<li>运动控制</li>\n<li>图像处理</li>\n<li>计算机视觉</li>\n<li>定位与建图</li>\n<li>深度增强学习</li>\n<li>嵌入式</li>\n</ul>\n<p>我觉得下一步，我想能够利用我手头的Jetson Racecar去重新实践一些项目，尤其是SLAM的项目。我初步有一些想法，希望在视觉导航和运动规划算法上继续深入下去。</p>\n","site":{"data":{}},"excerpt":"<p>机器人工程师纳米学位（Robotics Engineer Nanodegree）终于完结了，这是一个两个学期总共9个project的系列课程。我在去年同期就完成了第一学期，因为工作的原因，没有立即继续第二学期的学习，而是拖到今年，尽管犹豫了一阵，最后希望有始有终，总算完成了第二学期的内容。趁着有些余温，把一些想法做一个保存，凭一点回顾与总结，看看在这个项目中的得与失。</p>","more":"<p>首先，非常感恩Udacity 这个平台，从一开始的深度学习纳米学位（Deep Learning Foundation Nanodegree）入门深度学习，无人驾驶工程师纳米学位（Self-Driving Nanodegree）系统学习无人驾驶相关知识，机器学习工程师纳米学位（Machine Learning Nanodegree）扩展了更大范畴人工智能的认识。这些为我这几年在人工智能领域的野蛮生长提供了充足的养料。我也从中获取了十分有益的项目经验，不仅帮助了我的毕业设计，也成功地让我找到自动驾驶领域的软件工程师职位。如今在这个跑道上，我有更多机会深入自动驾驶以及人工智能这一主题。</p>\n<p>但到了第四个纳米学位，机器人工程师纳米学位项目（Robotics Engineer Nanodegree），我感到明显的重复感和难以深挖的感觉。这不禁让我思考“到底是我变了还是她变了”的问题。</p>\n<p>暂时的结论是，我们都要不可避免地迎接转变，主动迎接会让阵痛小得多。</p>\n<p>我刚才提到了我的“野蛮生长”，当然这是褒义的，是我乐见的。但终究它不是持续的，更加不是有条理的。这在初期是一个接近最有效率的学习方式。如同一张白纸上，随意演绎。但时间长了，想要深入就不行了。这就是为什么我在后期越来越没有学习的快感，越来越少感到知识的获得。信息和文字的堆叠，因为不系统和不深入，反而成为信息累赘。我还不想直接定义他们为垃圾，他们只是缺乏整理。就好像偌大的房间，如果乱糟糟堆放家具和杂物，也会觉得拥挤。只要勤于打扫和收拾，反而很小的房间也能区分出很多的功能。</p>\n<p>这段时间，通过各种各样的项目的历练，我得到了很多方面知识和能力的训练，但他们分别带来的价值参差不齐。很实际的问题是，我们自己的定位和需要在哪里，如果自己没有方向，在每一块领域平均用力，那就毫无疑问地拉低了自己的天花板，无法打开自己的纵深。</p>\n<p>无论是深度学习也好，机器人也好，计算机视觉也好，运动规划也好，最重要的是，如何服务一个目标，去解决一个最终问题。而不是满足于解决一些联系并不紧密的小问题。当我们沾沾自喜于完成了一个一个“小目标”，却还是找不到自己的意义，却还是轻易被取代呢？</p>\n<p>我觉的我是时候思考如何编制一只大网，去捕捉一条大鱼。</p>\n<p>Udacity也在变，无可厚非，从一个教育平台，回归到商业本质，不可避免，平台的入口在变贵，知识的泡沫在增加。在我报名第二学期的时候，陡然发现，机器人工程师项目被精简成了一个一学期的项目，改成按月订购的学习方式。我不太认同内容的缩水，还是坚持报名了原版的第二学期。</p>\n<p>其实，对我也算恰逢其时，我也可以从这里毕业了。如果，每个学习的人都是在写自己的一本书，我要逐渐甩开它这根拐杖，自己去探索了。</p>\n<ul>\n<li>Project: Search and Sample Return</li>\n<li>Project: Robotic Arm: Pick &amp; Place</li>\n<li>Project: 3D Perception</li>\n<li>Project: Follow Me</li>\n<li>Project: Robotic Inference</li>\n<li>Project: Where Am I?</li>\n<li>Project: Map My World Robot</li>\n<li>Project: Deep RL Arm Manipulation</li>\n<li>Project: Home Service Robot</li>\n</ul>\n<p>这些项目从知识角度，其实和无人驾驶工程师有大量重叠，其中我比较抱有期待的SLAM项目和深度增强学习训练机械臂的项目，又太像填空，自己需要编程的部分很少，所以有一点点失望。</p>\n<p>当然“师傅领进门，修行看个人”。通过了解这项目的操作，也是很重要的一扇扇窗。如何开凿一个明亮的通道，在于自己是否有了一个精修且持续投入的方向。</p>\n<p>这些项目网罗了包括，</p>\n<ul>\n<li>运动控制</li>\n<li>图像处理</li>\n<li>计算机视觉</li>\n<li>定位与建图</li>\n<li>深度增强学习</li>\n<li>嵌入式</li>\n</ul>\n<p>我觉得下一步，我想能够利用我手头的Jetson Racecar去重新实践一些项目，尤其是SLAM的项目。我初步有一些想法，希望在视觉导航和运动规划算法上继续深入下去。</p>"},{"title":"代码赏析 | Stanley Path Tracking Controller","date":"2019-07-31T19:00:27.000Z","_content":"\n# Stanley Path Tracking Controller\n\n## 参考论文：\n- [Stanley: The robot that won the DARPA grand challenge](http://isl.ecst.csuchico.edu/DOCS/darpa2005/DARPA%202005%20Stanley.pdf)\n- [Autonomous Automobile Path Tracking](https://www.ri.cmu.edu/pub_files/2009/2/Automatic_Steering_Methods_for_Autonomous_Automobile_Path_Tracking.pdf)\n\n## 源代码：\n\nhttps://github.com/AtsushiSakai/PythonRobotics/blob/master/PathTracking/stanley_controller/stanley_controller.py\n\n<!--more-->\n\n### 节选代码1：\n\n```python\ndef pid_control(target, current):\n    \"\"\"\n    Proportional control for the speed.\n\n    :param target: (float)\n    :param current: (float)\n    :return: (float)\n    \"\"\"\n    return Kp * (target - current)\n```\n\nStanley Controller对速度的控制是简单的PID控制，在这段代码中，其实也就是P控制，因为只有比例增益P。\n\n### 节选代码2：\n\n```python\ndef stanley_control(state, cx, cy, cyaw, last_target_idx):\n    \"\"\"\n    Stanley steering control.\n\n    :param state: (State object)\n    :param cx: ([float])\n    :param cy: ([float])\n    :param cyaw: ([float])\n    :param last_target_idx: (int)\n    :return: (float, int)\n    \"\"\"\n    current_target_idx, error_front_axle = calc_target_index(state, cx, cy)\n\n    if last_target_idx >= current_target_idx:\n        current_target_idx = last_target_idx\n\n    # theta_e corrects the heading error\n    theta_e = normalize_angle(cyaw[current_target_idx] - state.yaw)\n    # theta_d corrects the cross track error\n    theta_d = np.arctan2(k * error_front_axle, state.v)\n    # Steering control\n    delta = theta_e + theta_d\n\n    return delta, current_target_idx\n```\n\n控制器相对复杂的部分是对方向角的控制，公式的运用主要体现在'stanley_control()'这段代码中。\n\n{% asset_img stanley-geometry.png Stanley Geometry %}\n\n{% asset_img stanley-equation.png Stanley Equation %}\n","source":"_posts/代码赏析_Stanley_Path_Tracking_Controller.md","raw":"---\ntitle: 代码赏析 | Stanley Path Tracking Controller\ndate: 2019-07-31 12:00:27\ntags:\n---\n\n# Stanley Path Tracking Controller\n\n## 参考论文：\n- [Stanley: The robot that won the DARPA grand challenge](http://isl.ecst.csuchico.edu/DOCS/darpa2005/DARPA%202005%20Stanley.pdf)\n- [Autonomous Automobile Path Tracking](https://www.ri.cmu.edu/pub_files/2009/2/Automatic_Steering_Methods_for_Autonomous_Automobile_Path_Tracking.pdf)\n\n## 源代码：\n\nhttps://github.com/AtsushiSakai/PythonRobotics/blob/master/PathTracking/stanley_controller/stanley_controller.py\n\n<!--more-->\n\n### 节选代码1：\n\n```python\ndef pid_control(target, current):\n    \"\"\"\n    Proportional control for the speed.\n\n    :param target: (float)\n    :param current: (float)\n    :return: (float)\n    \"\"\"\n    return Kp * (target - current)\n```\n\nStanley Controller对速度的控制是简单的PID控制，在这段代码中，其实也就是P控制，因为只有比例增益P。\n\n### 节选代码2：\n\n```python\ndef stanley_control(state, cx, cy, cyaw, last_target_idx):\n    \"\"\"\n    Stanley steering control.\n\n    :param state: (State object)\n    :param cx: ([float])\n    :param cy: ([float])\n    :param cyaw: ([float])\n    :param last_target_idx: (int)\n    :return: (float, int)\n    \"\"\"\n    current_target_idx, error_front_axle = calc_target_index(state, cx, cy)\n\n    if last_target_idx >= current_target_idx:\n        current_target_idx = last_target_idx\n\n    # theta_e corrects the heading error\n    theta_e = normalize_angle(cyaw[current_target_idx] - state.yaw)\n    # theta_d corrects the cross track error\n    theta_d = np.arctan2(k * error_front_axle, state.v)\n    # Steering control\n    delta = theta_e + theta_d\n\n    return delta, current_target_idx\n```\n\n控制器相对复杂的部分是对方向角的控制，公式的运用主要体现在'stanley_control()'这段代码中。\n\n{% asset_img stanley-geometry.png Stanley Geometry %}\n\n{% asset_img stanley-equation.png Stanley Equation %}\n","slug":"代码赏析_Stanley_Path_Tracking_Controller","published":1,"updated":"2019-08-01T17:07:28.921Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjysz5ng5000at3myqdj4kjtd","content":"<h1 id=\"Stanley-Path-Tracking-Controller\"><a href=\"#Stanley-Path-Tracking-Controller\" class=\"headerlink\" title=\"Stanley Path Tracking Controller\"></a>Stanley Path Tracking Controller</h1><h2 id=\"参考论文：\"><a href=\"#参考论文：\" class=\"headerlink\" title=\"参考论文：\"></a>参考论文：</h2><ul>\n<li><a href=\"http://isl.ecst.csuchico.edu/DOCS/darpa2005/DARPA%202005%20Stanley.pdf\" target=\"_blank\" rel=\"noopener\">Stanley: The robot that won the DARPA grand challenge</a></li>\n<li><a href=\"https://www.ri.cmu.edu/pub_files/2009/2/Automatic_Steering_Methods_for_Autonomous_Automobile_Path_Tracking.pdf\" target=\"_blank\" rel=\"noopener\">Autonomous Automobile Path Tracking</a></li>\n</ul>\n<h2 id=\"源代码：\"><a href=\"#源代码：\" class=\"headerlink\" title=\"源代码：\"></a>源代码：</h2><p><a href=\"https://github.com/AtsushiSakai/PythonRobotics/blob/master/PathTracking/stanley_controller/stanley_controller.py\" target=\"_blank\" rel=\"noopener\">https://github.com/AtsushiSakai/PythonRobotics/blob/master/PathTracking/stanley_controller/stanley_controller.py</a></p>\n<a id=\"more\"></a>\n<h3 id=\"节选代码1：\"><a href=\"#节选代码1：\" class=\"headerlink\" title=\"节选代码1：\"></a>节选代码1：</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">pid_control</span><span class=\"params\">(target, current)</span>:</span></span><br><span class=\"line\">    <span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">    Proportional control for the speed.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    :param target: (float)</span></span><br><span class=\"line\"><span class=\"string\">    :param current: (float)</span></span><br><span class=\"line\"><span class=\"string\">    :return: (float)</span></span><br><span class=\"line\"><span class=\"string\">    \"\"\"</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> Kp * (target - current)</span><br></pre></td></tr></table></figure>\n<p>Stanley Controller对速度的控制是简单的PID控制，在这段代码中，其实也就是P控制，因为只有比例增益P。</p>\n<h3 id=\"节选代码2：\"><a href=\"#节选代码2：\" class=\"headerlink\" title=\"节选代码2：\"></a>节选代码2：</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">stanley_control</span><span class=\"params\">(state, cx, cy, cyaw, last_target_idx)</span>:</span></span><br><span class=\"line\">    <span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">    Stanley steering control.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    :param state: (State object)</span></span><br><span class=\"line\"><span class=\"string\">    :param cx: ([float])</span></span><br><span class=\"line\"><span class=\"string\">    :param cy: ([float])</span></span><br><span class=\"line\"><span class=\"string\">    :param cyaw: ([float])</span></span><br><span class=\"line\"><span class=\"string\">    :param last_target_idx: (int)</span></span><br><span class=\"line\"><span class=\"string\">    :return: (float, int)</span></span><br><span class=\"line\"><span class=\"string\">    \"\"\"</span></span><br><span class=\"line\">    current_target_idx, error_front_axle = calc_target_index(state, cx, cy)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> last_target_idx &gt;= current_target_idx:</span><br><span class=\"line\">        current_target_idx = last_target_idx</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># theta_e corrects the heading error</span></span><br><span class=\"line\">    theta_e = normalize_angle(cyaw[current_target_idx] - state.yaw)</span><br><span class=\"line\">    <span class=\"comment\"># theta_d corrects the cross track error</span></span><br><span class=\"line\">    theta_d = np.arctan2(k * error_front_axle, state.v)</span><br><span class=\"line\">    <span class=\"comment\"># Steering control</span></span><br><span class=\"line\">    delta = theta_e + theta_d</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> delta, current_target_idx</span><br></pre></td></tr></table></figure>\n<p>控制器相对复杂的部分是对方向角的控制，公式的运用主要体现在’stanley_control()’这段代码中。</p>\n<img src=\"/2019/07/31/代码赏析_Stanley_Path_Tracking_Controller/stanley-geometry.png\" title=\"Stanley Geometry\">\n<img src=\"/2019/07/31/代码赏析_Stanley_Path_Tracking_Controller/stanley-equation.png\" title=\"Stanley Equation\">\n","site":{"data":{}},"excerpt":"<h1 id=\"Stanley-Path-Tracking-Controller\"><a href=\"#Stanley-Path-Tracking-Controller\" class=\"headerlink\" title=\"Stanley Path Tracking Controller\"></a>Stanley Path Tracking Controller</h1><h2 id=\"参考论文：\"><a href=\"#参考论文：\" class=\"headerlink\" title=\"参考论文：\"></a>参考论文：</h2><ul>\n<li><a href=\"http://isl.ecst.csuchico.edu/DOCS/darpa2005/DARPA%202005%20Stanley.pdf\" target=\"_blank\" rel=\"noopener\">Stanley: The robot that won the DARPA grand challenge</a></li>\n<li><a href=\"https://www.ri.cmu.edu/pub_files/2009/2/Automatic_Steering_Methods_for_Autonomous_Automobile_Path_Tracking.pdf\" target=\"_blank\" rel=\"noopener\">Autonomous Automobile Path Tracking</a></li>\n</ul>\n<h2 id=\"源代码：\"><a href=\"#源代码：\" class=\"headerlink\" title=\"源代码：\"></a>源代码：</h2><p><a href=\"https://github.com/AtsushiSakai/PythonRobotics/blob/master/PathTracking/stanley_controller/stanley_controller.py\" target=\"_blank\" rel=\"noopener\">https://github.com/AtsushiSakai/PythonRobotics/blob/master/PathTracking/stanley_controller/stanley_controller.py</a></p>","more":"<h3 id=\"节选代码1：\"><a href=\"#节选代码1：\" class=\"headerlink\" title=\"节选代码1：\"></a>节选代码1：</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">pid_control</span><span class=\"params\">(target, current)</span>:</span></span><br><span class=\"line\">    <span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">    Proportional control for the speed.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    :param target: (float)</span></span><br><span class=\"line\"><span class=\"string\">    :param current: (float)</span></span><br><span class=\"line\"><span class=\"string\">    :return: (float)</span></span><br><span class=\"line\"><span class=\"string\">    \"\"\"</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> Kp * (target - current)</span><br></pre></td></tr></table></figure>\n<p>Stanley Controller对速度的控制是简单的PID控制，在这段代码中，其实也就是P控制，因为只有比例增益P。</p>\n<h3 id=\"节选代码2：\"><a href=\"#节选代码2：\" class=\"headerlink\" title=\"节选代码2：\"></a>节选代码2：</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">stanley_control</span><span class=\"params\">(state, cx, cy, cyaw, last_target_idx)</span>:</span></span><br><span class=\"line\">    <span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">    Stanley steering control.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    :param state: (State object)</span></span><br><span class=\"line\"><span class=\"string\">    :param cx: ([float])</span></span><br><span class=\"line\"><span class=\"string\">    :param cy: ([float])</span></span><br><span class=\"line\"><span class=\"string\">    :param cyaw: ([float])</span></span><br><span class=\"line\"><span class=\"string\">    :param last_target_idx: (int)</span></span><br><span class=\"line\"><span class=\"string\">    :return: (float, int)</span></span><br><span class=\"line\"><span class=\"string\">    \"\"\"</span></span><br><span class=\"line\">    current_target_idx, error_front_axle = calc_target_index(state, cx, cy)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> last_target_idx &gt;= current_target_idx:</span><br><span class=\"line\">        current_target_idx = last_target_idx</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># theta_e corrects the heading error</span></span><br><span class=\"line\">    theta_e = normalize_angle(cyaw[current_target_idx] - state.yaw)</span><br><span class=\"line\">    <span class=\"comment\"># theta_d corrects the cross track error</span></span><br><span class=\"line\">    theta_d = np.arctan2(k * error_front_axle, state.v)</span><br><span class=\"line\">    <span class=\"comment\"># Steering control</span></span><br><span class=\"line\">    delta = theta_e + theta_d</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> delta, current_target_idx</span><br></pre></td></tr></table></figure>\n<p>控制器相对复杂的部分是对方向角的控制，公式的运用主要体现在’stanley_control()’这段代码中。</p>\n<img src=\"/2019/07/31/代码赏析_Stanley_Path_Tracking_Controller/stanley-geometry.png\" title=\"Stanley Geometry\">\n<img src=\"/2019/07/31/代码赏析_Stanley_Path_Tracking_Controller/stanley-equation.png\" title=\"Stanley Equation\">"},{"title":"粒子滤波器 - 姿态跟踪（Particle Filter -­ Pose Tracking）","date":"2019-04-11T19:00:27.000Z","_content":"\n<img src=\"https://paper-attachments.dropbox.com/s_B11EF229FFC176E08FB7E677870E42312ADC86B9923359B137487FF1777CDD72_1554936111933_image.png\" alt=\"venv\" style=\"height:500px;\" align=\"middle\">\n\n## 概述\n\n这次作业是要求用粒子滤波器（Particle Filter）的方法在2维平面跟踪姿态。\n\n想象一个机器人想要知道它自己的位置，并以此决定之后往哪里探索。下面这张图描绘了一个机器人定位的例子，用激光雷达测量投射到一张地图上。\n\n<!--more-->\n\n## 指导\n\n设计粒子滤波器模型\n\n\n1. 动力学模型（系统模型）\n\n\n  a. 为了随时间移动粒子，一个里程计更新的分布用来建立机器人的运动模型。粒子滤波器每次从这个分布中采样，再更新各个粒子的位置和方向。\n\n\n  b. 为了简化，编码器测量这里没有提供。不过，你可以使用一个期望为0但具有高协方差的分布。（或者，你可以使用卡尔曼滤波器（Kalman Filter）追踪位置和时间的变化，以此更新期望值）。\n\n\n  c. 现在考虑在粒子中的随机噪声，通过系统噪声协方差Sigma_m。最简单的形式是一个用4个变量表示的对角矩阵：Sigma_m = diag([sigma_x^2, sigma_y^2, sigma_theta^2])\n\n\n    i. 大体上，你不一定要限制于这个形式，但一个对角矩阵是一个很好的开始，如果你没有特别强的理由不这么做。\n\n    ii. 你应该随机地从这个多变量标准分布中采样，以此加入噪声。注意：使用对角矩阵，你可以对各维分别采样，用randn。\n\n    iii. [高级] 或者，你可以使用从卡尔曼滤波器得到的估计的机器人速度，当速度增加和减少来相应增大或减小噪声。\n\n\n2. 地图标记\n\n\n  a. 测量数据由一组各角度的激光雷达距离读取值提供，在机器人的本地坐标上。\n\n\n    i. 这个数据被画在 exmaple.m\n\n    ii. 在这个点，你应该测试方法，转换本地激光雷达数据到全局地图坐标下。\n\n\n![图2： 本地坐标系下的激光雷达数据，单位米。你需要将其转换为离散的地图晶格坐标，会在(b)中讨论。](https://paper-attachments.dropbox.com/s_B11EF229FFC176E08FB7E677870E42312ADC86B9923359B137487FF1777CDD72_1554939460449_image.png)\n\n  b. 可以进行对地图的扫描匹配，这里全局地图坐标系基于地图比例尺被离散化。举例来说，x = 1.5m, y = 2.2m 可以是 x = 15, y = 22 如果每米表示成10个晶格。\n\n\n    i.  考虑哟个激光扫描点的子集来节约计算时间。\n\n\n    ii. [高级]自由空间坐标可以也在此时考虑。使用提供的 bresenham 函数。这将为每个射线提供一组晶格，但可能变得计算繁重。参见第三周的 example_bresenham.m 获取更多细节。\n\n\n  c. 确定你的相关性打分函数。当激光雷达的自由空间测量和地图自由空间吻合，相关性分数会怎样提高？或者降低？你需要微调这些值。下面这个表格展示了可能的相关性更新的例子，其中的列显示了地图上晶格的状态，行显示了激光雷达读取的晶格状态。\n\n|                | Map Free | Map Occupied |\n| -------------- | -------- | ------------ |\n| LIDAR Free     | +1       | -5           |\n| LIDAR Occupied | -5       | +10          |\n\n\n\n3. 粒子重新给予权重\n\n\n  a. 现在，有了更新粒子和测量其与地图相关性的能力，你可以使用一组粒子来跟踪机器人的状态。一个粒子是一个位置和方向猜想的列向量(x, y, theta)，并被赋予一个权重。\n\n\n  b. 从10个粒子开始微调，看对于这个特别的定位作业的最佳数字，也许100个粒子是最好的。请小心，更多的粒子意味着更多的计算时间！\n\n\n  c. 对每一次激光雷达测量，你将计算每个粒子的相关性分数。在一开始，每个粒子是相等权重的，那么对于10个粒子，每个粒子将会有0.1的权重。新的权重将会是一个现有权重和相关性分数的乘积。请小心权重的比例，这些数字可能变得非常小！ 在每一轮重新标准化权重，确保权重总和等于1。\n\n\n  d. 计算粒子的有效数目，如4.3节所讨论的。重新采样粒子，如果这个数目太低。在重新采样后，你将会复制（权重和位姿）高权重的粒子，但噪声将会基于运动模型加入，所以没有复制的采样会留下，而且下一个地图相关性步会重新计算这些粒子的权重。\n\n\n## 执行\n\n\n1. 完成下面这个函数，其接收一组参数：传感器数据，已知地图，并返回机器人的姿态和方向。\n\n```matlab\n    function [ myPose ] = particleLocalization(ranges, scanAngles, map, param)\n```\n\n2. 参数变量包含地图精度（param.resol），其形式为每米的晶格数，地图尺寸（param.size），形式为地图的晶格数，和机器人的起始位置（param.origin），形式为机器人在地图上的起始的晶格坐标。\n\n\n3. 最终函数需要返回机器人的整个路径，是一个3xn的矩阵形式，其中n是激光雷达u观测的数目。在每n个观测中，你将追踪位置坐标x和y和方向角theta。\n\n\n4. example_test.m提供来帮助你图象化输出你的结果。\n\n\n## 解析\n\n\n1. 首先来理解提供的变量意义。\n\n在 example_test.m 一开始，先载入训练数据，\n\n```matlab\n    load practice.mat\n    % This will load four variables: ranges, scanAngles, t, pose\n    % [1] t is K-by-1 array containing time in second. (K=3701)\n    %     You may not need to use time info for implementation.\n    % [2] ranges is 1081-by-K lidar sensor readings.\n    %     e.g. ranges(:,k) is the lidar measurement at time index k.\n    % [3] scanAngles is 1081-by-1 array containing at what angles the 1081-by-1 lidar\n    %     values ranges(:,k) were measured. This holds for any time index k. The\n    %     angles are with respect to the body coordinate frame.\n    % [4] M is a 2D array containing the occupancy grid map of the location\n    %     e.g. map(x,y) is a log odds ratio of occupancy probability at (x,y)\n```\n\nt: 时间变量，Kx1维，其中K = 3701。\n\nranges: 1081xK的矩阵，表示激光雷达测量数据。那么1081显然是指各个方向的测距值。举例来说：ranges(:, k) 就是在时间k的激光雷达测量。\n\nscanAngles: 激光雷达的1081个测量角度，显然这是一个1081x1矩阵。测量角度随时间是不变的。并且这些角度是以本地坐标系为参考坐标系。\n\nM: 这是一个表示地图像素位置的二维矩阵。\n\n\n2. 参数选择\n\n```matlab\n    %% Set parameters\n    param = {};\n    % 1. Decide map resolution, i.e., the number of grids for 1 meter.\n    param.resol = 25;\n\n    % 3. Indicate where you will put the origin in pixels\n    param.origin = [685,572]';\n\n    param.init_pose = -init_pose;\n\n    %% Plot LIDAR data\n    lidar_local = [ranges(:,1).*cos(scanAngles) -ranges(:,1).*sin(scanAngles)];\n```\n\n这里继续采用默认值。\n\n\n3. 激光雷达数据示意图\n\n\n![图3： 激光雷达测量，在本地坐标系下](https://paper-attachments.dropbox.com/s_B11EF229FFC176E08FB7E677870E42312ADC86B9923359B137487FF1777CDD72_1554943538608_lida_measurement.png)\n\n4. particleLocalization()\n\n```matlab\n    N = size(ranges, 2);\n    myPose = zeros(3, N); % Output format is [x1 x2, ...; y1, y2, ...; z1, z2, ...]\n    % The initial pose is given\n    myPose(:,1) = param.init_pose;\n```\n\n机器人位姿初始化，N是时间轴的分布值。其中初始位置是不需要更新的，可以认为是真实值。\n\n```matlab\n    M = 1000;                      % Please decide a reasonable number of M,\n                                   % based on your experiment using the practice data.\n```\n\n粒子数选择，比如这里我选择了 M = 1000。可以考虑较小的值，以节约计算时间。\n\n```matlab\n    % Create M number of particles\n    P = repmat(myPose(:,1), [1, M]);\n    W = ones(1,M) * (1/M);\n```\n\n那么将粒子群围绕i机器人的位置初始化，将得到一个 3xM 的矩阵。相应的，每个粒子的初始权重是1/M。\n\n```matlab\n    ids = round(linspace(1, size(ranges, 1), 100));\n```\n\n从所有扫描射线角中平均地选取100个角度，以节约计算时间。\n\n```matlab\n    robotGrid = [myOrigin]; % for visualization\n\n    figure\n```\n\n初始化一个变量记录机器人在地图上的轨迹，用于图像化显示。\n\n```matlab\n    for j = 2:N % You will start estimating myPose from j=2 using ranges(:,2).\n        % 1) Propagate the particles\n        P(3, :) = P(3,:) + randn(1, M) * 0.08;\n        dist = 0.01 + randn(1, M) * 0.08;\n        P(1, :) = P(1, :) + dist .* cos(P(3, :));\n        P(2, :) = P(2, :) - dist .* sin(P(3, :));\n```\n\n对于每一个粒子，分别加入角度和距离的噪声。\n\n```matlab\n            % 2) Measurement Update\n            % 2-1) Find grid cells hit by the rays (in the grid map coordinate frame)\n            phi = P(3, m) + scanAngles(ids);\n\n            x_occ = ranges(ids, j) .* cos(phi) + P(1, m);\n            y_occ = -ranges(ids, j) .* sin(phi) + P(2, m);\n\n            i_x_occ = ceil(x_occ * myResolution) + myOrigin(1);\n            i_y_occ = ceil(y_occ * myResolution) + myOrigin(2);\n```\n\n对于每一个粒子，转换本地坐标系到全局坐标系，然后再到地图的像素坐标。\n\n```matlab\n            % 2-2) For each particle, calculate the correlation scores of the particles\n            N_occ = size(i_x_occ, 1);\n            corr = 0;\n            for k = 1:N_occ\n                if (i_x_occ(k) > size(map, 2)) || (i_x_occ(k) < 1)\n                    continue;\n                end\n                if (i_y_occ(k) > size(map, 1)) || (i_y_occ(k) < 1)\n                    continue;\n                end\n\n                if map(i_y_occ(k), i_x_occ(k)) < 0.4\n                    corr = corr - 5 * map(i_y_occ(k), i_x_occ(k)); % for testing.mat\n                    % corr = corr + map(i_y_occ(k), i_x_occ(k)) + 0.5; % for practice.mat\n                end\n                if map(i_y_occ(k), i_x_occ(k)) > 0.6\n                    corr = corr + 10 * map(i_y_occ(k), i_x_occ(k)); % for testing.mat\n                    % corr = corr + map(i_y_occ(k), i_x_occ(k)) + 0.5; % for practice.mat\n                end\n\n            end\n```\n\n这里遇到了一个陷阱，但不知是不是有意为之，你应该注意到了，在计算训练数据和测试数据时，我用了两种计算相关性分数的方法。被注释的方法，对训练数据有效，但无法通过测试数据。经过改进，现在采用的方法能够较好的匹配测量和地图数据。\n\n这是因为训练数据和测试数据有所不同，训练数据的地图数据是在-0.5 - 0.5之间，而测试数据是在0 - 1之间。\n\n```matlab\n            % 2-3) Update the particle weights\n            W(1,m) = W(1,m) * corr;\n```\n\n更新权重。\n\n```matlab\n        % 2-4) Choose the best particle to update the pose\n        W_norm = W / sum(W);\n        N_eff = floor(sum(W_norm)*sum(W_norm) / sum(W_norm .^ 2));\n        [W_sorted, sorted_index] = sort(W_norm, 'descend');\n        W_sample = W_sorted(1:N_eff);\n        P_sorted = P(:, sorted_index);\n        P_sample = P_sorted(:, 1:N_eff);\n        myPose(:, j) = mean(P(:, 1:10), 2);\n```\n\n用最好的粒子来更新机器人位姿。这里其实是采用的是最好的10个粒子的平均值。用如下公式计算有效数目。\n\n\n![图 3： 计算有效数目的公式](https://paper-attachments.dropbox.com/s_B11EF229FFC176E08FB7E677870E42312ADC86B9923359B137487FF1777CDD72_1555007982592_image.png)\n\n\n```matlab\n        % 3) Resample if the effective number of particles is smaller than a threshold\n        p_ids = randsample(N_eff, M, 'true', W_sample); % 80\n        W = W_sample(p_ids');\n        P = P_sample(:, p_ids');\n```\n\n如果有效粒子不足，需要进行重采样。\n\n```matlab\n        % 4) Visualize the pose on the map as needed\n        imagesc(map);\n        hold on;\n        axis equal;\n        set(gca,'YDir','reverse');\n\n        robot_grid = ceil([myPose(1,j); myPose(2,j)]*myResolution) + myOrigin;\n        robotGrid = [robotGrid, robot_grid]; % dynamically show the moving trajectory\n        plot(robotGrid(1,:),robotGrid(2,:),'r.-','LineWidth',2.5); % indicate start point\n\n        lidar_global(:,1) =  (ranges(:,j).*cos(scanAngles + myPose(3,j)) + myPose(1,j))*myResolution + myOrigin(1);\n        lidar_global(:,2) = (-ranges(:,j).*sin(scanAngles + myPose(3,j)) + myPose(2,j))*myResolution + myOrigin(2);\n        plot(lidar_global(:,1), lidar_global(:,2), 'g.');\n\n        hold off;\n        drawnow;\n```\n\n这一部分是将每一步机器人的轨迹记录下来，并显示于图上，记住这里仍要进行如之前所做的左边转化。因为本函数计算得到的机器人位置和方向是基于全局坐标，需要先转换为地图像素坐标。\n\n对任何问题，能够进行图像化显示，都将很有帮助。\n\n\nhttps://www.dropbox.com/s/oixd00ppwaj36ph/particle-filter-pose-tracking.mp4?dl=0\n\n\n\nhttps://www.youtube.com/watch?v=JKqo4VsC7RE&\n\n\n\n## 总结\n\n这次作业应该说考察了对粒子滤波器的深度理解，之前对重采样，只知道一个轮盘式的概率采样，这里最大的不同是重采样的方法不一样了。\n\n另一个比较难的地方是，如何进行测量和地图的扫描匹配，一开始的方法，只能通过训练数据，不能通过测试数据，后来也是看了论坛才找到通关的方法。还需要更进一步理解。\n\n\n## 参考\n","source":"_posts/Particle-Filter-on-Pose-Tracking.md","raw":"---\ntitle: 粒子滤波器 - 姿态跟踪（Particle Filter -­ Pose Tracking）\ndate: 2019-04-11 12:00:27\ntags:\n---\n\n<img src=\"https://paper-attachments.dropbox.com/s_B11EF229FFC176E08FB7E677870E42312ADC86B9923359B137487FF1777CDD72_1554936111933_image.png\" alt=\"venv\" style=\"height:500px;\" align=\"middle\">\n\n## 概述\n\n这次作业是要求用粒子滤波器（Particle Filter）的方法在2维平面跟踪姿态。\n\n想象一个机器人想要知道它自己的位置，并以此决定之后往哪里探索。下面这张图描绘了一个机器人定位的例子，用激光雷达测量投射到一张地图上。\n\n<!--more-->\n\n## 指导\n\n设计粒子滤波器模型\n\n\n1. 动力学模型（系统模型）\n\n\n  a. 为了随时间移动粒子，一个里程计更新的分布用来建立机器人的运动模型。粒子滤波器每次从这个分布中采样，再更新各个粒子的位置和方向。\n\n\n  b. 为了简化，编码器测量这里没有提供。不过，你可以使用一个期望为0但具有高协方差的分布。（或者，你可以使用卡尔曼滤波器（Kalman Filter）追踪位置和时间的变化，以此更新期望值）。\n\n\n  c. 现在考虑在粒子中的随机噪声，通过系统噪声协方差Sigma_m。最简单的形式是一个用4个变量表示的对角矩阵：Sigma_m = diag([sigma_x^2, sigma_y^2, sigma_theta^2])\n\n\n    i. 大体上，你不一定要限制于这个形式，但一个对角矩阵是一个很好的开始，如果你没有特别强的理由不这么做。\n\n    ii. 你应该随机地从这个多变量标准分布中采样，以此加入噪声。注意：使用对角矩阵，你可以对各维分别采样，用randn。\n\n    iii. [高级] 或者，你可以使用从卡尔曼滤波器得到的估计的机器人速度，当速度增加和减少来相应增大或减小噪声。\n\n\n2. 地图标记\n\n\n  a. 测量数据由一组各角度的激光雷达距离读取值提供，在机器人的本地坐标上。\n\n\n    i. 这个数据被画在 exmaple.m\n\n    ii. 在这个点，你应该测试方法，转换本地激光雷达数据到全局地图坐标下。\n\n\n![图2： 本地坐标系下的激光雷达数据，单位米。你需要将其转换为离散的地图晶格坐标，会在(b)中讨论。](https://paper-attachments.dropbox.com/s_B11EF229FFC176E08FB7E677870E42312ADC86B9923359B137487FF1777CDD72_1554939460449_image.png)\n\n  b. 可以进行对地图的扫描匹配，这里全局地图坐标系基于地图比例尺被离散化。举例来说，x = 1.5m, y = 2.2m 可以是 x = 15, y = 22 如果每米表示成10个晶格。\n\n\n    i.  考虑哟个激光扫描点的子集来节约计算时间。\n\n\n    ii. [高级]自由空间坐标可以也在此时考虑。使用提供的 bresenham 函数。这将为每个射线提供一组晶格，但可能变得计算繁重。参见第三周的 example_bresenham.m 获取更多细节。\n\n\n  c. 确定你的相关性打分函数。当激光雷达的自由空间测量和地图自由空间吻合，相关性分数会怎样提高？或者降低？你需要微调这些值。下面这个表格展示了可能的相关性更新的例子，其中的列显示了地图上晶格的状态，行显示了激光雷达读取的晶格状态。\n\n|                | Map Free | Map Occupied |\n| -------------- | -------- | ------------ |\n| LIDAR Free     | +1       | -5           |\n| LIDAR Occupied | -5       | +10          |\n\n\n\n3. 粒子重新给予权重\n\n\n  a. 现在，有了更新粒子和测量其与地图相关性的能力，你可以使用一组粒子来跟踪机器人的状态。一个粒子是一个位置和方向猜想的列向量(x, y, theta)，并被赋予一个权重。\n\n\n  b. 从10个粒子开始微调，看对于这个特别的定位作业的最佳数字，也许100个粒子是最好的。请小心，更多的粒子意味着更多的计算时间！\n\n\n  c. 对每一次激光雷达测量，你将计算每个粒子的相关性分数。在一开始，每个粒子是相等权重的，那么对于10个粒子，每个粒子将会有0.1的权重。新的权重将会是一个现有权重和相关性分数的乘积。请小心权重的比例，这些数字可能变得非常小！ 在每一轮重新标准化权重，确保权重总和等于1。\n\n\n  d. 计算粒子的有效数目，如4.3节所讨论的。重新采样粒子，如果这个数目太低。在重新采样后，你将会复制（权重和位姿）高权重的粒子，但噪声将会基于运动模型加入，所以没有复制的采样会留下，而且下一个地图相关性步会重新计算这些粒子的权重。\n\n\n## 执行\n\n\n1. 完成下面这个函数，其接收一组参数：传感器数据，已知地图，并返回机器人的姿态和方向。\n\n```matlab\n    function [ myPose ] = particleLocalization(ranges, scanAngles, map, param)\n```\n\n2. 参数变量包含地图精度（param.resol），其形式为每米的晶格数，地图尺寸（param.size），形式为地图的晶格数，和机器人的起始位置（param.origin），形式为机器人在地图上的起始的晶格坐标。\n\n\n3. 最终函数需要返回机器人的整个路径，是一个3xn的矩阵形式，其中n是激光雷达u观测的数目。在每n个观测中，你将追踪位置坐标x和y和方向角theta。\n\n\n4. example_test.m提供来帮助你图象化输出你的结果。\n\n\n## 解析\n\n\n1. 首先来理解提供的变量意义。\n\n在 example_test.m 一开始，先载入训练数据，\n\n```matlab\n    load practice.mat\n    % This will load four variables: ranges, scanAngles, t, pose\n    % [1] t is K-by-1 array containing time in second. (K=3701)\n    %     You may not need to use time info for implementation.\n    % [2] ranges is 1081-by-K lidar sensor readings.\n    %     e.g. ranges(:,k) is the lidar measurement at time index k.\n    % [3] scanAngles is 1081-by-1 array containing at what angles the 1081-by-1 lidar\n    %     values ranges(:,k) were measured. This holds for any time index k. The\n    %     angles are with respect to the body coordinate frame.\n    % [4] M is a 2D array containing the occupancy grid map of the location\n    %     e.g. map(x,y) is a log odds ratio of occupancy probability at (x,y)\n```\n\nt: 时间变量，Kx1维，其中K = 3701。\n\nranges: 1081xK的矩阵，表示激光雷达测量数据。那么1081显然是指各个方向的测距值。举例来说：ranges(:, k) 就是在时间k的激光雷达测量。\n\nscanAngles: 激光雷达的1081个测量角度，显然这是一个1081x1矩阵。测量角度随时间是不变的。并且这些角度是以本地坐标系为参考坐标系。\n\nM: 这是一个表示地图像素位置的二维矩阵。\n\n\n2. 参数选择\n\n```matlab\n    %% Set parameters\n    param = {};\n    % 1. Decide map resolution, i.e., the number of grids for 1 meter.\n    param.resol = 25;\n\n    % 3. Indicate where you will put the origin in pixels\n    param.origin = [685,572]';\n\n    param.init_pose = -init_pose;\n\n    %% Plot LIDAR data\n    lidar_local = [ranges(:,1).*cos(scanAngles) -ranges(:,1).*sin(scanAngles)];\n```\n\n这里继续采用默认值。\n\n\n3. 激光雷达数据示意图\n\n\n![图3： 激光雷达测量，在本地坐标系下](https://paper-attachments.dropbox.com/s_B11EF229FFC176E08FB7E677870E42312ADC86B9923359B137487FF1777CDD72_1554943538608_lida_measurement.png)\n\n4. particleLocalization()\n\n```matlab\n    N = size(ranges, 2);\n    myPose = zeros(3, N); % Output format is [x1 x2, ...; y1, y2, ...; z1, z2, ...]\n    % The initial pose is given\n    myPose(:,1) = param.init_pose;\n```\n\n机器人位姿初始化，N是时间轴的分布值。其中初始位置是不需要更新的，可以认为是真实值。\n\n```matlab\n    M = 1000;                      % Please decide a reasonable number of M,\n                                   % based on your experiment using the practice data.\n```\n\n粒子数选择，比如这里我选择了 M = 1000。可以考虑较小的值，以节约计算时间。\n\n```matlab\n    % Create M number of particles\n    P = repmat(myPose(:,1), [1, M]);\n    W = ones(1,M) * (1/M);\n```\n\n那么将粒子群围绕i机器人的位置初始化，将得到一个 3xM 的矩阵。相应的，每个粒子的初始权重是1/M。\n\n```matlab\n    ids = round(linspace(1, size(ranges, 1), 100));\n```\n\n从所有扫描射线角中平均地选取100个角度，以节约计算时间。\n\n```matlab\n    robotGrid = [myOrigin]; % for visualization\n\n    figure\n```\n\n初始化一个变量记录机器人在地图上的轨迹，用于图像化显示。\n\n```matlab\n    for j = 2:N % You will start estimating myPose from j=2 using ranges(:,2).\n        % 1) Propagate the particles\n        P(3, :) = P(3,:) + randn(1, M) * 0.08;\n        dist = 0.01 + randn(1, M) * 0.08;\n        P(1, :) = P(1, :) + dist .* cos(P(3, :));\n        P(2, :) = P(2, :) - dist .* sin(P(3, :));\n```\n\n对于每一个粒子，分别加入角度和距离的噪声。\n\n```matlab\n            % 2) Measurement Update\n            % 2-1) Find grid cells hit by the rays (in the grid map coordinate frame)\n            phi = P(3, m) + scanAngles(ids);\n\n            x_occ = ranges(ids, j) .* cos(phi) + P(1, m);\n            y_occ = -ranges(ids, j) .* sin(phi) + P(2, m);\n\n            i_x_occ = ceil(x_occ * myResolution) + myOrigin(1);\n            i_y_occ = ceil(y_occ * myResolution) + myOrigin(2);\n```\n\n对于每一个粒子，转换本地坐标系到全局坐标系，然后再到地图的像素坐标。\n\n```matlab\n            % 2-2) For each particle, calculate the correlation scores of the particles\n            N_occ = size(i_x_occ, 1);\n            corr = 0;\n            for k = 1:N_occ\n                if (i_x_occ(k) > size(map, 2)) || (i_x_occ(k) < 1)\n                    continue;\n                end\n                if (i_y_occ(k) > size(map, 1)) || (i_y_occ(k) < 1)\n                    continue;\n                end\n\n                if map(i_y_occ(k), i_x_occ(k)) < 0.4\n                    corr = corr - 5 * map(i_y_occ(k), i_x_occ(k)); % for testing.mat\n                    % corr = corr + map(i_y_occ(k), i_x_occ(k)) + 0.5; % for practice.mat\n                end\n                if map(i_y_occ(k), i_x_occ(k)) > 0.6\n                    corr = corr + 10 * map(i_y_occ(k), i_x_occ(k)); % for testing.mat\n                    % corr = corr + map(i_y_occ(k), i_x_occ(k)) + 0.5; % for practice.mat\n                end\n\n            end\n```\n\n这里遇到了一个陷阱，但不知是不是有意为之，你应该注意到了，在计算训练数据和测试数据时，我用了两种计算相关性分数的方法。被注释的方法，对训练数据有效，但无法通过测试数据。经过改进，现在采用的方法能够较好的匹配测量和地图数据。\n\n这是因为训练数据和测试数据有所不同，训练数据的地图数据是在-0.5 - 0.5之间，而测试数据是在0 - 1之间。\n\n```matlab\n            % 2-3) Update the particle weights\n            W(1,m) = W(1,m) * corr;\n```\n\n更新权重。\n\n```matlab\n        % 2-4) Choose the best particle to update the pose\n        W_norm = W / sum(W);\n        N_eff = floor(sum(W_norm)*sum(W_norm) / sum(W_norm .^ 2));\n        [W_sorted, sorted_index] = sort(W_norm, 'descend');\n        W_sample = W_sorted(1:N_eff);\n        P_sorted = P(:, sorted_index);\n        P_sample = P_sorted(:, 1:N_eff);\n        myPose(:, j) = mean(P(:, 1:10), 2);\n```\n\n用最好的粒子来更新机器人位姿。这里其实是采用的是最好的10个粒子的平均值。用如下公式计算有效数目。\n\n\n![图 3： 计算有效数目的公式](https://paper-attachments.dropbox.com/s_B11EF229FFC176E08FB7E677870E42312ADC86B9923359B137487FF1777CDD72_1555007982592_image.png)\n\n\n```matlab\n        % 3) Resample if the effective number of particles is smaller than a threshold\n        p_ids = randsample(N_eff, M, 'true', W_sample); % 80\n        W = W_sample(p_ids');\n        P = P_sample(:, p_ids');\n```\n\n如果有效粒子不足，需要进行重采样。\n\n```matlab\n        % 4) Visualize the pose on the map as needed\n        imagesc(map);\n        hold on;\n        axis equal;\n        set(gca,'YDir','reverse');\n\n        robot_grid = ceil([myPose(1,j); myPose(2,j)]*myResolution) + myOrigin;\n        robotGrid = [robotGrid, robot_grid]; % dynamically show the moving trajectory\n        plot(robotGrid(1,:),robotGrid(2,:),'r.-','LineWidth',2.5); % indicate start point\n\n        lidar_global(:,1) =  (ranges(:,j).*cos(scanAngles + myPose(3,j)) + myPose(1,j))*myResolution + myOrigin(1);\n        lidar_global(:,2) = (-ranges(:,j).*sin(scanAngles + myPose(3,j)) + myPose(2,j))*myResolution + myOrigin(2);\n        plot(lidar_global(:,1), lidar_global(:,2), 'g.');\n\n        hold off;\n        drawnow;\n```\n\n这一部分是将每一步机器人的轨迹记录下来，并显示于图上，记住这里仍要进行如之前所做的左边转化。因为本函数计算得到的机器人位置和方向是基于全局坐标，需要先转换为地图像素坐标。\n\n对任何问题，能够进行图像化显示，都将很有帮助。\n\n\nhttps://www.dropbox.com/s/oixd00ppwaj36ph/particle-filter-pose-tracking.mp4?dl=0\n\n\n\nhttps://www.youtube.com/watch?v=JKqo4VsC7RE&\n\n\n\n## 总结\n\n这次作业应该说考察了对粒子滤波器的深度理解，之前对重采样，只知道一个轮盘式的概率采样，这里最大的不同是重采样的方法不一样了。\n\n另一个比较难的地方是，如何进行测量和地图的扫描匹配，一开始的方法，只能通过训练数据，不能通过测试数据，后来也是看了论坛才找到通关的方法。还需要更进一步理解。\n\n\n## 参考\n","slug":"Particle-Filter-on-Pose-Tracking","published":1,"updated":"2019-06-20T17:57:48.189Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjysz5nl9000bt3my4gsadu7c","content":"<p><img src=\"https://paper-attachments.dropbox.com/s_B11EF229FFC176E08FB7E677870E42312ADC86B9923359B137487FF1777CDD72_1554936111933_image.png\" alt=\"venv\" style=\"height:500px;\" align=\"middle\"></p>\n<h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><p>这次作业是要求用粒子滤波器（Particle Filter）的方法在2维平面跟踪姿态。</p>\n<p>想象一个机器人想要知道它自己的位置，并以此决定之后往哪里探索。下面这张图描绘了一个机器人定位的例子，用激光雷达测量投射到一张地图上。</p>\n<a id=\"more\"></a>\n<h2 id=\"指导\"><a href=\"#指导\" class=\"headerlink\" title=\"指导\"></a>指导</h2><p>设计粒子滤波器模型</p>\n<ol>\n<li>动力学模型（系统模型）</li>\n</ol>\n<p>  a. 为了随时间移动粒子，一个里程计更新的分布用来建立机器人的运动模型。粒子滤波器每次从这个分布中采样，再更新各个粒子的位置和方向。</p>\n<p>  b. 为了简化，编码器测量这里没有提供。不过，你可以使用一个期望为0但具有高协方差的分布。（或者，你可以使用卡尔曼滤波器（Kalman Filter）追踪位置和时间的变化，以此更新期望值）。</p>\n<p>  c. 现在考虑在粒子中的随机噪声，通过系统噪声协方差Sigma_m。最简单的形式是一个用4个变量表示的对角矩阵：Sigma_m = diag([sigma_x^2, sigma_y^2, sigma_theta^2])</p>\n<pre><code>i. 大体上，你不一定要限制于这个形式，但一个对角矩阵是一个很好的开始，如果你没有特别强的理由不这么做。\n\nii. 你应该随机地从这个多变量标准分布中采样，以此加入噪声。注意：使用对角矩阵，你可以对各维分别采样，用randn。\n\niii. [高级] 或者，你可以使用从卡尔曼滤波器得到的估计的机器人速度，当速度增加和减少来相应增大或减小噪声。\n</code></pre><ol start=\"2\">\n<li>地图标记</li>\n</ol>\n<p>  a. 测量数据由一组各角度的激光雷达距离读取值提供，在机器人的本地坐标上。</p>\n<pre><code>i. 这个数据被画在 exmaple.m\n\nii. 在这个点，你应该测试方法，转换本地激光雷达数据到全局地图坐标下。\n</code></pre><p><img src=\"https://paper-attachments.dropbox.com/s_B11EF229FFC176E08FB7E677870E42312ADC86B9923359B137487FF1777CDD72_1554939460449_image.png\" alt=\"图2： 本地坐标系下的激光雷达数据，单位米。你需要将其转换为离散的地图晶格坐标，会在(b)中讨论。\"></p>\n<p>  b. 可以进行对地图的扫描匹配，这里全局地图坐标系基于地图比例尺被离散化。举例来说，x = 1.5m, y = 2.2m 可以是 x = 15, y = 22 如果每米表示成10个晶格。</p>\n<pre><code>i.  考虑哟个激光扫描点的子集来节约计算时间。\n\n\nii. [高级]自由空间坐标可以也在此时考虑。使用提供的 bresenham 函数。这将为每个射线提供一组晶格，但可能变得计算繁重。参见第三周的 example_bresenham.m 获取更多细节。\n</code></pre><p>  c. 确定你的相关性打分函数。当激光雷达的自由空间测量和地图自由空间吻合，相关性分数会怎样提高？或者降低？你需要微调这些值。下面这个表格展示了可能的相关性更新的例子，其中的列显示了地图上晶格的状态，行显示了激光雷达读取的晶格状态。</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Map Free</th>\n<th>Map Occupied</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>LIDAR Free</td>\n<td>+1</td>\n<td>-5</td>\n</tr>\n<tr>\n<td>LIDAR Occupied</td>\n<td>-5</td>\n<td>+10</td>\n</tr>\n</tbody>\n</table>\n<ol start=\"3\">\n<li>粒子重新给予权重</li>\n</ol>\n<p>  a. 现在，有了更新粒子和测量其与地图相关性的能力，你可以使用一组粒子来跟踪机器人的状态。一个粒子是一个位置和方向猜想的列向量(x, y, theta)，并被赋予一个权重。</p>\n<p>  b. 从10个粒子开始微调，看对于这个特别的定位作业的最佳数字，也许100个粒子是最好的。请小心，更多的粒子意味着更多的计算时间！</p>\n<p>  c. 对每一次激光雷达测量，你将计算每个粒子的相关性分数。在一开始，每个粒子是相等权重的，那么对于10个粒子，每个粒子将会有0.1的权重。新的权重将会是一个现有权重和相关性分数的乘积。请小心权重的比例，这些数字可能变得非常小！ 在每一轮重新标准化权重，确保权重总和等于1。</p>\n<p>  d. 计算粒子的有效数目，如4.3节所讨论的。重新采样粒子，如果这个数目太低。在重新采样后，你将会复制（权重和位姿）高权重的粒子，但噪声将会基于运动模型加入，所以没有复制的采样会留下，而且下一个地图相关性步会重新计算这些粒子的权重。</p>\n<h2 id=\"执行\"><a href=\"#执行\" class=\"headerlink\" title=\"执行\"></a>执行</h2><ol>\n<li>完成下面这个函数，其接收一组参数：传感器数据，已知地图，并返回机器人的姿态和方向。</li>\n</ol>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">[ myPose ]</span> = <span class=\"title\">particleLocalization</span><span class=\"params\">(ranges, scanAngles, map, param)</span></span></span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>参数变量包含地图精度（param.resol），其形式为每米的晶格数，地图尺寸（param.size），形式为地图的晶格数，和机器人的起始位置（param.origin），形式为机器人在地图上的起始的晶格坐标。</li>\n</ol>\n<ol start=\"3\">\n<li>最终函数需要返回机器人的整个路径，是一个3xn的矩阵形式，其中n是激光雷达u观测的数目。在每n个观测中，你将追踪位置坐标x和y和方向角theta。</li>\n</ol>\n<ol start=\"4\">\n<li>example_test.m提供来帮助你图象化输出你的结果。</li>\n</ol>\n<h2 id=\"解析\"><a href=\"#解析\" class=\"headerlink\" title=\"解析\"></a>解析</h2><ol>\n<li>首先来理解提供的变量意义。</li>\n</ol>\n<p>在 example_test.m 一开始，先载入训练数据，</p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">load practice.mat</span><br><span class=\"line\"><span class=\"comment\">% This will load four variables: ranges, scanAngles, t, pose</span></span><br><span class=\"line\"><span class=\"comment\">% [1] t is K-by-1 array containing time in second. (K=3701)</span></span><br><span class=\"line\"><span class=\"comment\">%     You may not need to use time info for implementation.</span></span><br><span class=\"line\"><span class=\"comment\">% [2] ranges is 1081-by-K lidar sensor readings.</span></span><br><span class=\"line\"><span class=\"comment\">%     e.g. ranges(:,k) is the lidar measurement at time index k.</span></span><br><span class=\"line\"><span class=\"comment\">% [3] scanAngles is 1081-by-1 array containing at what angles the 1081-by-1 lidar</span></span><br><span class=\"line\"><span class=\"comment\">%     values ranges(:,k) were measured. This holds for any time index k. The</span></span><br><span class=\"line\"><span class=\"comment\">%     angles are with respect to the body coordinate frame.</span></span><br><span class=\"line\"><span class=\"comment\">% [4] M is a 2D array containing the occupancy grid map of the location</span></span><br><span class=\"line\"><span class=\"comment\">%     e.g. map(x,y) is a log odds ratio of occupancy probability at (x,y)</span></span><br></pre></td></tr></table></figure>\n<p>t: 时间变量，Kx1维，其中K = 3701。</p>\n<p>ranges: 1081xK的矩阵，表示激光雷达测量数据。那么1081显然是指各个方向的测距值。举例来说：ranges(:, k) 就是在时间k的激光雷达测量。</p>\n<p>scanAngles: 激光雷达的1081个测量角度，显然这是一个1081x1矩阵。测量角度随时间是不变的。并且这些角度是以本地坐标系为参考坐标系。</p>\n<p>M: 这是一个表示地图像素位置的二维矩阵。</p>\n<ol start=\"2\">\n<li>参数选择</li>\n</ol>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">%% Set parameters</span></span><br><span class=\"line\">param = &#123;&#125;;</span><br><span class=\"line\"><span class=\"comment\">% 1. Decide map resolution, i.e., the number of grids for 1 meter.</span></span><br><span class=\"line\">param.resol = <span class=\"number\">25</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">% 3. Indicate where you will put the origin in pixels</span></span><br><span class=\"line\">param.origin = [<span class=\"number\">685</span>,<span class=\"number\">572</span>]';</span><br><span class=\"line\"></span><br><span class=\"line\">param.init_pose = -init_pose;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%% Plot LIDAR data</span></span><br><span class=\"line\">lidar_local = [ranges(:,<span class=\"number\">1</span>).*<span class=\"built_in\">cos</span>(scanAngles) -ranges(:,<span class=\"number\">1</span>).*<span class=\"built_in\">sin</span>(scanAngles)];</span><br></pre></td></tr></table></figure>\n<p>这里继续采用默认值。</p>\n<ol start=\"3\">\n<li>激光雷达数据示意图</li>\n</ol>\n<p><img src=\"https://paper-attachments.dropbox.com/s_B11EF229FFC176E08FB7E677870E42312ADC86B9923359B137487FF1777CDD72_1554943538608_lida_measurement.png\" alt=\"图3： 激光雷达测量，在本地坐标系下\"></p>\n<ol start=\"4\">\n<li>particleLocalization()</li>\n</ol>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">N = <span class=\"built_in\">size</span>(ranges, <span class=\"number\">2</span>);</span><br><span class=\"line\">myPose = <span class=\"built_in\">zeros</span>(<span class=\"number\">3</span>, N); <span class=\"comment\">% Output format is [x1 x2, ...; y1, y2, ...; z1, z2, ...]</span></span><br><span class=\"line\"><span class=\"comment\">% The initial pose is given</span></span><br><span class=\"line\">myPose(:,<span class=\"number\">1</span>) = param.init_pose;</span><br></pre></td></tr></table></figure>\n<p>机器人位姿初始化，N是时间轴的分布值。其中初始位置是不需要更新的，可以认为是真实值。</p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">M = <span class=\"number\">1000</span>;                      <span class=\"comment\">% Please decide a reasonable number of M,</span></span><br><span class=\"line\">                               <span class=\"comment\">% based on your experiment using the practice data.</span></span><br></pre></td></tr></table></figure>\n<p>粒子数选择，比如这里我选择了 M = 1000。可以考虑较小的值，以节约计算时间。</p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">% Create M number of particles</span></span><br><span class=\"line\">P = <span class=\"built_in\">repmat</span>(myPose(:,<span class=\"number\">1</span>), [<span class=\"number\">1</span>, M]);</span><br><span class=\"line\">W = <span class=\"built_in\">ones</span>(<span class=\"number\">1</span>,M) * (<span class=\"number\">1</span>/M);</span><br></pre></td></tr></table></figure>\n<p>那么将粒子群围绕i机器人的位置初始化，将得到一个 3xM 的矩阵。相应的，每个粒子的初始权重是1/M。</p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ids = <span class=\"built_in\">round</span>(<span class=\"built_in\">linspace</span>(<span class=\"number\">1</span>, <span class=\"built_in\">size</span>(ranges, <span class=\"number\">1</span>), <span class=\"number\">100</span>));</span><br></pre></td></tr></table></figure>\n<p>从所有扫描射线角中平均地选取100个角度，以节约计算时间。</p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">robotGrid = [myOrigin]; <span class=\"comment\">% for visualization</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">figure</span></span><br></pre></td></tr></table></figure>\n<p>初始化一个变量记录机器人在地图上的轨迹，用于图像化显示。</p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">j</span> = <span class=\"number\">2</span>:N <span class=\"comment\">% You will start estimating myPose from j=2 using ranges(:,2).</span></span><br><span class=\"line\">    <span class=\"comment\">% 1) Propagate the particles</span></span><br><span class=\"line\">    P(<span class=\"number\">3</span>, :) = P(<span class=\"number\">3</span>,:) + <span class=\"built_in\">randn</span>(<span class=\"number\">1</span>, M) * <span class=\"number\">0.08</span>;</span><br><span class=\"line\">    dist = <span class=\"number\">0.01</span> + <span class=\"built_in\">randn</span>(<span class=\"number\">1</span>, M) * <span class=\"number\">0.08</span>;</span><br><span class=\"line\">    P(<span class=\"number\">1</span>, :) = P(<span class=\"number\">1</span>, :) + dist .* <span class=\"built_in\">cos</span>(P(<span class=\"number\">3</span>, :));</span><br><span class=\"line\">    P(<span class=\"number\">2</span>, :) = P(<span class=\"number\">2</span>, :) - dist .* <span class=\"built_in\">sin</span>(P(<span class=\"number\">3</span>, :));</span><br></pre></td></tr></table></figure>\n<p>对于每一个粒子，分别加入角度和距离的噪声。</p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">% 2) Measurement Update</span></span><br><span class=\"line\"><span class=\"comment\">% 2-1) Find grid cells hit by the rays (in the grid map coordinate frame)</span></span><br><span class=\"line\">phi = P(<span class=\"number\">3</span>, m) + scanAngles(ids);</span><br><span class=\"line\"></span><br><span class=\"line\">x_occ = ranges(ids, <span class=\"built_in\">j</span>) .* <span class=\"built_in\">cos</span>(phi) + P(<span class=\"number\">1</span>, m);</span><br><span class=\"line\">y_occ = -ranges(ids, <span class=\"built_in\">j</span>) .* <span class=\"built_in\">sin</span>(phi) + P(<span class=\"number\">2</span>, m);</span><br><span class=\"line\"></span><br><span class=\"line\">i_x_occ = <span class=\"built_in\">ceil</span>(x_occ * myResolution) + myOrigin(<span class=\"number\">1</span>);</span><br><span class=\"line\">i_y_occ = <span class=\"built_in\">ceil</span>(y_occ * myResolution) + myOrigin(<span class=\"number\">2</span>);</span><br></pre></td></tr></table></figure>\n<p>对于每一个粒子，转换本地坐标系到全局坐标系，然后再到地图的像素坐标。</p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">% 2-2) For each particle, calculate the correlation scores of the particles</span></span><br><span class=\"line\">N_occ = <span class=\"built_in\">size</span>(i_x_occ, <span class=\"number\">1</span>);</span><br><span class=\"line\">corr = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">for</span> k = <span class=\"number\">1</span>:N_occ</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (i_x_occ(k) &gt; <span class=\"built_in\">size</span>(map, <span class=\"number\">2</span>)) || (i_x_occ(k) &lt; <span class=\"number\">1</span>)</span><br><span class=\"line\">        <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (i_y_occ(k) &gt; <span class=\"built_in\">size</span>(map, <span class=\"number\">1</span>)) || (i_y_occ(k) &lt; <span class=\"number\">1</span>)</span><br><span class=\"line\">        <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> map(i_y_occ(k), i_x_occ(k)) &lt; <span class=\"number\">0.4</span></span><br><span class=\"line\">        corr = corr - <span class=\"number\">5</span> * map(i_y_occ(k), i_x_occ(k)); <span class=\"comment\">% for testing.mat</span></span><br><span class=\"line\">        <span class=\"comment\">% corr = corr + map(i_y_occ(k), i_x_occ(k)) + 0.5; % for practice.mat</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> map(i_y_occ(k), i_x_occ(k)) &gt; <span class=\"number\">0.6</span></span><br><span class=\"line\">        corr = corr + <span class=\"number\">10</span> * map(i_y_occ(k), i_x_occ(k)); <span class=\"comment\">% for testing.mat</span></span><br><span class=\"line\">        <span class=\"comment\">% corr = corr + map(i_y_occ(k), i_x_occ(k)) + 0.5; % for practice.mat</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>这里遇到了一个陷阱，但不知是不是有意为之，你应该注意到了，在计算训练数据和测试数据时，我用了两种计算相关性分数的方法。被注释的方法，对训练数据有效，但无法通过测试数据。经过改进，现在采用的方法能够较好的匹配测量和地图数据。</p>\n<p>这是因为训练数据和测试数据有所不同，训练数据的地图数据是在-0.5 - 0.5之间，而测试数据是在0 - 1之间。</p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">% 2-3) Update the particle weights</span></span><br><span class=\"line\">W(<span class=\"number\">1</span>,m) = W(<span class=\"number\">1</span>,m) * corr;</span><br></pre></td></tr></table></figure>\n<p>更新权重。</p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">% 2-4) Choose the best particle to update the pose</span></span><br><span class=\"line\">W_norm = W / sum(W);</span><br><span class=\"line\">N_eff = <span class=\"built_in\">floor</span>(sum(W_norm)*sum(W_norm) / sum(W_norm .^ <span class=\"number\">2</span>));</span><br><span class=\"line\">[W_sorted, sorted_index] = <span class=\"built_in\">sort</span>(W_norm, <span class=\"string\">'descend'</span>);</span><br><span class=\"line\">W_sample = W_sorted(<span class=\"number\">1</span>:N_eff);</span><br><span class=\"line\">P_sorted = P(:, sorted_index);</span><br><span class=\"line\">P_sample = P_sorted(:, <span class=\"number\">1</span>:N_eff);</span><br><span class=\"line\">myPose(:, <span class=\"built_in\">j</span>) = <span class=\"built_in\">mean</span>(P(:, <span class=\"number\">1</span>:<span class=\"number\">10</span>), <span class=\"number\">2</span>);</span><br></pre></td></tr></table></figure>\n<p>用最好的粒子来更新机器人位姿。这里其实是采用的是最好的10个粒子的平均值。用如下公式计算有效数目。</p>\n<p><img src=\"https://paper-attachments.dropbox.com/s_B11EF229FFC176E08FB7E677870E42312ADC86B9923359B137487FF1777CDD72_1555007982592_image.png\" alt=\"图 3： 计算有效数目的公式\"></p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">% 3) Resample if the effective number of particles is smaller than a threshold</span></span><br><span class=\"line\">p_ids = randsample(N_eff, M, <span class=\"string\">'true'</span>, W_sample); <span class=\"comment\">% 80</span></span><br><span class=\"line\">W = W_sample(p_ids');</span><br><span class=\"line\">P = P_sample(:, p_ids');</span><br></pre></td></tr></table></figure>\n<p>如果有效粒子不足，需要进行重采样。</p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">% 4) Visualize the pose on the map as needed</span></span><br><span class=\"line\">imagesc(map);</span><br><span class=\"line\"><span class=\"built_in\">hold</span> on;</span><br><span class=\"line\">axis equal;</span><br><span class=\"line\">set(gca,<span class=\"string\">'YDir'</span>,<span class=\"string\">'reverse'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">robot_grid = <span class=\"built_in\">ceil</span>([myPose(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>); myPose(<span class=\"number\">2</span>,<span class=\"built_in\">j</span>)]*myResolution) + myOrigin;</span><br><span class=\"line\">robotGrid = [robotGrid, robot_grid]; <span class=\"comment\">% dynamically show the moving trajectory</span></span><br><span class=\"line\"><span class=\"built_in\">plot</span>(robotGrid(<span class=\"number\">1</span>,:),robotGrid(<span class=\"number\">2</span>,:),<span class=\"string\">'r.-'</span>,<span class=\"string\">'LineWidth'</span>,<span class=\"number\">2.5</span>); <span class=\"comment\">% indicate start point</span></span><br><span class=\"line\"></span><br><span class=\"line\">lidar_global(:,<span class=\"number\">1</span>) =  (ranges(:,<span class=\"built_in\">j</span>).*<span class=\"built_in\">cos</span>(scanAngles + myPose(<span class=\"number\">3</span>,<span class=\"built_in\">j</span>)) + myPose(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>))*myResolution + myOrigin(<span class=\"number\">1</span>);</span><br><span class=\"line\">lidar_global(:,<span class=\"number\">2</span>) = (-ranges(:,<span class=\"built_in\">j</span>).*<span class=\"built_in\">sin</span>(scanAngles + myPose(<span class=\"number\">3</span>,<span class=\"built_in\">j</span>)) + myPose(<span class=\"number\">2</span>,<span class=\"built_in\">j</span>))*myResolution + myOrigin(<span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"built_in\">plot</span>(lidar_global(:,<span class=\"number\">1</span>), lidar_global(:,<span class=\"number\">2</span>), <span class=\"string\">'g.'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">hold</span> off;</span><br><span class=\"line\">drawnow;</span><br></pre></td></tr></table></figure>\n<p>这一部分是将每一步机器人的轨迹记录下来，并显示于图上，记住这里仍要进行如之前所做的左边转化。因为本函数计算得到的机器人位置和方向是基于全局坐标，需要先转换为地图像素坐标。</p>\n<p>对任何问题，能够进行图像化显示，都将很有帮助。</p>\n<p><a href=\"https://www.dropbox.com/s/oixd00ppwaj36ph/particle-filter-pose-tracking.mp4?dl=0\" target=\"_blank\" rel=\"noopener\">https://www.dropbox.com/s/oixd00ppwaj36ph/particle-filter-pose-tracking.mp4?dl=0</a></p>\n<p><a href=\"https://www.youtube.com/watch?v=JKqo4VsC7RE&amp;\" target=\"_blank\" rel=\"noopener\">https://www.youtube.com/watch?v=JKqo4VsC7RE&amp;</a></p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>这次作业应该说考察了对粒子滤波器的深度理解，之前对重采样，只知道一个轮盘式的概率采样，这里最大的不同是重采样的方法不一样了。</p>\n<p>另一个比较难的地方是，如何进行测量和地图的扫描匹配，一开始的方法，只能通过训练数据，不能通过测试数据，后来也是看了论坛才找到通关的方法。还需要更进一步理解。</p>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2>","site":{"data":{}},"excerpt":"<p><img src=\"https://paper-attachments.dropbox.com/s_B11EF229FFC176E08FB7E677870E42312ADC86B9923359B137487FF1777CDD72_1554936111933_image.png\" alt=\"venv\" style=\"height:500px;\" align=\"middle\"></p>\n<h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><p>这次作业是要求用粒子滤波器（Particle Filter）的方法在2维平面跟踪姿态。</p>\n<p>想象一个机器人想要知道它自己的位置，并以此决定之后往哪里探索。下面这张图描绘了一个机器人定位的例子，用激光雷达测量投射到一张地图上。</p>","more":"<h2 id=\"指导\"><a href=\"#指导\" class=\"headerlink\" title=\"指导\"></a>指导</h2><p>设计粒子滤波器模型</p>\n<ol>\n<li>动力学模型（系统模型）</li>\n</ol>\n<p>  a. 为了随时间移动粒子，一个里程计更新的分布用来建立机器人的运动模型。粒子滤波器每次从这个分布中采样，再更新各个粒子的位置和方向。</p>\n<p>  b. 为了简化，编码器测量这里没有提供。不过，你可以使用一个期望为0但具有高协方差的分布。（或者，你可以使用卡尔曼滤波器（Kalman Filter）追踪位置和时间的变化，以此更新期望值）。</p>\n<p>  c. 现在考虑在粒子中的随机噪声，通过系统噪声协方差Sigma_m。最简单的形式是一个用4个变量表示的对角矩阵：Sigma_m = diag([sigma_x^2, sigma_y^2, sigma_theta^2])</p>\n<pre><code>i. 大体上，你不一定要限制于这个形式，但一个对角矩阵是一个很好的开始，如果你没有特别强的理由不这么做。\n\nii. 你应该随机地从这个多变量标准分布中采样，以此加入噪声。注意：使用对角矩阵，你可以对各维分别采样，用randn。\n\niii. [高级] 或者，你可以使用从卡尔曼滤波器得到的估计的机器人速度，当速度增加和减少来相应增大或减小噪声。\n</code></pre><ol start=\"2\">\n<li>地图标记</li>\n</ol>\n<p>  a. 测量数据由一组各角度的激光雷达距离读取值提供，在机器人的本地坐标上。</p>\n<pre><code>i. 这个数据被画在 exmaple.m\n\nii. 在这个点，你应该测试方法，转换本地激光雷达数据到全局地图坐标下。\n</code></pre><p><img src=\"https://paper-attachments.dropbox.com/s_B11EF229FFC176E08FB7E677870E42312ADC86B9923359B137487FF1777CDD72_1554939460449_image.png\" alt=\"图2： 本地坐标系下的激光雷达数据，单位米。你需要将其转换为离散的地图晶格坐标，会在(b)中讨论。\"></p>\n<p>  b. 可以进行对地图的扫描匹配，这里全局地图坐标系基于地图比例尺被离散化。举例来说，x = 1.5m, y = 2.2m 可以是 x = 15, y = 22 如果每米表示成10个晶格。</p>\n<pre><code>i.  考虑哟个激光扫描点的子集来节约计算时间。\n\n\nii. [高级]自由空间坐标可以也在此时考虑。使用提供的 bresenham 函数。这将为每个射线提供一组晶格，但可能变得计算繁重。参见第三周的 example_bresenham.m 获取更多细节。\n</code></pre><p>  c. 确定你的相关性打分函数。当激光雷达的自由空间测量和地图自由空间吻合，相关性分数会怎样提高？或者降低？你需要微调这些值。下面这个表格展示了可能的相关性更新的例子，其中的列显示了地图上晶格的状态，行显示了激光雷达读取的晶格状态。</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Map Free</th>\n<th>Map Occupied</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>LIDAR Free</td>\n<td>+1</td>\n<td>-5</td>\n</tr>\n<tr>\n<td>LIDAR Occupied</td>\n<td>-5</td>\n<td>+10</td>\n</tr>\n</tbody>\n</table>\n<ol start=\"3\">\n<li>粒子重新给予权重</li>\n</ol>\n<p>  a. 现在，有了更新粒子和测量其与地图相关性的能力，你可以使用一组粒子来跟踪机器人的状态。一个粒子是一个位置和方向猜想的列向量(x, y, theta)，并被赋予一个权重。</p>\n<p>  b. 从10个粒子开始微调，看对于这个特别的定位作业的最佳数字，也许100个粒子是最好的。请小心，更多的粒子意味着更多的计算时间！</p>\n<p>  c. 对每一次激光雷达测量，你将计算每个粒子的相关性分数。在一开始，每个粒子是相等权重的，那么对于10个粒子，每个粒子将会有0.1的权重。新的权重将会是一个现有权重和相关性分数的乘积。请小心权重的比例，这些数字可能变得非常小！ 在每一轮重新标准化权重，确保权重总和等于1。</p>\n<p>  d. 计算粒子的有效数目，如4.3节所讨论的。重新采样粒子，如果这个数目太低。在重新采样后，你将会复制（权重和位姿）高权重的粒子，但噪声将会基于运动模型加入，所以没有复制的采样会留下，而且下一个地图相关性步会重新计算这些粒子的权重。</p>\n<h2 id=\"执行\"><a href=\"#执行\" class=\"headerlink\" title=\"执行\"></a>执行</h2><ol>\n<li>完成下面这个函数，其接收一组参数：传感器数据，已知地图，并返回机器人的姿态和方向。</li>\n</ol>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">[ myPose ]</span> = <span class=\"title\">particleLocalization</span><span class=\"params\">(ranges, scanAngles, map, param)</span></span></span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>参数变量包含地图精度（param.resol），其形式为每米的晶格数，地图尺寸（param.size），形式为地图的晶格数，和机器人的起始位置（param.origin），形式为机器人在地图上的起始的晶格坐标。</li>\n</ol>\n<ol start=\"3\">\n<li>最终函数需要返回机器人的整个路径，是一个3xn的矩阵形式，其中n是激光雷达u观测的数目。在每n个观测中，你将追踪位置坐标x和y和方向角theta。</li>\n</ol>\n<ol start=\"4\">\n<li>example_test.m提供来帮助你图象化输出你的结果。</li>\n</ol>\n<h2 id=\"解析\"><a href=\"#解析\" class=\"headerlink\" title=\"解析\"></a>解析</h2><ol>\n<li>首先来理解提供的变量意义。</li>\n</ol>\n<p>在 example_test.m 一开始，先载入训练数据，</p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">load practice.mat</span><br><span class=\"line\"><span class=\"comment\">% This will load four variables: ranges, scanAngles, t, pose</span></span><br><span class=\"line\"><span class=\"comment\">% [1] t is K-by-1 array containing time in second. (K=3701)</span></span><br><span class=\"line\"><span class=\"comment\">%     You may not need to use time info for implementation.</span></span><br><span class=\"line\"><span class=\"comment\">% [2] ranges is 1081-by-K lidar sensor readings.</span></span><br><span class=\"line\"><span class=\"comment\">%     e.g. ranges(:,k) is the lidar measurement at time index k.</span></span><br><span class=\"line\"><span class=\"comment\">% [3] scanAngles is 1081-by-1 array containing at what angles the 1081-by-1 lidar</span></span><br><span class=\"line\"><span class=\"comment\">%     values ranges(:,k) were measured. This holds for any time index k. The</span></span><br><span class=\"line\"><span class=\"comment\">%     angles are with respect to the body coordinate frame.</span></span><br><span class=\"line\"><span class=\"comment\">% [4] M is a 2D array containing the occupancy grid map of the location</span></span><br><span class=\"line\"><span class=\"comment\">%     e.g. map(x,y) is a log odds ratio of occupancy probability at (x,y)</span></span><br></pre></td></tr></table></figure>\n<p>t: 时间变量，Kx1维，其中K = 3701。</p>\n<p>ranges: 1081xK的矩阵，表示激光雷达测量数据。那么1081显然是指各个方向的测距值。举例来说：ranges(:, k) 就是在时间k的激光雷达测量。</p>\n<p>scanAngles: 激光雷达的1081个测量角度，显然这是一个1081x1矩阵。测量角度随时间是不变的。并且这些角度是以本地坐标系为参考坐标系。</p>\n<p>M: 这是一个表示地图像素位置的二维矩阵。</p>\n<ol start=\"2\">\n<li>参数选择</li>\n</ol>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">%% Set parameters</span></span><br><span class=\"line\">param = &#123;&#125;;</span><br><span class=\"line\"><span class=\"comment\">% 1. Decide map resolution, i.e., the number of grids for 1 meter.</span></span><br><span class=\"line\">param.resol = <span class=\"number\">25</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">% 3. Indicate where you will put the origin in pixels</span></span><br><span class=\"line\">param.origin = [<span class=\"number\">685</span>,<span class=\"number\">572</span>]';</span><br><span class=\"line\"></span><br><span class=\"line\">param.init_pose = -init_pose;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">%% Plot LIDAR data</span></span><br><span class=\"line\">lidar_local = [ranges(:,<span class=\"number\">1</span>).*<span class=\"built_in\">cos</span>(scanAngles) -ranges(:,<span class=\"number\">1</span>).*<span class=\"built_in\">sin</span>(scanAngles)];</span><br></pre></td></tr></table></figure>\n<p>这里继续采用默认值。</p>\n<ol start=\"3\">\n<li>激光雷达数据示意图</li>\n</ol>\n<p><img src=\"https://paper-attachments.dropbox.com/s_B11EF229FFC176E08FB7E677870E42312ADC86B9923359B137487FF1777CDD72_1554943538608_lida_measurement.png\" alt=\"图3： 激光雷达测量，在本地坐标系下\"></p>\n<ol start=\"4\">\n<li>particleLocalization()</li>\n</ol>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">N = <span class=\"built_in\">size</span>(ranges, <span class=\"number\">2</span>);</span><br><span class=\"line\">myPose = <span class=\"built_in\">zeros</span>(<span class=\"number\">3</span>, N); <span class=\"comment\">% Output format is [x1 x2, ...; y1, y2, ...; z1, z2, ...]</span></span><br><span class=\"line\"><span class=\"comment\">% The initial pose is given</span></span><br><span class=\"line\">myPose(:,<span class=\"number\">1</span>) = param.init_pose;</span><br></pre></td></tr></table></figure>\n<p>机器人位姿初始化，N是时间轴的分布值。其中初始位置是不需要更新的，可以认为是真实值。</p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">M = <span class=\"number\">1000</span>;                      <span class=\"comment\">% Please decide a reasonable number of M,</span></span><br><span class=\"line\">                               <span class=\"comment\">% based on your experiment using the practice data.</span></span><br></pre></td></tr></table></figure>\n<p>粒子数选择，比如这里我选择了 M = 1000。可以考虑较小的值，以节约计算时间。</p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">% Create M number of particles</span></span><br><span class=\"line\">P = <span class=\"built_in\">repmat</span>(myPose(:,<span class=\"number\">1</span>), [<span class=\"number\">1</span>, M]);</span><br><span class=\"line\">W = <span class=\"built_in\">ones</span>(<span class=\"number\">1</span>,M) * (<span class=\"number\">1</span>/M);</span><br></pre></td></tr></table></figure>\n<p>那么将粒子群围绕i机器人的位置初始化，将得到一个 3xM 的矩阵。相应的，每个粒子的初始权重是1/M。</p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ids = <span class=\"built_in\">round</span>(<span class=\"built_in\">linspace</span>(<span class=\"number\">1</span>, <span class=\"built_in\">size</span>(ranges, <span class=\"number\">1</span>), <span class=\"number\">100</span>));</span><br></pre></td></tr></table></figure>\n<p>从所有扫描射线角中平均地选取100个角度，以节约计算时间。</p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">robotGrid = [myOrigin]; <span class=\"comment\">% for visualization</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">figure</span></span><br></pre></td></tr></table></figure>\n<p>初始化一个变量记录机器人在地图上的轨迹，用于图像化显示。</p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">j</span> = <span class=\"number\">2</span>:N <span class=\"comment\">% You will start estimating myPose from j=2 using ranges(:,2).</span></span><br><span class=\"line\">    <span class=\"comment\">% 1) Propagate the particles</span></span><br><span class=\"line\">    P(<span class=\"number\">3</span>, :) = P(<span class=\"number\">3</span>,:) + <span class=\"built_in\">randn</span>(<span class=\"number\">1</span>, M) * <span class=\"number\">0.08</span>;</span><br><span class=\"line\">    dist = <span class=\"number\">0.01</span> + <span class=\"built_in\">randn</span>(<span class=\"number\">1</span>, M) * <span class=\"number\">0.08</span>;</span><br><span class=\"line\">    P(<span class=\"number\">1</span>, :) = P(<span class=\"number\">1</span>, :) + dist .* <span class=\"built_in\">cos</span>(P(<span class=\"number\">3</span>, :));</span><br><span class=\"line\">    P(<span class=\"number\">2</span>, :) = P(<span class=\"number\">2</span>, :) - dist .* <span class=\"built_in\">sin</span>(P(<span class=\"number\">3</span>, :));</span><br></pre></td></tr></table></figure>\n<p>对于每一个粒子，分别加入角度和距离的噪声。</p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">% 2) Measurement Update</span></span><br><span class=\"line\"><span class=\"comment\">% 2-1) Find grid cells hit by the rays (in the grid map coordinate frame)</span></span><br><span class=\"line\">phi = P(<span class=\"number\">3</span>, m) + scanAngles(ids);</span><br><span class=\"line\"></span><br><span class=\"line\">x_occ = ranges(ids, <span class=\"built_in\">j</span>) .* <span class=\"built_in\">cos</span>(phi) + P(<span class=\"number\">1</span>, m);</span><br><span class=\"line\">y_occ = -ranges(ids, <span class=\"built_in\">j</span>) .* <span class=\"built_in\">sin</span>(phi) + P(<span class=\"number\">2</span>, m);</span><br><span class=\"line\"></span><br><span class=\"line\">i_x_occ = <span class=\"built_in\">ceil</span>(x_occ * myResolution) + myOrigin(<span class=\"number\">1</span>);</span><br><span class=\"line\">i_y_occ = <span class=\"built_in\">ceil</span>(y_occ * myResolution) + myOrigin(<span class=\"number\">2</span>);</span><br></pre></td></tr></table></figure>\n<p>对于每一个粒子，转换本地坐标系到全局坐标系，然后再到地图的像素坐标。</p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">% 2-2) For each particle, calculate the correlation scores of the particles</span></span><br><span class=\"line\">N_occ = <span class=\"built_in\">size</span>(i_x_occ, <span class=\"number\">1</span>);</span><br><span class=\"line\">corr = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">for</span> k = <span class=\"number\">1</span>:N_occ</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (i_x_occ(k) &gt; <span class=\"built_in\">size</span>(map, <span class=\"number\">2</span>)) || (i_x_occ(k) &lt; <span class=\"number\">1</span>)</span><br><span class=\"line\">        <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (i_y_occ(k) &gt; <span class=\"built_in\">size</span>(map, <span class=\"number\">1</span>)) || (i_y_occ(k) &lt; <span class=\"number\">1</span>)</span><br><span class=\"line\">        <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> map(i_y_occ(k), i_x_occ(k)) &lt; <span class=\"number\">0.4</span></span><br><span class=\"line\">        corr = corr - <span class=\"number\">5</span> * map(i_y_occ(k), i_x_occ(k)); <span class=\"comment\">% for testing.mat</span></span><br><span class=\"line\">        <span class=\"comment\">% corr = corr + map(i_y_occ(k), i_x_occ(k)) + 0.5; % for practice.mat</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> map(i_y_occ(k), i_x_occ(k)) &gt; <span class=\"number\">0.6</span></span><br><span class=\"line\">        corr = corr + <span class=\"number\">10</span> * map(i_y_occ(k), i_x_occ(k)); <span class=\"comment\">% for testing.mat</span></span><br><span class=\"line\">        <span class=\"comment\">% corr = corr + map(i_y_occ(k), i_x_occ(k)) + 0.5; % for practice.mat</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>这里遇到了一个陷阱，但不知是不是有意为之，你应该注意到了，在计算训练数据和测试数据时，我用了两种计算相关性分数的方法。被注释的方法，对训练数据有效，但无法通过测试数据。经过改进，现在采用的方法能够较好的匹配测量和地图数据。</p>\n<p>这是因为训练数据和测试数据有所不同，训练数据的地图数据是在-0.5 - 0.5之间，而测试数据是在0 - 1之间。</p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">% 2-3) Update the particle weights</span></span><br><span class=\"line\">W(<span class=\"number\">1</span>,m) = W(<span class=\"number\">1</span>,m) * corr;</span><br></pre></td></tr></table></figure>\n<p>更新权重。</p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">% 2-4) Choose the best particle to update the pose</span></span><br><span class=\"line\">W_norm = W / sum(W);</span><br><span class=\"line\">N_eff = <span class=\"built_in\">floor</span>(sum(W_norm)*sum(W_norm) / sum(W_norm .^ <span class=\"number\">2</span>));</span><br><span class=\"line\">[W_sorted, sorted_index] = <span class=\"built_in\">sort</span>(W_norm, <span class=\"string\">'descend'</span>);</span><br><span class=\"line\">W_sample = W_sorted(<span class=\"number\">1</span>:N_eff);</span><br><span class=\"line\">P_sorted = P(:, sorted_index);</span><br><span class=\"line\">P_sample = P_sorted(:, <span class=\"number\">1</span>:N_eff);</span><br><span class=\"line\">myPose(:, <span class=\"built_in\">j</span>) = <span class=\"built_in\">mean</span>(P(:, <span class=\"number\">1</span>:<span class=\"number\">10</span>), <span class=\"number\">2</span>);</span><br></pre></td></tr></table></figure>\n<p>用最好的粒子来更新机器人位姿。这里其实是采用的是最好的10个粒子的平均值。用如下公式计算有效数目。</p>\n<p><img src=\"https://paper-attachments.dropbox.com/s_B11EF229FFC176E08FB7E677870E42312ADC86B9923359B137487FF1777CDD72_1555007982592_image.png\" alt=\"图 3： 计算有效数目的公式\"></p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">% 3) Resample if the effective number of particles is smaller than a threshold</span></span><br><span class=\"line\">p_ids = randsample(N_eff, M, <span class=\"string\">'true'</span>, W_sample); <span class=\"comment\">% 80</span></span><br><span class=\"line\">W = W_sample(p_ids');</span><br><span class=\"line\">P = P_sample(:, p_ids');</span><br></pre></td></tr></table></figure>\n<p>如果有效粒子不足，需要进行重采样。</p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">% 4) Visualize the pose on the map as needed</span></span><br><span class=\"line\">imagesc(map);</span><br><span class=\"line\"><span class=\"built_in\">hold</span> on;</span><br><span class=\"line\">axis equal;</span><br><span class=\"line\">set(gca,<span class=\"string\">'YDir'</span>,<span class=\"string\">'reverse'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">robot_grid = <span class=\"built_in\">ceil</span>([myPose(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>); myPose(<span class=\"number\">2</span>,<span class=\"built_in\">j</span>)]*myResolution) + myOrigin;</span><br><span class=\"line\">robotGrid = [robotGrid, robot_grid]; <span class=\"comment\">% dynamically show the moving trajectory</span></span><br><span class=\"line\"><span class=\"built_in\">plot</span>(robotGrid(<span class=\"number\">1</span>,:),robotGrid(<span class=\"number\">2</span>,:),<span class=\"string\">'r.-'</span>,<span class=\"string\">'LineWidth'</span>,<span class=\"number\">2.5</span>); <span class=\"comment\">% indicate start point</span></span><br><span class=\"line\"></span><br><span class=\"line\">lidar_global(:,<span class=\"number\">1</span>) =  (ranges(:,<span class=\"built_in\">j</span>).*<span class=\"built_in\">cos</span>(scanAngles + myPose(<span class=\"number\">3</span>,<span class=\"built_in\">j</span>)) + myPose(<span class=\"number\">1</span>,<span class=\"built_in\">j</span>))*myResolution + myOrigin(<span class=\"number\">1</span>);</span><br><span class=\"line\">lidar_global(:,<span class=\"number\">2</span>) = (-ranges(:,<span class=\"built_in\">j</span>).*<span class=\"built_in\">sin</span>(scanAngles + myPose(<span class=\"number\">3</span>,<span class=\"built_in\">j</span>)) + myPose(<span class=\"number\">2</span>,<span class=\"built_in\">j</span>))*myResolution + myOrigin(<span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"built_in\">plot</span>(lidar_global(:,<span class=\"number\">1</span>), lidar_global(:,<span class=\"number\">2</span>), <span class=\"string\">'g.'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">hold</span> off;</span><br><span class=\"line\">drawnow;</span><br></pre></td></tr></table></figure>\n<p>这一部分是将每一步机器人的轨迹记录下来，并显示于图上，记住这里仍要进行如之前所做的左边转化。因为本函数计算得到的机器人位置和方向是基于全局坐标，需要先转换为地图像素坐标。</p>\n<p>对任何问题，能够进行图像化显示，都将很有帮助。</p>\n<p><a href=\"https://www.dropbox.com/s/oixd00ppwaj36ph/particle-filter-pose-tracking.mp4?dl=0\" target=\"_blank\" rel=\"noopener\">https://www.dropbox.com/s/oixd00ppwaj36ph/particle-filter-pose-tracking.mp4?dl=0</a></p>\n<p><a href=\"https://www.youtube.com/watch?v=JKqo4VsC7RE&amp;\" target=\"_blank\" rel=\"noopener\">https://www.youtube.com/watch?v=JKqo4VsC7RE&amp;</a></p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>这次作业应该说考察了对粒子滤波器的深度理解，之前对重采样，只知道一个轮盘式的概率采样，这里最大的不同是重采样的方法不一样了。</p>\n<p>另一个比较难的地方是，如何进行测量和地图的扫描匹配，一开始的方法，只能通过训练数据，不能通过测试数据，后来也是看了论坛才找到通关的方法。还需要更进一步理解。</p>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2>"},{"title":"RoverPi小车 第二篇：硬件选型和组装","date":"2019-05-14T19:00:27.000Z","_content":"\n<img src=\"https://www.dropbox.com/s/k6q54nuwmnef8q2/IMG_20190512_204935.jpg?raw=1\" alt=\"venv\" style=\"height:300px;\" align=\"middle\">\n\n这一篇主要解决几个问题：\n\n１．计算单元\n２．运动单元驱动\n３．供电\n４．机械固定\n\n也就是说，除了小车车身，Lidar和Web Camera全部是来自新的组件．其实，仅就这几样而言也说不上很满意，只是为了尽可能得把现有组件利用起来．\n\n<!--more-->\n\n- 车身就是普通的铝合金底盘和四个轮子，在某宝或者亚马逊逊上可以找到很多替代；\n- Lidar看起来是个仿品，山寨的一代RPLidar，建议大家直接使用原版，毕竟有充分的官方软件支持。我后面会介绍到的SLAM程序也是参考自RPLidar ；\n- Ｗeb Camera也可以用Raspberry Pi Camera替代.\n\n\n题外话，原本的众筹项目简直就是诈骗项目在 Kickstarter 上被当成诈骗项目了。骗钱是实打实了，可以长达7个月没有更新。\n\n## 概述\n\n下表是我所使用的机械和硬件单元：\n\n| 组件                                                                                   | 价格      | 来源                                                                                                                                                                                                                                                                                                                                                               |\n| ------------------------------------------------------------------------------------ | ------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| 四轮小车底盘，包含２个直流电机带编码器，２个履带，４个车轮                                                        | $20（估计） | 既有<br>可替换为：任意机器人小车底盘，大多不超过$20．给一个例子：https://www.amazon.com/Rubber-Aluminum-Chassis-Graduation-Project/dp/B07B8Z7J8J/ref=sr_1_18?crid=338XA4RRM8NAW&keywords=robot+car+chassis&qid=1557703804&s=gateway&sprefix=robot+car+c%2Caps%2C198&sr=8-18                                                                                                                   |\n| 2D Lidar                                                                             | $99（估计） | 既有，不知名<br>可替换为：[**RPLiDAR A1M8 360 Degree Laser Scanner Kit - 12M Range**](https://www.amazon.com/RPLiDAR-A1M8-Degree-Laser-Scanner/dp/B07H7X3SFF/ref=sr_1_3?keywords=rplidar&qid=1557703713&s=gateway&sr=8-3)**,** [$99.00](https://www.amazon.com/RPLiDAR-A1M8-Degree-Laser-Scanner/dp/B07H7X3SFF/ref=sr_1_3?keywords=rplidar&qid=1557703713&s=gateway&sr=8-3) |\n| Web Camera                                                                           | $14（估计） | 既有，不知名<br>可替换为：Raspberry Pi Camera                                                                                                                                                                                                                                                                                                                               |\n| 树莓派３B+                                                                               | $38.10  | https://www.amazon.com/gp/product/B07BDR5PDW/ref=ppx_yo_dt_b_asin_title_o04_s00?ie=UTF8&psc=1                                                                                                                                                                                                                                                                    |\n| SanDisk Extreme 32GB microSDHC UHS-I Card with Adapter                               | $14.49  | https://www.amazon.com/gp/product/B01HU3Q6F2/ref=ppx_yo_dt_b_asin_title_o02_s00?ie=UTF8&psc=1                                                                                                                                                                                                                                                                    |\n| L298N电机驱动板                                                                           | $6.99   | https://www.amazon.com/gp/product/B014KMHSW6/ref=ppx_yo_dt_b_asin_title_o00_s00?ie=UTF8&psc=1                                                                                                                                                                                                                                                                    |\n| 电池盒                                                                                  | $4.99   | https://www.amazon.com/gp/product/B07DBM11LF/ref=ppx_yo_dt_b_asin_title_o01_s00?ie=UTF8&psc=1                                                                                                                                                                                                                                                                    |\n| 树莓派供电模块Li电池                                                                          | $17.89  | https://www.amazon.com/gp/product/B06W9FWDSP/ref=ppx_yo_dt_b_asin_title_o04_s00?ie=UTF8&psc=1                                                                                                                                                                                                                                                                    |\n| eBoot 180 Pieces Male Female Hex Brass Spacer Standoff Screw Nut Assortment Kit (M3) | $10.99  | https://www.amazon.com/gp/product/B0756CW6Y2/ref=ppx_yo_dt_b_asin_title_o07_s00?ie=UTF8&psc=1                                                                                                                                                                                                                                                                    |\n| 树莓派扩展板                                                                               | $6.19   | https://www.amazon.com/gp/product/B074T7D1V5/ref=ppx_yo_dt_b_asin_title_o07_s00?ie=UTF8&psc=1                                                                                                                                                                                                                                                                    |\n| JST PH 2.0MM连接线                                                                      | $7.69   | https://www.amazon.com/gp/product/B07FBDZHNX/ref=ppx_yo_dt_b_asin_title_o00_s00?ie=UTF8&psc=1                                                                                                                                                                                                                                                                    |\n| 电路连接跳线                                                                               | $6.78   | https://www.amazon.com/gp/product/B01LZF1ZSZ/ref=ppx_yo_dt_b_asin_title_o08_s00?ie=UTF8&psc=1                                                                                                                                                                                                                                                                    |\n\n\n\n## 计算单元\n\n其实这一部分没有什么悬念，小车底盘的尺寸以及功能，用Raspberry Pi非常适合，这里选用最新的版本，Raspberry Pi 3 B+．如果还会做下一代的话，我想我会有兴趣尝试Nvidia Jetson Nano，并且尝试AI级别的运算．\n\n\n![Raspberry Pi 3](https://www.raspberrypi.org/magpi/wp-content/uploads/2017/04/Raspberry-Pi-3.jpg)\n\n\n\n## L298N电机驱动板\n\n\n![L298N 电机驱动板](http://fritzing.org/media/fritzing-repo/projects/w/working-with-l298n-dc-motor-driver/images/Dual-H-Bridge-DC-Stepper-Motor-Drive-Controller-Board-Module-Arduino-L298N-HE2.jpg)\n\n\nL298N驱动板算是一个比较常规的用于驱动两路直流电机的板子，与树莓派的配合使用也很常见．网上用很多教程，这里参考了这一篇博文：\n\n\nhttps://www.electronicshub.org/raspberry-pi-l298n-interface-tutorial-control-dc-motor-l298n-raspberry-pi/\n\n\n\n## 供电方案\n\n自己设计的项目，坑很多，很多问题是一边想一边解决一边又遇到新的问题．\n\nL298N本身需要6-12V的供电，我一开始就想到用一个装４个５号电池的电池盒为其供电．那么，从L298N还可以引出5V的电压，似乎正好可以解决树莓派的供电．但实验发现不可行，电机的供电是可以满足，但无法同时驱动树莓派甚至Lidar.\n\n所以，特意搜寻了可以给树莓派供电又容易叠加安装固定的电池，最后选择了这款带扩展板的Li电池，令人满意．\n\n\n![](https://paper-attachments.dropbox.com/s_F2F5BA21703E8CFE0F69C6C645220F346DE5C1561E56AE695BBFC0012CFC9BA8_1557718528861_718PGO1TDgL._SL1500_.jpg)\n\n\n\n## 机械固定\n\n原本CrazyPi的设计中，负责固定电路板的金属柱加入了磁性，为的是方便随时安装和拆卸，但对我现在的搭配，这个磁吸设计就是败笔．单单电池盒的重量，就使得磁力无法负荷基本的稳定要求，还经常连同连接的线一起车下来，非常恼人．\n\n既然原来的CrazyPi电路板已经被我放弃，我就把它放到车身下面，用于固定金属柱．L298N也同样固定在车身下方，便于连接电机．\n\n\n![](https://www.dropbox.com/s/k6q54nuwmnef8q2/IMG_20190512_204935.jpg?raw=1)\n\n\n最后小车完成图如下：\n\n![](https://paper-attachments.dropbox.com/s_F2F5BA21703E8CFE0F69C6C645220F346DE5C1561E56AE695BBFC0012CFC9BA8_1557718939652_IMG_1659.JPG)\n\n\n\n## 后记\n\n上图的设计应当说还是有一些待改进的地方甚至缺陷，有些坑还没有踩透。\n\n\n- RoverPi小车电机驱动的测试一开始只做了悬空的测试，基本的向前向后和转向远动是听从指令的。一旦放到地面上，转向是死活也转不动。一方面是来自于车体重量大幅加重了，尤其是干电池组。另一方面，L298N是一个比较老的电机驱动板了，看起来需要更高电压和更大电池容量的组合。不同于两轮的差分运动(Differential Steer)，四轮的差分运动（英文叫Skid Steer）需要克服更大的滑动阻力。\n- 另一个设计上的缺陷是，树莓派和电池组的叠加，完全挡住了2D Lidar的部分扫描范围。这个Lidar我没有官方的参数表，如果是比照RPLidar A1的话，它的扫描范围应该是360度和12米。现在生生被挡掉了大约45度角。\n- 摄像头的摆放比起原来的设计是降级了，而且摆放位置也很尴尬。原本有两个舵机可以实现2个自由度的角度变换。现在直接固定在树莓派上，如果把Lidar的位置作为车头，摄像头放在后面就好比把眼睛放在后脑勺了。暂时没有找到合适的方案来解决机械上的限制。也许也可以考虑针对不同任务，改变小车前后的定义。\n","source":"_posts/RoverPi小车_第二篇_硬件选型.md","raw":"---\ntitle: RoverPi小车 第二篇：硬件选型和组装\ndate: 2019-05-14 12:00:27\ntags:\n---\n\n<img src=\"https://www.dropbox.com/s/k6q54nuwmnef8q2/IMG_20190512_204935.jpg?raw=1\" alt=\"venv\" style=\"height:300px;\" align=\"middle\">\n\n这一篇主要解决几个问题：\n\n１．计算单元\n２．运动单元驱动\n３．供电\n４．机械固定\n\n也就是说，除了小车车身，Lidar和Web Camera全部是来自新的组件．其实，仅就这几样而言也说不上很满意，只是为了尽可能得把现有组件利用起来．\n\n<!--more-->\n\n- 车身就是普通的铝合金底盘和四个轮子，在某宝或者亚马逊逊上可以找到很多替代；\n- Lidar看起来是个仿品，山寨的一代RPLidar，建议大家直接使用原版，毕竟有充分的官方软件支持。我后面会介绍到的SLAM程序也是参考自RPLidar ；\n- Ｗeb Camera也可以用Raspberry Pi Camera替代.\n\n\n题外话，原本的众筹项目简直就是诈骗项目在 Kickstarter 上被当成诈骗项目了。骗钱是实打实了，可以长达7个月没有更新。\n\n## 概述\n\n下表是我所使用的机械和硬件单元：\n\n| 组件                                                                                   | 价格      | 来源                                                                                                                                                                                                                                                                                                                                                               |\n| ------------------------------------------------------------------------------------ | ------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| 四轮小车底盘，包含２个直流电机带编码器，２个履带，４个车轮                                                        | $20（估计） | 既有<br>可替换为：任意机器人小车底盘，大多不超过$20．给一个例子：https://www.amazon.com/Rubber-Aluminum-Chassis-Graduation-Project/dp/B07B8Z7J8J/ref=sr_1_18?crid=338XA4RRM8NAW&keywords=robot+car+chassis&qid=1557703804&s=gateway&sprefix=robot+car+c%2Caps%2C198&sr=8-18                                                                                                                   |\n| 2D Lidar                                                                             | $99（估计） | 既有，不知名<br>可替换为：[**RPLiDAR A1M8 360 Degree Laser Scanner Kit - 12M Range**](https://www.amazon.com/RPLiDAR-A1M8-Degree-Laser-Scanner/dp/B07H7X3SFF/ref=sr_1_3?keywords=rplidar&qid=1557703713&s=gateway&sr=8-3)**,** [$99.00](https://www.amazon.com/RPLiDAR-A1M8-Degree-Laser-Scanner/dp/B07H7X3SFF/ref=sr_1_3?keywords=rplidar&qid=1557703713&s=gateway&sr=8-3) |\n| Web Camera                                                                           | $14（估计） | 既有，不知名<br>可替换为：Raspberry Pi Camera                                                                                                                                                                                                                                                                                                                               |\n| 树莓派３B+                                                                               | $38.10  | https://www.amazon.com/gp/product/B07BDR5PDW/ref=ppx_yo_dt_b_asin_title_o04_s00?ie=UTF8&psc=1                                                                                                                                                                                                                                                                    |\n| SanDisk Extreme 32GB microSDHC UHS-I Card with Adapter                               | $14.49  | https://www.amazon.com/gp/product/B01HU3Q6F2/ref=ppx_yo_dt_b_asin_title_o02_s00?ie=UTF8&psc=1                                                                                                                                                                                                                                                                    |\n| L298N电机驱动板                                                                           | $6.99   | https://www.amazon.com/gp/product/B014KMHSW6/ref=ppx_yo_dt_b_asin_title_o00_s00?ie=UTF8&psc=1                                                                                                                                                                                                                                                                    |\n| 电池盒                                                                                  | $4.99   | https://www.amazon.com/gp/product/B07DBM11LF/ref=ppx_yo_dt_b_asin_title_o01_s00?ie=UTF8&psc=1                                                                                                                                                                                                                                                                    |\n| 树莓派供电模块Li电池                                                                          | $17.89  | https://www.amazon.com/gp/product/B06W9FWDSP/ref=ppx_yo_dt_b_asin_title_o04_s00?ie=UTF8&psc=1                                                                                                                                                                                                                                                                    |\n| eBoot 180 Pieces Male Female Hex Brass Spacer Standoff Screw Nut Assortment Kit (M3) | $10.99  | https://www.amazon.com/gp/product/B0756CW6Y2/ref=ppx_yo_dt_b_asin_title_o07_s00?ie=UTF8&psc=1                                                                                                                                                                                                                                                                    |\n| 树莓派扩展板                                                                               | $6.19   | https://www.amazon.com/gp/product/B074T7D1V5/ref=ppx_yo_dt_b_asin_title_o07_s00?ie=UTF8&psc=1                                                                                                                                                                                                                                                                    |\n| JST PH 2.0MM连接线                                                                      | $7.69   | https://www.amazon.com/gp/product/B07FBDZHNX/ref=ppx_yo_dt_b_asin_title_o00_s00?ie=UTF8&psc=1                                                                                                                                                                                                                                                                    |\n| 电路连接跳线                                                                               | $6.78   | https://www.amazon.com/gp/product/B01LZF1ZSZ/ref=ppx_yo_dt_b_asin_title_o08_s00?ie=UTF8&psc=1                                                                                                                                                                                                                                                                    |\n\n\n\n## 计算单元\n\n其实这一部分没有什么悬念，小车底盘的尺寸以及功能，用Raspberry Pi非常适合，这里选用最新的版本，Raspberry Pi 3 B+．如果还会做下一代的话，我想我会有兴趣尝试Nvidia Jetson Nano，并且尝试AI级别的运算．\n\n\n![Raspberry Pi 3](https://www.raspberrypi.org/magpi/wp-content/uploads/2017/04/Raspberry-Pi-3.jpg)\n\n\n\n## L298N电机驱动板\n\n\n![L298N 电机驱动板](http://fritzing.org/media/fritzing-repo/projects/w/working-with-l298n-dc-motor-driver/images/Dual-H-Bridge-DC-Stepper-Motor-Drive-Controller-Board-Module-Arduino-L298N-HE2.jpg)\n\n\nL298N驱动板算是一个比较常规的用于驱动两路直流电机的板子，与树莓派的配合使用也很常见．网上用很多教程，这里参考了这一篇博文：\n\n\nhttps://www.electronicshub.org/raspberry-pi-l298n-interface-tutorial-control-dc-motor-l298n-raspberry-pi/\n\n\n\n## 供电方案\n\n自己设计的项目，坑很多，很多问题是一边想一边解决一边又遇到新的问题．\n\nL298N本身需要6-12V的供电，我一开始就想到用一个装４个５号电池的电池盒为其供电．那么，从L298N还可以引出5V的电压，似乎正好可以解决树莓派的供电．但实验发现不可行，电机的供电是可以满足，但无法同时驱动树莓派甚至Lidar.\n\n所以，特意搜寻了可以给树莓派供电又容易叠加安装固定的电池，最后选择了这款带扩展板的Li电池，令人满意．\n\n\n![](https://paper-attachments.dropbox.com/s_F2F5BA21703E8CFE0F69C6C645220F346DE5C1561E56AE695BBFC0012CFC9BA8_1557718528861_718PGO1TDgL._SL1500_.jpg)\n\n\n\n## 机械固定\n\n原本CrazyPi的设计中，负责固定电路板的金属柱加入了磁性，为的是方便随时安装和拆卸，但对我现在的搭配，这个磁吸设计就是败笔．单单电池盒的重量，就使得磁力无法负荷基本的稳定要求，还经常连同连接的线一起车下来，非常恼人．\n\n既然原来的CrazyPi电路板已经被我放弃，我就把它放到车身下面，用于固定金属柱．L298N也同样固定在车身下方，便于连接电机．\n\n\n![](https://www.dropbox.com/s/k6q54nuwmnef8q2/IMG_20190512_204935.jpg?raw=1)\n\n\n最后小车完成图如下：\n\n![](https://paper-attachments.dropbox.com/s_F2F5BA21703E8CFE0F69C6C645220F346DE5C1561E56AE695BBFC0012CFC9BA8_1557718939652_IMG_1659.JPG)\n\n\n\n## 后记\n\n上图的设计应当说还是有一些待改进的地方甚至缺陷，有些坑还没有踩透。\n\n\n- RoverPi小车电机驱动的测试一开始只做了悬空的测试，基本的向前向后和转向远动是听从指令的。一旦放到地面上，转向是死活也转不动。一方面是来自于车体重量大幅加重了，尤其是干电池组。另一方面，L298N是一个比较老的电机驱动板了，看起来需要更高电压和更大电池容量的组合。不同于两轮的差分运动(Differential Steer)，四轮的差分运动（英文叫Skid Steer）需要克服更大的滑动阻力。\n- 另一个设计上的缺陷是，树莓派和电池组的叠加，完全挡住了2D Lidar的部分扫描范围。这个Lidar我没有官方的参数表，如果是比照RPLidar A1的话，它的扫描范围应该是360度和12米。现在生生被挡掉了大约45度角。\n- 摄像头的摆放比起原来的设计是降级了，而且摆放位置也很尴尬。原本有两个舵机可以实现2个自由度的角度变换。现在直接固定在树莓派上，如果把Lidar的位置作为车头，摄像头放在后面就好比把眼睛放在后脑勺了。暂时没有找到合适的方案来解决机械上的限制。也许也可以考虑针对不同任务，改变小车前后的定义。\n","slug":"RoverPi小车_第二篇_硬件选型","published":1,"updated":"2019-06-20T17:55:50.041Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjysz5nla000ct3myy00uwvs7","content":"<p><img src=\"https://www.dropbox.com/s/k6q54nuwmnef8q2/IMG_20190512_204935.jpg?raw=1\" alt=\"venv\" style=\"height:300px;\" align=\"middle\"></p>\n<p>这一篇主要解决几个问题：</p>\n<p>１．计算单元<br>２．运动单元驱动<br>３．供电<br>４．机械固定</p>\n<p>也就是说，除了小车车身，Lidar和Web Camera全部是来自新的组件．其实，仅就这几样而言也说不上很满意，只是为了尽可能得把现有组件利用起来．</p>\n<a id=\"more\"></a>\n<ul>\n<li>车身就是普通的铝合金底盘和四个轮子，在某宝或者亚马逊逊上可以找到很多替代；</li>\n<li>Lidar看起来是个仿品，山寨的一代RPLidar，建议大家直接使用原版，毕竟有充分的官方软件支持。我后面会介绍到的SLAM程序也是参考自RPLidar ；</li>\n<li>Ｗeb Camera也可以用Raspberry Pi Camera替代.</li>\n</ul>\n<p>题外话，原本的众筹项目简直就是诈骗项目在 Kickstarter 上被当成诈骗项目了。骗钱是实打实了，可以长达7个月没有更新。</p>\n<h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><p>下表是我所使用的机械和硬件单元：</p>\n<table>\n<thead>\n<tr>\n<th>组件</th>\n<th>价格</th>\n<th>来源</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>四轮小车底盘，包含２个直流电机带编码器，２个履带，４个车轮</td>\n<td>$20（估计）</td>\n<td>既有<br>可替换为：任意机器人小车底盘，大多不超过$20．给一个例子：<a href=\"https://www.amazon.com/Rubber-Aluminum-Chassis-Graduation-Project/dp/B07B8Z7J8J/ref=sr_1_18?crid=338XA4RRM8NAW&amp;keywords=robot+car+chassis&amp;qid=1557703804&amp;s=gateway&amp;sprefix=robot+car+c%2Caps%2C198&amp;sr=8-18\" target=\"_blank\" rel=\"noopener\">https://www.amazon.com/Rubber-Aluminum-Chassis-Graduation-Project/dp/B07B8Z7J8J/ref=sr_1_18?crid=338XA4RRM8NAW&amp;keywords=robot+car+chassis&amp;qid=1557703804&amp;s=gateway&amp;sprefix=robot+car+c%2Caps%2C198&amp;sr=8-18</a></td>\n</tr>\n<tr>\n<td>2D Lidar</td>\n<td>$99（估计）</td>\n<td>既有，不知名<br>可替换为：<a href=\"https://www.amazon.com/RPLiDAR-A1M8-Degree-Laser-Scanner/dp/B07H7X3SFF/ref=sr_1_3?keywords=rplidar&amp;qid=1557703713&amp;s=gateway&amp;sr=8-3\" target=\"_blank\" rel=\"noopener\"><strong>RPLiDAR A1M8 360 Degree Laser Scanner Kit - 12M Range</strong></a><strong>,</strong> <a href=\"https://www.amazon.com/RPLiDAR-A1M8-Degree-Laser-Scanner/dp/B07H7X3SFF/ref=sr_1_3?keywords=rplidar&amp;qid=1557703713&amp;s=gateway&amp;sr=8-3\" target=\"_blank\" rel=\"noopener\">$99.00</a></td>\n</tr>\n<tr>\n<td>Web Camera</td>\n<td>$14（估计）</td>\n<td>既有，不知名<br>可替换为：Raspberry Pi Camera</td>\n</tr>\n<tr>\n<td>树莓派３B+</td>\n<td>$38.10</td>\n<td><a href=\"https://www.amazon.com/gp/product/B07BDR5PDW/ref=ppx_yo_dt_b_asin_title_o04_s00?ie=UTF8&amp;psc=1\" target=\"_blank\" rel=\"noopener\">https://www.amazon.com/gp/product/B07BDR5PDW/ref=ppx_yo_dt_b_asin_title_o04_s00?ie=UTF8&amp;psc=1</a></td>\n</tr>\n<tr>\n<td>SanDisk Extreme 32GB microSDHC UHS-I Card with Adapter</td>\n<td>$14.49</td>\n<td><a href=\"https://www.amazon.com/gp/product/B01HU3Q6F2/ref=ppx_yo_dt_b_asin_title_o02_s00?ie=UTF8&amp;psc=1\" target=\"_blank\" rel=\"noopener\">https://www.amazon.com/gp/product/B01HU3Q6F2/ref=ppx_yo_dt_b_asin_title_o02_s00?ie=UTF8&amp;psc=1</a></td>\n</tr>\n<tr>\n<td>L298N电机驱动板</td>\n<td>$6.99</td>\n<td><a href=\"https://www.amazon.com/gp/product/B014KMHSW6/ref=ppx_yo_dt_b_asin_title_o00_s00?ie=UTF8&amp;psc=1\" target=\"_blank\" rel=\"noopener\">https://www.amazon.com/gp/product/B014KMHSW6/ref=ppx_yo_dt_b_asin_title_o00_s00?ie=UTF8&amp;psc=1</a></td>\n</tr>\n<tr>\n<td>电池盒</td>\n<td>$4.99</td>\n<td><a href=\"https://www.amazon.com/gp/product/B07DBM11LF/ref=ppx_yo_dt_b_asin_title_o01_s00?ie=UTF8&amp;psc=1\" target=\"_blank\" rel=\"noopener\">https://www.amazon.com/gp/product/B07DBM11LF/ref=ppx_yo_dt_b_asin_title_o01_s00?ie=UTF8&amp;psc=1</a></td>\n</tr>\n<tr>\n<td>树莓派供电模块Li电池</td>\n<td>$17.89</td>\n<td><a href=\"https://www.amazon.com/gp/product/B06W9FWDSP/ref=ppx_yo_dt_b_asin_title_o04_s00?ie=UTF8&amp;psc=1\" target=\"_blank\" rel=\"noopener\">https://www.amazon.com/gp/product/B06W9FWDSP/ref=ppx_yo_dt_b_asin_title_o04_s00?ie=UTF8&amp;psc=1</a></td>\n</tr>\n<tr>\n<td>eBoot 180 Pieces Male Female Hex Brass Spacer Standoff Screw Nut Assortment Kit (M3)</td>\n<td>$10.99</td>\n<td><a href=\"https://www.amazon.com/gp/product/B0756CW6Y2/ref=ppx_yo_dt_b_asin_title_o07_s00?ie=UTF8&amp;psc=1\" target=\"_blank\" rel=\"noopener\">https://www.amazon.com/gp/product/B0756CW6Y2/ref=ppx_yo_dt_b_asin_title_o07_s00?ie=UTF8&amp;psc=1</a></td>\n</tr>\n<tr>\n<td>树莓派扩展板</td>\n<td>$6.19</td>\n<td><a href=\"https://www.amazon.com/gp/product/B074T7D1V5/ref=ppx_yo_dt_b_asin_title_o07_s00?ie=UTF8&amp;psc=1\" target=\"_blank\" rel=\"noopener\">https://www.amazon.com/gp/product/B074T7D1V5/ref=ppx_yo_dt_b_asin_title_o07_s00?ie=UTF8&amp;psc=1</a></td>\n</tr>\n<tr>\n<td>JST PH 2.0MM连接线</td>\n<td>$7.69</td>\n<td><a href=\"https://www.amazon.com/gp/product/B07FBDZHNX/ref=ppx_yo_dt_b_asin_title_o00_s00?ie=UTF8&amp;psc=1\" target=\"_blank\" rel=\"noopener\">https://www.amazon.com/gp/product/B07FBDZHNX/ref=ppx_yo_dt_b_asin_title_o00_s00?ie=UTF8&amp;psc=1</a></td>\n</tr>\n<tr>\n<td>电路连接跳线</td>\n<td>$6.78</td>\n<td><a href=\"https://www.amazon.com/gp/product/B01LZF1ZSZ/ref=ppx_yo_dt_b_asin_title_o08_s00?ie=UTF8&amp;psc=1\" target=\"_blank\" rel=\"noopener\">https://www.amazon.com/gp/product/B01LZF1ZSZ/ref=ppx_yo_dt_b_asin_title_o08_s00?ie=UTF8&amp;psc=1</a></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"计算单元\"><a href=\"#计算单元\" class=\"headerlink\" title=\"计算单元\"></a>计算单元</h2><p>其实这一部分没有什么悬念，小车底盘的尺寸以及功能，用Raspberry Pi非常适合，这里选用最新的版本，Raspberry Pi 3 B+．如果还会做下一代的话，我想我会有兴趣尝试Nvidia Jetson Nano，并且尝试AI级别的运算．</p>\n<p><img src=\"https://www.raspberrypi.org/magpi/wp-content/uploads/2017/04/Raspberry-Pi-3.jpg\" alt=\"Raspberry Pi 3\"></p>\n<h2 id=\"L298N电机驱动板\"><a href=\"#L298N电机驱动板\" class=\"headerlink\" title=\"L298N电机驱动板\"></a>L298N电机驱动板</h2><p><img src=\"http://fritzing.org/media/fritzing-repo/projects/w/working-with-l298n-dc-motor-driver/images/Dual-H-Bridge-DC-Stepper-Motor-Drive-Controller-Board-Module-Arduino-L298N-HE2.jpg\" alt=\"L298N 电机驱动板\"></p>\n<p>L298N驱动板算是一个比较常规的用于驱动两路直流电机的板子，与树莓派的配合使用也很常见．网上用很多教程，这里参考了这一篇博文：</p>\n<p><a href=\"https://www.electronicshub.org/raspberry-pi-l298n-interface-tutorial-control-dc-motor-l298n-raspberry-pi/\" target=\"_blank\" rel=\"noopener\">https://www.electronicshub.org/raspberry-pi-l298n-interface-tutorial-control-dc-motor-l298n-raspberry-pi/</a></p>\n<h2 id=\"供电方案\"><a href=\"#供电方案\" class=\"headerlink\" title=\"供电方案\"></a>供电方案</h2><p>自己设计的项目，坑很多，很多问题是一边想一边解决一边又遇到新的问题．</p>\n<p>L298N本身需要6-12V的供电，我一开始就想到用一个装４个５号电池的电池盒为其供电．那么，从L298N还可以引出5V的电压，似乎正好可以解决树莓派的供电．但实验发现不可行，电机的供电是可以满足，但无法同时驱动树莓派甚至Lidar.</p>\n<p>所以，特意搜寻了可以给树莓派供电又容易叠加安装固定的电池，最后选择了这款带扩展板的Li电池，令人满意．</p>\n<p><img src=\"https://paper-attachments.dropbox.com/s_F2F5BA21703E8CFE0F69C6C645220F346DE5C1561E56AE695BBFC0012CFC9BA8_1557718528861_718PGO1TDgL._SL1500_.jpg\" alt></p>\n<h2 id=\"机械固定\"><a href=\"#机械固定\" class=\"headerlink\" title=\"机械固定\"></a>机械固定</h2><p>原本CrazyPi的设计中，负责固定电路板的金属柱加入了磁性，为的是方便随时安装和拆卸，但对我现在的搭配，这个磁吸设计就是败笔．单单电池盒的重量，就使得磁力无法负荷基本的稳定要求，还经常连同连接的线一起车下来，非常恼人．</p>\n<p>既然原来的CrazyPi电路板已经被我放弃，我就把它放到车身下面，用于固定金属柱．L298N也同样固定在车身下方，便于连接电机．</p>\n<p><img src=\"https://www.dropbox.com/s/k6q54nuwmnef8q2/IMG_20190512_204935.jpg?raw=1\" alt></p>\n<p>最后小车完成图如下：</p>\n<p><img src=\"https://paper-attachments.dropbox.com/s_F2F5BA21703E8CFE0F69C6C645220F346DE5C1561E56AE695BBFC0012CFC9BA8_1557718939652_IMG_1659.JPG\" alt></p>\n<h2 id=\"后记\"><a href=\"#后记\" class=\"headerlink\" title=\"后记\"></a>后记</h2><p>上图的设计应当说还是有一些待改进的地方甚至缺陷，有些坑还没有踩透。</p>\n<ul>\n<li>RoverPi小车电机驱动的测试一开始只做了悬空的测试，基本的向前向后和转向远动是听从指令的。一旦放到地面上，转向是死活也转不动。一方面是来自于车体重量大幅加重了，尤其是干电池组。另一方面，L298N是一个比较老的电机驱动板了，看起来需要更高电压和更大电池容量的组合。不同于两轮的差分运动(Differential Steer)，四轮的差分运动（英文叫Skid Steer）需要克服更大的滑动阻力。</li>\n<li>另一个设计上的缺陷是，树莓派和电池组的叠加，完全挡住了2D Lidar的部分扫描范围。这个Lidar我没有官方的参数表，如果是比照RPLidar A1的话，它的扫描范围应该是360度和12米。现在生生被挡掉了大约45度角。</li>\n<li>摄像头的摆放比起原来的设计是降级了，而且摆放位置也很尴尬。原本有两个舵机可以实现2个自由度的角度变换。现在直接固定在树莓派上，如果把Lidar的位置作为车头，摄像头放在后面就好比把眼睛放在后脑勺了。暂时没有找到合适的方案来解决机械上的限制。也许也可以考虑针对不同任务，改变小车前后的定义。</li>\n</ul>\n","site":{"data":{}},"excerpt":"<p><img src=\"https://www.dropbox.com/s/k6q54nuwmnef8q2/IMG_20190512_204935.jpg?raw=1\" alt=\"venv\" style=\"height:300px;\" align=\"middle\"></p>\n<p>这一篇主要解决几个问题：</p>\n<p>１．计算单元<br>２．运动单元驱动<br>３．供电<br>４．机械固定</p>\n<p>也就是说，除了小车车身，Lidar和Web Camera全部是来自新的组件．其实，仅就这几样而言也说不上很满意，只是为了尽可能得把现有组件利用起来．</p>","more":"<ul>\n<li>车身就是普通的铝合金底盘和四个轮子，在某宝或者亚马逊逊上可以找到很多替代；</li>\n<li>Lidar看起来是个仿品，山寨的一代RPLidar，建议大家直接使用原版，毕竟有充分的官方软件支持。我后面会介绍到的SLAM程序也是参考自RPLidar ；</li>\n<li>Ｗeb Camera也可以用Raspberry Pi Camera替代.</li>\n</ul>\n<p>题外话，原本的众筹项目简直就是诈骗项目在 Kickstarter 上被当成诈骗项目了。骗钱是实打实了，可以长达7个月没有更新。</p>\n<h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><p>下表是我所使用的机械和硬件单元：</p>\n<table>\n<thead>\n<tr>\n<th>组件</th>\n<th>价格</th>\n<th>来源</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>四轮小车底盘，包含２个直流电机带编码器，２个履带，４个车轮</td>\n<td>$20（估计）</td>\n<td>既有<br>可替换为：任意机器人小车底盘，大多不超过$20．给一个例子：<a href=\"https://www.amazon.com/Rubber-Aluminum-Chassis-Graduation-Project/dp/B07B8Z7J8J/ref=sr_1_18?crid=338XA4RRM8NAW&amp;keywords=robot+car+chassis&amp;qid=1557703804&amp;s=gateway&amp;sprefix=robot+car+c%2Caps%2C198&amp;sr=8-18\" target=\"_blank\" rel=\"noopener\">https://www.amazon.com/Rubber-Aluminum-Chassis-Graduation-Project/dp/B07B8Z7J8J/ref=sr_1_18?crid=338XA4RRM8NAW&amp;keywords=robot+car+chassis&amp;qid=1557703804&amp;s=gateway&amp;sprefix=robot+car+c%2Caps%2C198&amp;sr=8-18</a></td>\n</tr>\n<tr>\n<td>2D Lidar</td>\n<td>$99（估计）</td>\n<td>既有，不知名<br>可替换为：<a href=\"https://www.amazon.com/RPLiDAR-A1M8-Degree-Laser-Scanner/dp/B07H7X3SFF/ref=sr_1_3?keywords=rplidar&amp;qid=1557703713&amp;s=gateway&amp;sr=8-3\" target=\"_blank\" rel=\"noopener\"><strong>RPLiDAR A1M8 360 Degree Laser Scanner Kit - 12M Range</strong></a><strong>,</strong> <a href=\"https://www.amazon.com/RPLiDAR-A1M8-Degree-Laser-Scanner/dp/B07H7X3SFF/ref=sr_1_3?keywords=rplidar&amp;qid=1557703713&amp;s=gateway&amp;sr=8-3\" target=\"_blank\" rel=\"noopener\">$99.00</a></td>\n</tr>\n<tr>\n<td>Web Camera</td>\n<td>$14（估计）</td>\n<td>既有，不知名<br>可替换为：Raspberry Pi Camera</td>\n</tr>\n<tr>\n<td>树莓派３B+</td>\n<td>$38.10</td>\n<td><a href=\"https://www.amazon.com/gp/product/B07BDR5PDW/ref=ppx_yo_dt_b_asin_title_o04_s00?ie=UTF8&amp;psc=1\" target=\"_blank\" rel=\"noopener\">https://www.amazon.com/gp/product/B07BDR5PDW/ref=ppx_yo_dt_b_asin_title_o04_s00?ie=UTF8&amp;psc=1</a></td>\n</tr>\n<tr>\n<td>SanDisk Extreme 32GB microSDHC UHS-I Card with Adapter</td>\n<td>$14.49</td>\n<td><a href=\"https://www.amazon.com/gp/product/B01HU3Q6F2/ref=ppx_yo_dt_b_asin_title_o02_s00?ie=UTF8&amp;psc=1\" target=\"_blank\" rel=\"noopener\">https://www.amazon.com/gp/product/B01HU3Q6F2/ref=ppx_yo_dt_b_asin_title_o02_s00?ie=UTF8&amp;psc=1</a></td>\n</tr>\n<tr>\n<td>L298N电机驱动板</td>\n<td>$6.99</td>\n<td><a href=\"https://www.amazon.com/gp/product/B014KMHSW6/ref=ppx_yo_dt_b_asin_title_o00_s00?ie=UTF8&amp;psc=1\" target=\"_blank\" rel=\"noopener\">https://www.amazon.com/gp/product/B014KMHSW6/ref=ppx_yo_dt_b_asin_title_o00_s00?ie=UTF8&amp;psc=1</a></td>\n</tr>\n<tr>\n<td>电池盒</td>\n<td>$4.99</td>\n<td><a href=\"https://www.amazon.com/gp/product/B07DBM11LF/ref=ppx_yo_dt_b_asin_title_o01_s00?ie=UTF8&amp;psc=1\" target=\"_blank\" rel=\"noopener\">https://www.amazon.com/gp/product/B07DBM11LF/ref=ppx_yo_dt_b_asin_title_o01_s00?ie=UTF8&amp;psc=1</a></td>\n</tr>\n<tr>\n<td>树莓派供电模块Li电池</td>\n<td>$17.89</td>\n<td><a href=\"https://www.amazon.com/gp/product/B06W9FWDSP/ref=ppx_yo_dt_b_asin_title_o04_s00?ie=UTF8&amp;psc=1\" target=\"_blank\" rel=\"noopener\">https://www.amazon.com/gp/product/B06W9FWDSP/ref=ppx_yo_dt_b_asin_title_o04_s00?ie=UTF8&amp;psc=1</a></td>\n</tr>\n<tr>\n<td>eBoot 180 Pieces Male Female Hex Brass Spacer Standoff Screw Nut Assortment Kit (M3)</td>\n<td>$10.99</td>\n<td><a href=\"https://www.amazon.com/gp/product/B0756CW6Y2/ref=ppx_yo_dt_b_asin_title_o07_s00?ie=UTF8&amp;psc=1\" target=\"_blank\" rel=\"noopener\">https://www.amazon.com/gp/product/B0756CW6Y2/ref=ppx_yo_dt_b_asin_title_o07_s00?ie=UTF8&amp;psc=1</a></td>\n</tr>\n<tr>\n<td>树莓派扩展板</td>\n<td>$6.19</td>\n<td><a href=\"https://www.amazon.com/gp/product/B074T7D1V5/ref=ppx_yo_dt_b_asin_title_o07_s00?ie=UTF8&amp;psc=1\" target=\"_blank\" rel=\"noopener\">https://www.amazon.com/gp/product/B074T7D1V5/ref=ppx_yo_dt_b_asin_title_o07_s00?ie=UTF8&amp;psc=1</a></td>\n</tr>\n<tr>\n<td>JST PH 2.0MM连接线</td>\n<td>$7.69</td>\n<td><a href=\"https://www.amazon.com/gp/product/B07FBDZHNX/ref=ppx_yo_dt_b_asin_title_o00_s00?ie=UTF8&amp;psc=1\" target=\"_blank\" rel=\"noopener\">https://www.amazon.com/gp/product/B07FBDZHNX/ref=ppx_yo_dt_b_asin_title_o00_s00?ie=UTF8&amp;psc=1</a></td>\n</tr>\n<tr>\n<td>电路连接跳线</td>\n<td>$6.78</td>\n<td><a href=\"https://www.amazon.com/gp/product/B01LZF1ZSZ/ref=ppx_yo_dt_b_asin_title_o08_s00?ie=UTF8&amp;psc=1\" target=\"_blank\" rel=\"noopener\">https://www.amazon.com/gp/product/B01LZF1ZSZ/ref=ppx_yo_dt_b_asin_title_o08_s00?ie=UTF8&amp;psc=1</a></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"计算单元\"><a href=\"#计算单元\" class=\"headerlink\" title=\"计算单元\"></a>计算单元</h2><p>其实这一部分没有什么悬念，小车底盘的尺寸以及功能，用Raspberry Pi非常适合，这里选用最新的版本，Raspberry Pi 3 B+．如果还会做下一代的话，我想我会有兴趣尝试Nvidia Jetson Nano，并且尝试AI级别的运算．</p>\n<p><img src=\"https://www.raspberrypi.org/magpi/wp-content/uploads/2017/04/Raspberry-Pi-3.jpg\" alt=\"Raspberry Pi 3\"></p>\n<h2 id=\"L298N电机驱动板\"><a href=\"#L298N电机驱动板\" class=\"headerlink\" title=\"L298N电机驱动板\"></a>L298N电机驱动板</h2><p><img src=\"http://fritzing.org/media/fritzing-repo/projects/w/working-with-l298n-dc-motor-driver/images/Dual-H-Bridge-DC-Stepper-Motor-Drive-Controller-Board-Module-Arduino-L298N-HE2.jpg\" alt=\"L298N 电机驱动板\"></p>\n<p>L298N驱动板算是一个比较常规的用于驱动两路直流电机的板子，与树莓派的配合使用也很常见．网上用很多教程，这里参考了这一篇博文：</p>\n<p><a href=\"https://www.electronicshub.org/raspberry-pi-l298n-interface-tutorial-control-dc-motor-l298n-raspberry-pi/\" target=\"_blank\" rel=\"noopener\">https://www.electronicshub.org/raspberry-pi-l298n-interface-tutorial-control-dc-motor-l298n-raspberry-pi/</a></p>\n<h2 id=\"供电方案\"><a href=\"#供电方案\" class=\"headerlink\" title=\"供电方案\"></a>供电方案</h2><p>自己设计的项目，坑很多，很多问题是一边想一边解决一边又遇到新的问题．</p>\n<p>L298N本身需要6-12V的供电，我一开始就想到用一个装４个５号电池的电池盒为其供电．那么，从L298N还可以引出5V的电压，似乎正好可以解决树莓派的供电．但实验发现不可行，电机的供电是可以满足，但无法同时驱动树莓派甚至Lidar.</p>\n<p>所以，特意搜寻了可以给树莓派供电又容易叠加安装固定的电池，最后选择了这款带扩展板的Li电池，令人满意．</p>\n<p><img src=\"https://paper-attachments.dropbox.com/s_F2F5BA21703E8CFE0F69C6C645220F346DE5C1561E56AE695BBFC0012CFC9BA8_1557718528861_718PGO1TDgL._SL1500_.jpg\" alt></p>\n<h2 id=\"机械固定\"><a href=\"#机械固定\" class=\"headerlink\" title=\"机械固定\"></a>机械固定</h2><p>原本CrazyPi的设计中，负责固定电路板的金属柱加入了磁性，为的是方便随时安装和拆卸，但对我现在的搭配，这个磁吸设计就是败笔．单单电池盒的重量，就使得磁力无法负荷基本的稳定要求，还经常连同连接的线一起车下来，非常恼人．</p>\n<p>既然原来的CrazyPi电路板已经被我放弃，我就把它放到车身下面，用于固定金属柱．L298N也同样固定在车身下方，便于连接电机．</p>\n<p><img src=\"https://www.dropbox.com/s/k6q54nuwmnef8q2/IMG_20190512_204935.jpg?raw=1\" alt></p>\n<p>最后小车完成图如下：</p>\n<p><img src=\"https://paper-attachments.dropbox.com/s_F2F5BA21703E8CFE0F69C6C645220F346DE5C1561E56AE695BBFC0012CFC9BA8_1557718939652_IMG_1659.JPG\" alt></p>\n<h2 id=\"后记\"><a href=\"#后记\" class=\"headerlink\" title=\"后记\"></a>后记</h2><p>上图的设计应当说还是有一些待改进的地方甚至缺陷，有些坑还没有踩透。</p>\n<ul>\n<li>RoverPi小车电机驱动的测试一开始只做了悬空的测试，基本的向前向后和转向远动是听从指令的。一旦放到地面上，转向是死活也转不动。一方面是来自于车体重量大幅加重了，尤其是干电池组。另一方面，L298N是一个比较老的电机驱动板了，看起来需要更高电压和更大电池容量的组合。不同于两轮的差分运动(Differential Steer)，四轮的差分运动（英文叫Skid Steer）需要克服更大的滑动阻力。</li>\n<li>另一个设计上的缺陷是，树莓派和电池组的叠加，完全挡住了2D Lidar的部分扫描范围。这个Lidar我没有官方的参数表，如果是比照RPLidar A1的话，它的扫描范围应该是360度和12米。现在生生被挡掉了大约45度角。</li>\n<li>摄像头的摆放比起原来的设计是降级了，而且摆放位置也很尴尬。原本有两个舵机可以实现2个自由度的角度变换。现在直接固定在树莓派上，如果把Lidar的位置作为车头，摄像头放在后面就好比把眼睛放在后脑勺了。暂时没有找到合适的方案来解决机械上的限制。也许也可以考虑针对不同任务，改变小车前后的定义。</li>\n</ul>"}],"PostAsset":[{"_id":"source/_posts/代码赏析_Stanley_Path_Tracking_Controller/stanley-equation.png","slug":"stanley-equation.png","post":"cjysz5ng5000at3myqdj4kjtd","modified":0,"renderable":0},{"_id":"source/_posts/代码赏析_Stanley_Path_Tracking_Controller/stanley-geometry.png","slug":"stanley-geometry.png","post":"cjysz5ng5000at3myqdj4kjtd","modified":0,"renderable":0}],"PostCategory":[],"PostTag":[],"Tag":[]}}